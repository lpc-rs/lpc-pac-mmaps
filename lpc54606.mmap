0x40000000 A PERIPHERAL SYSCON
0x40000010 B  REGISTER AHBMATPRIO (rw): AHB multilayer matrix priority control
0x40000010 C   FIELD 00w02 PRI_ICODE (rw): I-Code bus priority.
0x40000010 C   FIELD 02w02 PRI_DCODE (rw): D-Code bus priority.
0x40000010 C   FIELD 04w02 PRI_SYS (rw): System bus priority.
0x40000010 C   FIELD 06w04 PRI_DMA (rw): DMA controller priority.
0x40000010 C   FIELD 10w02 PRI_ETH (rw): Ethernet DMA priority.
0x40000010 C   FIELD 12w02 PRI_LCD (rw): LCD DMA priority.
0x40000010 C   FIELD 14w02 PRI_USB0 (rw): USB0 DMA priority.
0x40000010 C   FIELD 16w02 PRI_USB1 (rw): USB1 DMA priority.
0x40000010 C   FIELD 18w02 PRI_SDIO (rw): SDIO priority.
0x40000010 C   FIELD 20w02 PRI_MCAN1 (rw): MCAN1 priority.
0x40000010 C   FIELD 22w02 PRI_MCAN2 (rw): MCAN2 priority.
0x40000010 C   FIELD 24w02 PRI_SHA (rw): SHA priority.
0x40000040 B  REGISTER SYSTCKCAL (rw): System tick counter calibration
0x40000040 C   FIELD 00w24 CAL (rw): System tick timer calibration value.
0x40000040 C   FIELD 24w01 SKEW (rw): Initial value for the Systick timer.
0x40000040 C   FIELD 25w01 NOREF (rw): Initial value for the Systick timer.
0x40000048 B  REGISTER NMISRC (rw): NMI Source Select
0x40000048 C   FIELD 00w06 IRQM4 (rw): The IRQ number of the interrupt that acts as the Non-Maskable Interrupt (NMI) for the Cortex-M4, if enabled by NMIENM4.
0x40000048 C   FIELD 31w01 NMIENM4 (rw): Write a 1 to this bit to enable the Non-Maskable Interrupt (NMI) source selected by IRQM4.
0x4000004C B  REGISTER ASYNCAPBCTRL (rw): Asynchronous APB Control
0x4000004C C   FIELD 00w01 ENABLE (rw): Enables the asynchronous APB bridge and subsystem.
0x400000C0 B  REGISTER PIOPORCAP[0] (ro): POR captured value of port n
0x400000C0 C   FIELD 00w32 PIOPORCAP (ro): State of PIOn_31 through PIOn_0 at power-on reset
0x400000C4 B  REGISTER PIOPORCAP[1] (ro): POR captured value of port n
0x400000C4 C   FIELD 00w32 PIOPORCAP (ro): State of PIOn_31 through PIOn_0 at power-on reset
0x400000D0 B  REGISTER PIORESCAP[0] (ro): Reset captured value of port n
0x400000D0 C   FIELD 00w32 PIORESCAP (ro): State of PIOn_31 through PIOn_0 for resets other than POR.
0x400000D4 B  REGISTER PIORESCAP[1] (ro): Reset captured value of port n
0x400000D4 C   FIELD 00w32 PIORESCAP (ro): State of PIOn_31 through PIOn_0 for resets other than POR.
0x40000100 B  REGISTER PRESETCTRL0 (rw): Peripheral reset control n
0x40000100 C   FIELD 07w01 FLASH_RST (rw): Flash controller reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000100 C   FIELD 08w01 FMC_RST (rw): Flash accelerator reset control. Note that the FMC must not be reset while executing from flash, and must be reconfigured after reset. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000100 C   FIELD 09w01 EEPROM_RST (rw): EEPROM reset control.
0x40000100 C   FIELD 10w01 SPIFI_RST (rw): SPIFI reset control.
0x40000100 C   FIELD 11w01 MUX_RST (rw): Input mux reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000100 C   FIELD 13w01 IOCON_RST (rw): IOCON reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000100 C   FIELD 14w01 GPIO0_RST (rw): GPIO0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000100 C   FIELD 15w01 GPIO1_RST (rw): GPIO1 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000100 C   FIELD 16w01 GPIO2_RST (rw): GPIO2 reset control.
0x40000100 C   FIELD 17w01 GPIO3_RST (rw): GPIO3 reset control.
0x40000100 C   FIELD 18w01 PINT_RST (rw): Pin interrupt (PINT) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000100 C   FIELD 19w01 GINT_RST (rw): Grouped interrupt (GINT) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000100 C   FIELD 20w01 DMA0_RST (rw): DMA0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000100 C   FIELD 21w01 CRC_RST (rw): CRC generator reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000100 C   FIELD 22w01 WWDT_RST (rw): Watchdog timer reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000100 C   FIELD 27w01 ADC0_RST (rw): ADC0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 B  REGISTER PRESETCTRL1 (rw): Peripheral reset control n
0x40000104 C   FIELD 00w01 MRT_RST (rw): Multi-rate timer (MRT) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 02w01 SCT0_RST (rw): State configurable timer 0 (SCT0) reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 07w01 MCAN0_RST (rw): 0 = Clear reset to this function.
0x40000104 C   FIELD 08w01 MCAN1_RST (rw): 0 = Clear reset to this function.
0x40000104 C   FIELD 10w01 UTICK_RST (rw): Micro-tick Timer reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 11w01 FC0_RST (rw): Flexcomm 0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 12w01 FC1_RST (rw): Flexcomm 1 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 13w01 FC2_RST (rw): Flexcomm 2 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 14w01 FC3_RST (rw): Flexcomm 3 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 15w01 FC4_RST (rw): Flexcomm 4 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 16w01 FC5_RST (rw): Flexcomm 5 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 17w01 FC6_RST (rw): Flexcomm 6 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 18w01 FC7_RST (rw): Flexcomm 7 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 19w01 DMIC_RST (rw): Digital microphone interface reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 22w01 CTIMER2_RST (rw): CTIMER2 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function
0x40000104 C   FIELD 25w01 USB0D_RST (rw): USB0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 26w01 CTIMER0_RST (rw): CTIMER0 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000104 C   FIELD 27w01 CTIMER1_RST (rw): CTIMER1 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40000108 B  REGISTER PRESETCTRL2 (rw): Peripheral reset control n
0x40000108 C   FIELD 02w01 LCD_RST (rw): LCD reset control.
0x40000108 C   FIELD 03w01 SDIO_RST (rw): SDIO reset control.
0x40000108 C   FIELD 04w01 USB1H_RST (rw): USB1 Host reset control.
0x40000108 C   FIELD 05w01 USB1D_RST (rw): USB1 Device reset control.
0x40000108 C   FIELD 06w01 USB1RAM_RST (rw): USB1 RAM reset control.
0x40000108 C   FIELD 07w01 EMC_RESET (rw): EMC reset control.
0x40000108 C   FIELD 08w01 ETH_RST (rw): Ethernet reset control.
0x40000108 C   FIELD 09w01 GPIO4_RST (rw): GPIO4 reset control.
0x40000108 C   FIELD 10w01 GPIO5_RST (rw): GPIO5 reset control.
0x40000108 C   FIELD 11w01 AES_RST (rw): AES reset control.
0x40000108 C   FIELD 12w01 OTP_RST (rw): OTP reset control.
0x40000108 C   FIELD 13w01 RNG_RST (rw): RNG reset control.
0x40000108 C   FIELD 14w01 FC8_RST (rw): Flexcomm 8 reset control.
0x40000108 C   FIELD 15w01 FC9_RST (rw): Flexcomm 9 reset control.
0x40000108 C   FIELD 16w01 USB0HMR_RST (rw): USB0 HOST master reset control.
0x40000108 C   FIELD 17w01 USB0HSL_RST (rw): USB0 HOST slave reset control.
0x40000108 C   FIELD 18w01 SHA_RST (rw): SHA reset control.
0x40000108 C   FIELD 19w01 SC0_RST (rw): Smart card 0 reset control.
0x40000108 C   FIELD 20w01 SC1_RST (rw): Smart card 1 reset control.
0x40000120 B  REGISTER PRESETCTRLSET[0] (wo): Set bits in PRESETCTRLn
0x40000120 C   FIELD 00w32 RST_SET (wo): Writing ones to this register sets the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them.
0x40000124 B  REGISTER PRESETCTRLSET[1] (wo): Set bits in PRESETCTRLn
0x40000124 C   FIELD 00w32 RST_SET (wo): Writing ones to this register sets the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them.
0x40000128 B  REGISTER PRESETCTRLSET[2] (wo): Set bits in PRESETCTRLn
0x40000128 C   FIELD 00w32 RST_SET (wo): Writing ones to this register sets the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them.
0x40000140 B  REGISTER PRESETCTRLCLR[0] (wo): Clear bits in PRESETCTRLn
0x40000140 C   FIELD 00w32 RST_CLR (wo): Writing ones to this register clears the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them.
0x40000144 B  REGISTER PRESETCTRLCLR[1] (wo): Clear bits in PRESETCTRLn
0x40000144 C   FIELD 00w32 RST_CLR (wo): Writing ones to this register clears the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them.
0x40000148 B  REGISTER PRESETCTRLCLR[2] (wo): Clear bits in PRESETCTRLn
0x40000148 C   FIELD 00w32 RST_CLR (wo): Writing ones to this register clears the corresponding bit or bits in the PRESETCTRLn register, if they are implemented. Bits that do not correspond to defined bits in PRESETCTRLn are reserved and only zeroes should be written to them.
0x400001F0 B  REGISTER SYSRSTSTAT (rw): System reset status register
0x400001F0 C   FIELD 00w01 POR (rw): POR reset status
0x400001F0 C   FIELD 01w01 EXTRST (rw): Status of the external RESET pin. External reset status
0x400001F0 C   FIELD 02w01 WDT (rw): Status of the Watchdog reset
0x400001F0 C   FIELD 03w01 BOD (rw): Status of the Brown-out detect reset
0x400001F0 C   FIELD 04w01 SYSRST (rw): Status of the software system reset
0x40000200 B  REGISTER AHBCLKCTRL0 (rw): AHB Clock control n
0x40000200 C   FIELD 01w01 ROM (rw): Enables the clock for the Boot ROM. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 03w01 SRAM1 (rw): Enables the clock for SRAM1. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 04w01 SRAM2 (rw): Enables the clock for SRAM2. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 05w01 SRAM3 (rw): Enables the clock for SRAM3.
0x40000200 C   FIELD 07w01 FLASH (rw): Enables the clock for the flash controller. 0 = Disable; 1 = Enable. This clock is needed for flash programming, not for flash read.
0x40000200 C   FIELD 08w01 FMC (rw): Enables the clock for the Flash accelerator. 0 = Disable; 1 = Enable. This clock is needed if the flash is being read.
0x40000200 C   FIELD 09w01 EEPROM (rw): Enables the clock for EEPROM.
0x40000200 C   FIELD 10w01 SPIFI (rw): Enables the clock for the SPIFI. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 11w01 INPUTMUX (rw): Enables the clock for the input muxes. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 13w01 IOCON (rw): Enables the clock for the IOCON block. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 14w01 GPIO0 (rw): Enables the clock for the GPIO0 port registers. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 15w01 GPIO1 (rw): Enables the clock for the GPIO1 port registers. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 16w01 GPIO2 (rw): Enables the clock for the GPIO2 port registers.
0x40000200 C   FIELD 17w01 GPIO3 (rw): Enables the clock for the GPIO3 port registers.
0x40000200 C   FIELD 18w01 PINT (rw): Enables the clock for the pin interrupt block.0 = Disable; 1 = Enable.
0x40000200 C   FIELD 19w01 GINT (rw): Enables the clock for the grouped pin interrupt block. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 20w01 DMA (rw): Enables the clock for the DMA controller. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 21w01 CRC (rw): Enables the clock for the CRC engine. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 22w01 WWDT (rw): Enables the clock for the Watchdog Timer. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 23w01 RTC (rw): Enables the bus clock for the RTC. 0 = Disable; 1 = Enable.
0x40000200 C   FIELD 27w01 ADC0 (rw): Enables the clock for the ADC0 register interface.
0x40000204 B  REGISTER AHBCLKCTRL1 (rw): AHB Clock control n
0x40000204 C   FIELD 00w01 MRT (rw): Enables the clock for the Multi-Rate Timer.
0x40000204 C   FIELD 01w01 RIT (rw): Enables the clock for the Repetitive Interrupt Timer.
0x40000204 C   FIELD 02w01 SCT0 (rw): Enables the clock for SCT0.
0x40000204 C   FIELD 07w01 MCAN0 (rw): Enables the clock for MCAN0.
0x40000204 C   FIELD 08w01 MCAN1 (rw): Enables the clock for MCAN1.
0x40000204 C   FIELD 10w01 UTICK (rw): Enables the clock for the Micro-tick Timer. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 11w01 FLEXCOMM0 (rw): Enables the clock for Flexcomm 0. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 12w01 FLEXCOMM1 (rw): Enables the clock for Flexcomm 1. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 13w01 FLEXCOMM2 (rw): Enables the clock for Flexcomm 2. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 14w01 FLEXCOMM3 (rw): Enables the clock for Flexcomm 3. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 15w01 FLEXCOMM4 (rw): Enables the clock for Flexcomm 4. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 16w01 FLEXCOMM5 (rw): Enables the clock for Flexcomm 5. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 17w01 FLEXCOMM6 (rw): Enables the clock for Flexcomm 6. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 18w01 FLEXCOMM7 (rw): Enables the clock for Flexcomm 7. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 19w01 DMIC (rw): Enables the clock for the digital microphone interface. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 22w01 CTIMER2 (rw): Enables the clock for CTIMER 2. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 25w01 USB0D (rw): Enables the clock for the USB0 device interface. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 26w01 CTIMER0 (rw): Enables the clock for timer CTIMER0. 0 = Disable; 1 = Enable.
0x40000204 C   FIELD 27w01 CTIMER1 (rw): Enables the clock for timer CTIMER1. 0 = Disable; 1 = Enable.
0x40000208 B  REGISTER AHBCLKCTRL2 (rw): AHB Clock control n
0x40000208 C   FIELD 02w01 LCD (rw): Enables the clock for the LCD interface.
0x40000208 C   FIELD 03w01 SDIO (rw): Enables the clock for the SDIO interface.
0x40000208 C   FIELD 04w01 USB1H (rw): Enables the clock for the USB1 host interface.
0x40000208 C   FIELD 05w01 USB1D (rw): Enables the clock for the USB1 device interface.
0x40000208 C   FIELD 06w01 USB1RAM (rw): Enables the clock for the USB1 RAM interface.
0x40000208 C   FIELD 07w01 EMC (rw): Enables the clock for the EMC interface.
0x40000208 C   FIELD 08w01 ETH (rw): Enables the clock for the ethernet interface.
0x40000208 C   FIELD 09w01 GPIO4 (rw): Enables the clock for the GPIO4 interface.
0x40000208 C   FIELD 10w01 GPIO5 (rw): Enables the clock for the GPIO5 interface.
0x40000208 C   FIELD 11w01 AES (rw): Enables the clock for the AES interface.
0x40000208 C   FIELD 12w01 OTP (rw): Enables the clock for the OTP interface.
0x40000208 C   FIELD 13w01 RNG (rw): Enables the clock for the RNG interface.
0x40000208 C   FIELD 14w01 FLEXCOMM8 (rw): Enables the clock for the Flexcomm8 interface.
0x40000208 C   FIELD 15w01 FLEXCOMM9 (rw): Enables the clock for the Flexcomm9 interface.
0x40000208 C   FIELD 16w01 USB0HMR (rw): Enables the clock for the USB host master interface.
0x40000208 C   FIELD 17w01 USB0HSL (rw): Enables the clock for the USB host slave interface.
0x40000208 C   FIELD 18w01 SHA0 (rw): Enables the clock for the SHA interface.
0x40000208 C   FIELD 19w01 SC0 (rw): Enables the clock for the Smart card0 interface.
0x40000208 C   FIELD 20w01 SC1 (rw): Enables the clock for the Smart card1 interface.
0x40000220 B  REGISTER AHBCLKCTRLSET[0] (wo): Set bits in AHBCLKCTRLn
0x40000220 C   FIELD 00w32 CLK_SET (wo): Writing ones to this register sets the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them.
0x40000224 B  REGISTER AHBCLKCTRLSET[1] (wo): Set bits in AHBCLKCTRLn
0x40000224 C   FIELD 00w32 CLK_SET (wo): Writing ones to this register sets the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them.
0x40000228 B  REGISTER AHBCLKCTRLSET[2] (wo): Set bits in AHBCLKCTRLn
0x40000228 C   FIELD 00w32 CLK_SET (wo): Writing ones to this register sets the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them.
0x40000240 B  REGISTER AHBCLKCTRLCLR[0] (wo): Clear bits in AHBCLKCTRLn
0x40000240 C   FIELD 00w32 CLK_CLR (wo): Writing ones to this register clears the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them.
0x40000244 B  REGISTER AHBCLKCTRLCLR[1] (wo): Clear bits in AHBCLKCTRLn
0x40000244 C   FIELD 00w32 CLK_CLR (wo): Writing ones to this register clears the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them.
0x40000248 B  REGISTER AHBCLKCTRLCLR[2] (wo): Clear bits in AHBCLKCTRLn
0x40000248 C   FIELD 00w32 CLK_CLR (wo): Writing ones to this register clears the corresponding bit or bits in the AHBCLKCTRLn register, if they are implemented. Bits that do not correspond to defined bits in AHBCLKCTRLn are reserved and only zeroes should be written to them.
0x40000280 B  REGISTER MAINCLKSELA (rw): Main clock source select A
0x40000280 C   FIELD 00w02 SEL (rw): Clock source for main clock source selector A
0x40000284 B  REGISTER MAINCLKSELB (rw): Main clock source select B
0x40000284 C   FIELD 00w02 SEL (rw): Clock source for main clock source selector B. Selects the clock source for the main clock.
0x40000288 B  REGISTER CLKOUTSELA (rw): CLKOUT clock source select A
0x40000288 C   FIELD 00w03 SEL (rw): CLKOUT clock source selection
0x40000290 B  REGISTER SYSPLLCLKSEL (rw): PLL clock source select
0x40000290 C   FIELD 00w03 SEL (rw): System PLL clock source selection.
0x40000298 B  REGISTER AUDPLLCLKSEL (rw): Audio PLL clock source select
0x40000298 C   FIELD 00w03 SEL (rw): Audio PLL clock source selection.
0x400002A0 B  REGISTER SPIFICLKSEL (rw): SPIFI clock source select
0x400002A0 C   FIELD 00w03 SEL (rw): System PLL clock source selection
0x400002A4 B  REGISTER ADCCLKSEL (rw): ADC clock source select
0x400002A4 C   FIELD 00w03 SEL (rw): ADC clock source selection
0x400002A8 B  REGISTER USB0CLKSEL (rw): USB0 clock source select
0x400002A8 C   FIELD 00w03 SEL (rw): USB0 device clock source selection.
0x400002AC B  REGISTER USB1CLKSEL (rw): USB1 clock source select
0x400002AC C   FIELD 00w03 SEL (rw): USB1 PHY clock source selection.
0x400002B0 B  REGISTER FCLKSEL[0] (rw): Flexcomm 0 clock source select
0x400002B0 C   FIELD 00w03 SEL (rw): Flexcomm clock source selection. One per Flexcomm.
0x400002B4 B  REGISTER FCLKSEL[1] (rw): Flexcomm 0 clock source select
0x400002B4 C   FIELD 00w03 SEL (rw): Flexcomm clock source selection. One per Flexcomm.
0x400002B8 B  REGISTER FCLKSEL[2] (rw): Flexcomm 0 clock source select
0x400002B8 C   FIELD 00w03 SEL (rw): Flexcomm clock source selection. One per Flexcomm.
0x400002BC B  REGISTER FCLKSEL[3] (rw): Flexcomm 0 clock source select
0x400002BC C   FIELD 00w03 SEL (rw): Flexcomm clock source selection. One per Flexcomm.
0x400002C0 B  REGISTER FCLKSEL[4] (rw): Flexcomm 0 clock source select
0x400002C0 C   FIELD 00w03 SEL (rw): Flexcomm clock source selection. One per Flexcomm.
0x400002C4 B  REGISTER FCLKSEL[5] (rw): Flexcomm 0 clock source select
0x400002C4 C   FIELD 00w03 SEL (rw): Flexcomm clock source selection. One per Flexcomm.
0x400002C8 B  REGISTER FCLKSEL[6] (rw): Flexcomm 0 clock source select
0x400002C8 C   FIELD 00w03 SEL (rw): Flexcomm clock source selection. One per Flexcomm.
0x400002CC B  REGISTER FCLKSEL[7] (rw): Flexcomm 0 clock source select
0x400002CC C   FIELD 00w03 SEL (rw): Flexcomm clock source selection. One per Flexcomm.
0x400002D0 B  REGISTER FCLKSEL[8] (rw): Flexcomm 0 clock source select
0x400002D0 C   FIELD 00w03 SEL (rw): Flexcomm clock source selection. One per Flexcomm.
0x400002D4 B  REGISTER FCLKSEL[9] (rw): Flexcomm 0 clock source select
0x400002D4 C   FIELD 00w03 SEL (rw): Flexcomm clock source selection. One per Flexcomm.
0x400002E0 B  REGISTER MCLKCLKSEL (rw): MCLK clock source select
0x400002E0 C   FIELD 00w03 SEL (rw): MCLK source select. This may be used by Flexcomms that support I2S, and/or by the digital microphone subsystem.
0x400002E8 B  REGISTER FRGCLKSEL (rw): Fractional Rate Generator clock source select
0x400002E8 C   FIELD 00w03 SEL (rw): Fractional Rate Generator clock source select.
0x400002EC B  REGISTER DMICCLKSEL (rw): Digital microphone (DMIC) subsystem clock select
0x400002EC C   FIELD 00w03 SEL (rw): DMIC (audio subsystem) clock source select.
0x400002F0 B  REGISTER SCTCLKSEL (rw): SCTimer/PWM clock source select
0x400002F0 C   FIELD 00w03 SEL (rw): SCT clock source select.
0x400002F4 B  REGISTER LCDCLKSEL (rw): LCD clock source select
0x400002F4 C   FIELD 00w02 SEL (rw): LCD clock source select.
0x400002F8 B  REGISTER SDIOCLKSEL (rw): SDIO clock source select
0x400002F8 C   FIELD 00w03 SEL (rw): SDIO clock source select.
0x40000300 B  REGISTER SYSTICKCLKDIV (rw): SYSTICK clock divider
0x40000300 C   FIELD 00w08 DIV (rw): Clock divider value. 0: Divide by 1 up to 255: Divide by 256.
0x40000300 C   FIELD 29w01 RESET (rw): Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count.
0x40000300 C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x40000300 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x40000304 B  REGISTER ARMTRACECLKDIV (rw): ARM Trace clock divider
0x40000304 C   FIELD 00w08 DIV (rw): Clock divider value.
0x40000304 C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x40000304 C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x40000304 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x40000308 B  REGISTER CAN0CLKDIV (rw): MCAN0 clock divider
0x40000308 C   FIELD 00w08 DIV (rw): Clock divider value.
0x40000308 C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x40000308 C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x40000308 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x4000030C B  REGISTER CAN1CLKDIV (rw): MCAN1 clock divider
0x4000030C C   FIELD 00w08 DIV (rw): Clock divider value. 0: Divide by 1 up to 255: Divide by 256.
0x4000030C C   FIELD 29w01 RESET (rw): Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count.
0x4000030C C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x4000030C C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x40000310 B  REGISTER SC0CLKDIV (rw): Smartcard0 clock divider
0x40000310 C   FIELD 00w08 DIV (rw): Clock divider value.
0x40000310 C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x40000310 C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x40000310 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x40000314 B  REGISTER SC1CLKDIV (rw): Smartcard1 clock divider
0x40000314 C   FIELD 00w08 DIV (rw): Clock divider value.
0x40000314 C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x40000314 C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x40000314 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x40000380 B  REGISTER AHBCLKDIV (rw): AHB clock divider
0x40000380 C   FIELD 00w08 DIV (rw): Clock divider value. 0: Divide by 1 up to 255: Divide by 256.
0x40000380 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x40000384 B  REGISTER CLKOUTDIV (rw): CLKOUT clock divider
0x40000384 C   FIELD 00w08 DIV (rw): Clock divider value. 0: Divide by 1 up to 255: Divide by 256.
0x40000384 C   FIELD 29w01 RESET (rw): Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count.
0x40000384 C   FIELD 30w01 HALT (rw): Halts the divider counter. The intent is to allow the divider clock source to be changed without the risk of a glitch at the output.
0x40000384 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x40000388 B  REGISTER FROHFCLKDIV (rw): FROHF clock divider
0x40000388 C   FIELD 00w08 DIV (rw): Clock divider value.
0x40000388 C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x40000388 C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x40000388 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x40000390 B  REGISTER SPIFICLKDIV (rw): SPIFI clock divider
0x40000390 C   FIELD 00w08 DIV (rw): Clock divider value.
0x40000390 C   FIELD 29w01 RESET (rw): Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count.
0x40000390 C   FIELD 30w01 HALT (rw): Halts the divider counter. The intent is to allow the divider clock source to be changed without the risk of a glitch at the output.
0x40000390 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x40000394 B  REGISTER ADCCLKDIV (rw): ADC clock divider
0x40000394 C   FIELD 00w08 DIV (rw): Clock divider value.
0x40000394 C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x40000394 C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x40000394 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x40000398 B  REGISTER USB0CLKDIV (rw): USB0 clock divider
0x40000398 C   FIELD 00w08 DIV (rw): Clock divider value.
0x40000398 C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x40000398 C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x40000398 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x4000039C B  REGISTER USB1CLKDIV (rw): USB1 clock divider
0x4000039C C   FIELD 00w08 DIV (rw): Clock divider value.
0x4000039C C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x4000039C C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x4000039C C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x400003A0 B  REGISTER FRGCTRL (rw): Fractional rate divider
0x400003A0 C   FIELD 00w08 DIV (rw): Denominator of the fractional divider. DIV is equal to the programmed value +1. Always set to 0xFF to use with the fractional baud rate generator.
0x400003A0 C   FIELD 08w08 MULT (rw): Numerator of the fractional divider. MULT is equal to the programmed value.
0x400003A8 B  REGISTER DMICCLKDIV (rw): DMIC clock divider
0x400003A8 C   FIELD 00w08 DIV (rw): Clock divider value. 0: Divide by 1 up to 255: Divide by 256.
0x400003A8 C   FIELD 29w01 RESET (rw): Resets the divider counter. Can be used to make sure a new divider value is used right away rather than completing the previous count.
0x400003A8 C   FIELD 30w01 HALT (rw): Halts the divider counter. The intent is to allow the divider clock source to be changed without the risk of a glitch at the output.
0x400003A8 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x400003AC B  REGISTER MCLKDIV (rw): I2S MCLK clock divider
0x400003AC C   FIELD 00w08 DIV (rw): Clock divider value. 0: Divide by 1 up to 255: Divide by 256.
0x400003AC C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x400003AC C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x400003AC C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x400003B0 B  REGISTER LCDCLKDIV (rw): LCD clock divider
0x400003B0 C   FIELD 00w08 DIV (rw): Clock divider value.
0x400003B0 C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x400003B0 C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x400003B0 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x400003B4 B  REGISTER SCTCLKDIV (rw): SCT/PWM clock divider
0x400003B4 C   FIELD 00w08 DIV (rw): Clock divider value.
0x400003B4 C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x400003B4 C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x400003B4 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x400003B8 B  REGISTER EMCCLKDIV (rw): EMC clock divider
0x400003B8 C   FIELD 00w08 DIV (rw): Clock divider value.
0x400003B8 C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x400003B8 C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x400003B8 C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x400003BC B  REGISTER SDIOCLKDIV (rw): SDIO clock divider
0x400003BC C   FIELD 00w08 DIV (rw): Clock divider value.
0x400003BC C   FIELD 29w01 RESET (rw): Resets the divider counter.
0x400003BC C   FIELD 30w01 HALT (rw): Halts the divider counter.
0x400003BC C   FIELD 31w01 REQFLAG (rw): Divider status flag.
0x40000400 B  REGISTER FLASHCFG (rw): Flash wait states configuration
0x40000400 C   FIELD 00w02 FETCHCFG (rw): Instruction fetch configuration. This field determines how flash accelerator buffers are used for instruction fetches.
0x40000400 C   FIELD 02w02 DATACFG (rw): Data read configuration. This field determines how flash accelerator buffers are used for data accesses.
0x40000400 C   FIELD 04w01 ACCEL (rw): Acceleration enable.
0x40000400 C   FIELD 05w01 PREFEN (rw): Prefetch enable.
0x40000400 C   FIELD 06w01 PREFOVR (rw): Prefetch override. This bit only applies when PREFEN = 1 and a buffered instruction is completing for which the next flash line is not already buffered or being prefetched.
0x40000400 C   FIELD 12w04 FLASHTIM (rw): Flash memory access time. The number of system clocks used for flash accesses is equal to FLASHTIM +1.
0x4000040C B  REGISTER USB0CLKCTRL (rw): USB0 clock control
0x4000040C C   FIELD 00w01 AP_FS_DEV_CLK (rw): USB0 Device USB0_NEEDCLK signal control.
0x4000040C C   FIELD 01w01 POL_FS_DEV_CLK (rw): USB0 Device USB0_NEEDCLK polarity for triggering the USB0 wake-up interrupt.
0x4000040C C   FIELD 02w01 AP_FS_HOST_CLK (rw): USB0 Host USB0_NEEDCLK signal control.
0x4000040C C   FIELD 03w01 POL_FS_HOST_CLK (rw): USB0 Host USB0_NEEDCLK polarity for triggering the USB0 wake-up interrupt.
0x4000040C C   FIELD 04w01 PU_DISABLE (rw): Internal pull-up disable control.
0x40000410 B  REGISTER USB0CLKSTAT (rw): USB0 clock status
0x40000410 C   FIELD 00w01 DEV_NEED_CLKST (rw): USB0 Device USB0_NEEDCLK signal status.
0x40000410 C   FIELD 01w01 HOST_NEED_CLKST (rw): USB0 Host USB0_NEEDCLK signal status.
0x40000418 B  REGISTER FREQMECTRL (rw): Frequency measure register
0x40000418 C   FIELD 00w14 CAPVAL (rw): Stores the capture result which is used to calculate the frequency of the target clock. This field is read-only.
0x40000418 C   FIELD 31w01 PROG (rw): Set this bit to one to initiate a frequency measurement cycle. Hardware clears this bit when the measurement cycle has completed and there is valid capture data in the CAPVAL field (bits 13:0).
0x40000420 B  REGISTER MCLKIO (rw): MCLK input/output control
0x40000420 C   FIELD 00w01 DIR (rw): MCLK direction control.
0x40000424 B  REGISTER USB1CLKCTRL (rw): USB1 clock control
0x40000424 C   FIELD 00w01 AP_FS_DEV_CLK (rw): USB1 Device need_clock signal control.
0x40000424 C   FIELD 01w01 POL_FS_DEV_CLK (rw): USB1 Device need_clock polarity for triggering the USB1 wake-up interrupt.
0x40000424 C   FIELD 02w01 AP_FS_HOST_CLK (rw): USB1 Host need_clock signal control.
0x40000424 C   FIELD 03w01 POL_FS_HOST_CLK (rw): USB1 Host need_clock polarity for triggering the USB1 wake-up interrupt.
0x40000424 C   FIELD 04w01 HS_DEV_WAKEUP_N (rw): External user wake-up signal for device mode; asserting this signal (active low) will result in exiting the low power mode; input to asynchronous control logic.
0x40000428 B  REGISTER USB1CLKSTAT (rw): USB1 clock status
0x40000428 C   FIELD 00w01 DEV_NEED_CLKST (rw): USB1 Device USB1_NEEDCLK signal status.
0x40000428 C   FIELD 01w01 HOST_NEED_CLKST (rw): USB1 Device host USB1_NEEDCLK signal status.
0x40000444 B  REGISTER EMCSYSCTRL (rw): EMC system control
0x40000444 C   FIELD 00w01 EMCSC (rw): EMC Shift Control.
0x40000444 C   FIELD 01w01 EMCRD (rw): EMC Reset Disable.
0x40000444 C   FIELD 02w01 EMCBC (rw): External Memory Controller burst control.
0x40000444 C   FIELD 03w01 EMCFBCLKINSEL (rw): External Memory Controller clock select.
0x40000448 B  REGISTER EMCDLYCTRL (rw): EMC clock delay control
0x40000448 C   FIELD 00w05 CMD_DELAY (rw): Programmable delay value for EMC outputs in command delayed mode.
0x40000448 C   FIELD 08w05 FBCLK_DELAY (rw): Programmable delay value for the feedback clock that controls input data sampling.
0x4000044C B  REGISTER EMCDLYCAL (rw): EMC delay chain calibration control
0x4000044C C   FIELD 00w08 CALVALUE (rw): Returns the count of the approximately 50 MHz ring oscillator that occur during 32 clocks of the FRO 12 MHz.
0x4000044C C   FIELD 14w01 START (rw): Start control bit for the EMC calibration counter.
0x4000044C C   FIELD 15w01 DONE (rw): Measurement completion flag.
0x40000450 B  REGISTER ETHPHYSEL (rw): Ethernet PHY Selection
0x40000450 C   FIELD 02w01 PHY_SEL (rw): PHY interface select.
0x40000454 B  REGISTER ETHSBDCTRL (rw): Ethernet SBD flow control
0x40000454 C   FIELD 00w02 SBD_CTRL (rw): Sideband Flow Control.
0x40000460 B  REGISTER SDIOCLKCTRL (rw): SDIO CCLKIN phase and delay control
0x40000460 C   FIELD 00w02 CCLK_DRV_PHASE (rw): Programmable delay value by which cclk_in_drv is phase-shifted with regard to cclk_in.
0x40000460 C   FIELD 02w02 CCLK_SAMPLE_PHASE (rw): Programmable delay value by which cclk_in_sample is delayed with regard to cclk_in.
0x40000460 C   FIELD 07w01 PHASE_ACTIVE (rw): sdio_clk by 2, before feeding into ccl_in, cclk_in_sample, and cclk_in_drv.
0x40000460 C   FIELD 16w05 CCLK_DRV_DELAY (rw): Programmable delay value by which cclk_in_drv is delayed with regard to cclk_in.
0x40000460 C   FIELD 23w01 CCLK_DRV_DELAY_ACTIVE (rw): Enables drive delay, as controlled by the CCLK_DRV_DELAY field.
0x40000460 C   FIELD 24w05 CCLK_SAMPLE_DELAY (rw): Programmable delay value by which cclk_in_sample is delayed with regard to cclk_in.
0x40000460 C   FIELD 31w01 CCLK_SAMPLE_DELAY_ACTIVE (rw): Enables sample delay, as controlled by the CCLK_SAMPLE_DELAY field.
0x40000500 B  REGISTER FROCTRL (rw): FRO oscillator control
0x40000500 C   FIELD 00w14 TRIM (rw): This value is factory trimmed to account for bias and temperature compensation.
0x40000500 C   FIELD 14w01 SEL (rw): Select the FRO HF output frequency.
0x40000500 C   FIELD 16w08 FREQTRIM (rw): Frequency trim.
0x40000500 C   FIELD 24w01 USBCLKADJ (rw): USB clock adjust mode.
0x40000500 C   FIELD 25w01 USBMODCHG (rw): USB Mode value Change flag.
0x40000500 C   FIELD 30w01 HSPDCLK (rw): High speed clock enable.
0x40000500 C   FIELD 31w01 WRTRIM (rw): Write Trim value.
0x40000504 B  REGISTER SYSOSCCTRL (rw): System oscillator control
0x40000504 C   FIELD 00w01 BYPASS (rw): Bypass system oscillator.
0x40000504 C   FIELD 01w01 FREQRANGE (rw): Determines frequency range for system oscillator.
0x40000508 B  REGISTER WDTOSCCTRL (rw): Watchdog oscillator control
0x40000508 C   FIELD 00w05 DIVSEL (rw): Divider select.
0x40000508 C   FIELD 05w05 FREQSEL (rw): Frequency select.
0x4000050C B  REGISTER RTCOSCCTRL (rw): RTC oscillator 32 kHz output control
0x4000050C C   FIELD 00w01 EN (rw): RTC 32 kHz clock enable.
0x4000051C B  REGISTER USBPLLCTRL (rw): USB PLL control
0x4000051C C   FIELD 00w08 MSEL (rw): PLL feedback Divider value.
0x4000051C C   FIELD 08w02 PSEL (rw): PLL Divider value.
0x4000051C C   FIELD 10w02 NSEL (rw): PLL feedback Divider value.
0x4000051C C   FIELD 12w01 DIRECT (rw): Direct CCO clock output control.
0x4000051C C   FIELD 13w01 BYPASS (rw): Input clock bypass control.
0x4000051C C   FIELD 14w01 FBSEL (rw): Feedback divider input clock control.
0x40000520 B  REGISTER USBPLLSTAT (rw): USB PLL status
0x40000520 C   FIELD 00w01 LOCK (rw): USBPLL lock indicator.
0x40000580 B  REGISTER SYSPLLCTRL (rw): System PLL control
0x40000580 C   FIELD 00w04 SELR (rw): Bandwidth select R value.
0x40000580 C   FIELD 04w06 SELI (rw): Bandwidth select I value.
0x40000580 C   FIELD 10w05 SELP (rw): Bandwidth select P value.
0x40000580 C   FIELD 15w01 BYPASS (rw): PLL bypass control.
0x40000580 C   FIELD 17w01 UPLIMOFF (rw): Disable upper frequency limiter.
0x40000580 C   FIELD 19w01 DIRECTI (rw): PLL0 direct input enable.
0x40000580 C   FIELD 20w01 DIRECTO (rw): PLL0 direct output enable.
0x40000584 B  REGISTER SYSPLLSTAT (rw): PLL status
0x40000584 C   FIELD 00w01 LOCK (rw): PLL lock indicator.
0x40000588 B  REGISTER SYSPLLNDEC (rw): PLL N divider
0x40000588 C   FIELD 00w10 NDEC (rw): Decoded N-divider coefficient value.
0x40000588 C   FIELD 10w01 NREQ (rw): NDEC reload request.
0x4000058C B  REGISTER SYSPLLPDEC (rw): PLL P divider
0x4000058C C   FIELD 00w07 PDEC (rw): Decoded P-divider coefficient value.
0x4000058C C   FIELD 07w01 PREQ (rw): .
0x40000590 B  REGISTER SYSPLLMDEC (rw): System PLL M divider
0x40000590 C   FIELD 00w17 MDEC (rw): Decoded M-divider coefficient value.
0x40000590 C   FIELD 17w01 MREQ (rw): MDEC reload request.
0x400005A0 B  REGISTER AUDPLLCTRL (rw): Audio PLL control
0x400005A0 C   FIELD 00w04 SELR (rw): Bandwidth select R value.
0x400005A0 C   FIELD 04w06 SELI (rw): Bandwidth select I value.
0x400005A0 C   FIELD 10w05 SELP (rw): .
0x400005A0 C   FIELD 15w01 BYPASS (rw): PLL bypass control.
0x400005A0 C   FIELD 17w01 UPLIMOFF (rw): Disable upper frequency limiter.
0x400005A0 C   FIELD 19w01 DIRECTI (rw): PLL direct input enable.
0x400005A0 C   FIELD 20w01 DIRECTO (rw): PLL direct output enable
0x400005A4 B  REGISTER AUDPLLSTAT (rw): Audio PLL status
0x400005A4 C   FIELD 00w01 LOCK (rw): PLL lock indicator.
0x400005A8 B  REGISTER AUDPLLNDEC (rw): Audio PLL N divider
0x400005A8 C   FIELD 00w10 NDEC (rw): Decoded N-divider coefficient value.
0x400005A8 C   FIELD 10w01 NREQ (rw): NDEC reload request.
0x400005AC B  REGISTER AUDPLLPDEC (rw): Audio PLL P divider
0x400005AC C   FIELD 00w07 PDEC (rw): Decoded P-divider coefficient value.
0x400005AC C   FIELD 07w01 PREQ (rw): PDEC reload request.
0x400005B0 B  REGISTER AUDPLLMDEC (rw): Audio PLL M divider
0x400005B0 C   FIELD 00w17 MDEC (rw): Decoded M-divider coefficient value.
0x400005B0 C   FIELD 17w01 MREQ (rw): MDEC reload request.
0x400005B4 B  REGISTER AUDPLLFRAC (rw): Audio PLL fractional divider control
0x400005B4 C   FIELD 00w22 CTRL (rw): PLL fractional divider control word
0x400005B4 C   FIELD 22w01 REQ (rw): Writing 1 to REQ signal loads CTRL value into fractional wrapper modulator.
0x400005B4 C   FIELD 23w01 SEL_EXT (rw): Select fractional divider.
0x40000600 B  REGISTER PDSLEEPCFG0 (rw): Sleep configuration register
0x40000600 C   FIELD 04w01 PDEN_FRO (rw): FRO oscillator.
0x40000600 C   FIELD 06w01 PDEN_TS (rw): Temp sensor.
0x40000600 C   FIELD 07w01 PDEN_BOD_RST (rw): Brown-out Detect reset.
0x40000600 C   FIELD 08w01 PDEN_BOD_INTR (rw): Brown-out Detect interrupt.
0x40000600 C   FIELD 09w01 PDEN_VD2_ANA (rw): Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23).
0x40000600 C   FIELD 10w01 PDEN_ADC0 (rw): ADC power.
0x40000600 C   FIELD 13w01 PDEN_SRAMX (rw): PDEN_SRAMX controls SRAMX (also enable/disable bit 27).
0x40000600 C   FIELD 14w01 PDEN_SRAM0 (rw): PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27).
0x40000600 C   FIELD 15w01 PDEN_SRAM1_2_3 (rw): PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27).
0x40000600 C   FIELD 16w01 PDEN_USB_RAM (rw): PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27).
0x40000600 C   FIELD 17w01 PDEN_ROM (rw): ROM (also enable/disable bit 27).
0x40000600 C   FIELD 19w01 PDEN_VDDA (rw): Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23).
0x40000600 C   FIELD 20w01 PDEN_WDT_OSC (rw): Watchdog oscillator.
0x40000600 C   FIELD 21w01 PDEN_USB0_PHY (rw): USB0 PHY power (also enable/disable bit 28).
0x40000600 C   FIELD 22w01 PDEN_SYS_PLL (rw): System PLL (PLL0) power (also enable/disable bit 26).
0x40000600 C   FIELD 23w01 PDEN_VREFP (rw): VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19).
0x40000600 C   FIELD 26w01 PDEN_VD3 (rw): Power control for all PLLs.
0x40000600 C   FIELD 27w01 PDEN_VD4 (rw): Power control for all SRAMs and ROM.
0x40000600 C   FIELD 28w01 PDEN_VD5 (rw): Power control both USB0 PHY and USB1 PHY.
0x40000600 C   FIELD 29w01 PDEN_VD6 (rw): Power control for EEPROM.
0x40000604 B  REGISTER PDSLEEPCFG1 (rw): Sleep configuration register
0x40000604 C   FIELD 00w01 PDEN_USB1_PHY (rw): USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register).
0x40000604 C   FIELD 01w01 PDEN_USB1_PLL (rw): USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register).
0x40000604 C   FIELD 02w01 PDEN_AUD_PLL (rw): Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register).
0x40000604 C   FIELD 03w01 PDEN_SYSOSC (rw): System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register).
0x40000604 C   FIELD 05w01 PDEN_EEPROM (rw): EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register).
0x40000604 C   FIELD 07w01 PDEN_RNG (rw): Random Number Generator Power.
0x40000610 B  REGISTER PDRUNCFG0 (rw): Power configuration register
0x40000610 C   FIELD 04w01 PDEN_FRO (rw): FRO oscillator.
0x40000610 C   FIELD 06w01 PDEN_TS (rw): Temp sensor.
0x40000610 C   FIELD 07w01 PDEN_BOD_RST (rw): Brown-out Detect reset.
0x40000610 C   FIELD 08w01 PDEN_BOD_INTR (rw): Brown-out Detect interrupt.
0x40000610 C   FIELD 09w01 PDEN_VD2_ANA (rw): Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23).
0x40000610 C   FIELD 10w01 PDEN_ADC0 (rw): ADC power.
0x40000610 C   FIELD 13w01 PDEN_SRAMX (rw): PDEN_SRAMX controls SRAMX (also enable/disable bit 27).
0x40000610 C   FIELD 14w01 PDEN_SRAM0 (rw): PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27).
0x40000610 C   FIELD 15w01 PDEN_SRAM1_2_3 (rw): PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27).
0x40000610 C   FIELD 16w01 PDEN_USB_RAM (rw): PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27).
0x40000610 C   FIELD 17w01 PDEN_ROM (rw): ROM (also enable/disable bit 27).
0x40000610 C   FIELD 19w01 PDEN_VDDA (rw): Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23).
0x40000610 C   FIELD 20w01 PDEN_WDT_OSC (rw): Watchdog oscillator.
0x40000610 C   FIELD 21w01 PDEN_USB0_PHY (rw): USB0 PHY power (also enable/disable bit 28).
0x40000610 C   FIELD 22w01 PDEN_SYS_PLL (rw): System PLL (PLL0) power (also enable/disable bit 26).
0x40000610 C   FIELD 23w01 PDEN_VREFP (rw): VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19).
0x40000610 C   FIELD 26w01 PDEN_VD3 (rw): Power control for all PLLs.
0x40000610 C   FIELD 27w01 PDEN_VD4 (rw): Power control for all SRAMs and ROM.
0x40000610 C   FIELD 28w01 PDEN_VD5 (rw): Power control both USB0 PHY and USB1 PHY.
0x40000610 C   FIELD 29w01 PDEN_VD6 (rw): Power control for EEPROM.
0x40000614 B  REGISTER PDRUNCFG1 (rw): Power configuration register
0x40000614 C   FIELD 00w01 PDEN_USB1_PHY (rw): USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register).
0x40000614 C   FIELD 01w01 PDEN_USB1_PLL (rw): USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register).
0x40000614 C   FIELD 02w01 PDEN_AUD_PLL (rw): Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register).
0x40000614 C   FIELD 03w01 PDEN_SYSOSC (rw): System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register).
0x40000614 C   FIELD 05w01 PDEN_EEPROM (rw): EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register).
0x40000614 C   FIELD 07w01 PDEN_RNG (rw): Random Number Generator Power.
0x40000620 B  REGISTER PDRUNCFGSET0 (rw): Power configuration set register
0x40000620 C   FIELD 04w01 PDEN_FRO (rw): FRO oscillator.
0x40000620 C   FIELD 06w01 PDEN_TS (rw): Temp sensor.
0x40000620 C   FIELD 07w01 PDEN_BOD_RST (rw): Brown-out Detect reset.
0x40000620 C   FIELD 08w01 PDEN_BOD_INTR (rw): Brown-out Detect interrupt.
0x40000620 C   FIELD 09w01 PDEN_VD2_ANA (rw): Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23).
0x40000620 C   FIELD 10w01 PDEN_ADC0 (rw): ADC power.
0x40000620 C   FIELD 13w01 PDEN_SRAMX (rw): PDEN_SRAMX controls SRAMX (also enable/disable bit 27).
0x40000620 C   FIELD 14w01 PDEN_SRAM0 (rw): PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27).
0x40000620 C   FIELD 15w01 PDEN_SRAM1_2_3 (rw): PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27).
0x40000620 C   FIELD 16w01 PDEN_USB_RAM (rw): PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27).
0x40000620 C   FIELD 17w01 PDEN_ROM (rw): ROM (also enable/disable bit 27).
0x40000620 C   FIELD 19w01 PDEN_VDDA (rw): Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23).
0x40000620 C   FIELD 20w01 PDEN_WDT_OSC (rw): Watchdog oscillator.
0x40000620 C   FIELD 21w01 PDEN_USB0_PHY (rw): USB0 PHY power (also enable/disable bit 28).
0x40000620 C   FIELD 22w01 PDEN_SYS_PLL (rw): System PLL (PLL0) power (also enable/disable bit 26).
0x40000620 C   FIELD 23w01 PDEN_VREFP (rw): VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19).
0x40000620 C   FIELD 26w01 PDEN_VD3 (rw): Power control for all PLLs.
0x40000620 C   FIELD 27w01 PDEN_VD4 (rw): Power control for all SRAMs and ROM.
0x40000620 C   FIELD 28w01 PDEN_VD5 (rw): Power control both USB0 PHY and USB1 PHY.
0x40000620 C   FIELD 29w01 PDEN_VD6 (rw): Power control for EEPROM.
0x40000624 B  REGISTER PDRUNCFGSET1 (rw): Power configuration set register
0x40000624 C   FIELD 00w01 PDEN_USB1_PHY (rw): USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register).
0x40000624 C   FIELD 01w01 PDEN_USB1_PLL (rw): USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register).
0x40000624 C   FIELD 02w01 PDEN_AUD_PLL (rw): Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register).
0x40000624 C   FIELD 03w01 PDEN_SYSOSC (rw): System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register).
0x40000624 C   FIELD 05w01 PDEN_EEPROM (rw): EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register).
0x40000624 C   FIELD 07w01 PDEN_RNG (rw): Random Number Generator Power.
0x40000630 B  REGISTER PDRUNCFGCLR0 (rw): Power configuration clear register
0x40000630 C   FIELD 04w01 PDEN_FRO (rw): FRO oscillator.
0x40000630 C   FIELD 06w01 PDEN_TS (rw): Temp sensor.
0x40000630 C   FIELD 07w01 PDEN_BOD_RST (rw): Brown-out Detect reset.
0x40000630 C   FIELD 08w01 PDEN_BOD_INTR (rw): Brown-out Detect interrupt.
0x40000630 C   FIELD 09w01 PDEN_VD2_ANA (rw): Analog supply for System Oscillator (also enable/disable bit 3 in PDRUNCFG1 register), Temperature Sensor (also, enable/disable bit 6), ADC (also, enable/disable bits 10, 19, and 23).
0x40000630 C   FIELD 10w01 PDEN_ADC0 (rw): ADC power.
0x40000630 C   FIELD 13w01 PDEN_SRAMX (rw): PDEN_SRAMX controls SRAMX (also enable/disable bit 27).
0x40000630 C   FIELD 14w01 PDEN_SRAM0 (rw): PDEN_SRAM0 controls SRAM0 (also enable/disable bit 27).
0x40000630 C   FIELD 15w01 PDEN_SRAM1_2_3 (rw): PDEN_SRAM1_2_3 controls SRAM1, SRAM2, and SRAM3 (also enable/disable bit 27).
0x40000630 C   FIELD 16w01 PDEN_USB_RAM (rw): PDEN_USB_SRAM controls USB_RAM (also enable/disable bit 27).
0x40000630 C   FIELD 17w01 PDEN_ROM (rw): ROM (also enable/disable bit 27).
0x40000630 C   FIELD 19w01 PDEN_VDDA (rw): Vdda to the ADC, must be enabled for the ADC to work (also enable/disable bit 9, 10, and 23).
0x40000630 C   FIELD 20w01 PDEN_WDT_OSC (rw): Watchdog oscillator.
0x40000630 C   FIELD 21w01 PDEN_USB0_PHY (rw): USB0 PHY power (also enable/disable bit 28).
0x40000630 C   FIELD 22w01 PDEN_SYS_PLL (rw): System PLL (PLL0) power (also enable/disable bit 26).
0x40000630 C   FIELD 23w01 PDEN_VREFP (rw): VREFP to the ADC must be enabled for the ADC to work (also enable/disable bit 9, 10, and 19).
0x40000630 C   FIELD 26w01 PDEN_VD3 (rw): Power control for all PLLs.
0x40000630 C   FIELD 27w01 PDEN_VD4 (rw): Power control for all SRAMs and ROM.
0x40000630 C   FIELD 28w01 PDEN_VD5 (rw): Power control both USB0 PHY and USB1 PHY.
0x40000630 C   FIELD 29w01 PDEN_VD6 (rw): Power control for EEPROM.
0x40000634 B  REGISTER PDRUNCFGCLR1 (rw): Power configuration clear register
0x40000634 C   FIELD 00w01 PDEN_USB1_PHY (rw): USB1 high speed PHY (also, enable/disable bit 28 in PDRUNCFG0 register).
0x40000634 C   FIELD 01w01 PDEN_USB1_PLL (rw): USB PLL (PLL1) power (also, enable/disable bit 26 in PDRUNCFG0 register).
0x40000634 C   FIELD 02w01 PDEN_AUD_PLL (rw): Audio PLL (PLL2) power and fractional divider (also, enable/disable bit 26 in PDRUNCFG0 register).
0x40000634 C   FIELD 03w01 PDEN_SYSOSC (rw): System Oscillator Power (also, enable/disable bit 9 in PDRUNCFG0 register).
0x40000634 C   FIELD 05w01 PDEN_EEPROM (rw): EEPROM power (also, enable/disable bit 29 in PDRUNCFG0 register).
0x40000634 C   FIELD 07w01 PDEN_RNG (rw): Random Number Generator Power.
0x40000680 B  REGISTER STARTER0 (rw): Start logic 0 wake-up enable register
0x40000680 C   FIELD 00w01 WDT_BOD (rw): WWDT and BOD interrupt wake-up.
0x40000680 C   FIELD 01w01 DMA (rw): DMA wake-up.
0x40000680 C   FIELD 02w01 GINT0 (rw): Group interrupt 0 wake-up.
0x40000680 C   FIELD 03w01 GINT1 (rw): Group interrupt 1 wake-up.
0x40000680 C   FIELD 04w01 PIN_INT0 (rw): GPIO pin interrupt 0 wake-up.
0x40000680 C   FIELD 05w01 PIN_INT1 (rw): GPIO pin interrupt 1 wake-up.
0x40000680 C   FIELD 06w01 PIN_INT2 (rw): GPIO pin interrupt 2 wake-up.
0x40000680 C   FIELD 07w01 PIN_INT3 (rw): GPIO pin interrupt 3 wake-up.
0x40000680 C   FIELD 08w01 UTICK (rw): Micro-tick Timer wake-up.
0x40000680 C   FIELD 09w01 MRT (rw): Multi-Rate Timer wake-up.
0x40000680 C   FIELD 10w01 CTIMER0 (rw): Standard counter/timer CTIMER0 wake-up.
0x40000680 C   FIELD 11w01 CTIMER1 (rw): Standard counter/timer CTIMER1 wake-up.
0x40000680 C   FIELD 12w01 SCT0 (rw): SCT0 wake-up.
0x40000680 C   FIELD 13w01 CTIMER3 (rw): Standard counter/timer CTIMER3 wake-up.
0x40000680 C   FIELD 14w01 FLEXCOMM0 (rw): Flexcomm0 peripheral interrupt wake-up.
0x40000680 C   FIELD 15w01 FLEXCOMM1 (rw): Flexcomm1 peripheral interrupt wake-up.
0x40000680 C   FIELD 16w01 FLEXCOMM2 (rw): Flexcomm2 peripheral interrupt wake-up.
0x40000680 C   FIELD 17w01 FLEXCOMM3 (rw): Flexcomm3 peripheral interrupt wake-up.
0x40000680 C   FIELD 18w01 FLEXCOMM4 (rw): Flexcomm4 peripheral interrupt wake-up.
0x40000680 C   FIELD 19w01 FLEXCOMM5 (rw): Flexcomm5 peripheral interrupt wake-up.
0x40000680 C   FIELD 20w01 FLEXCOMM6 (rw): Flexcomm6 peripheral interrupt wake-up.
0x40000680 C   FIELD 21w01 FLEXCOMM7 (rw): Flexcomm7 peripheral interrupt wake-up.
0x40000680 C   FIELD 22w01 ADC0_SEQA (rw): ADC0 sequence A interrupt wake-up.
0x40000680 C   FIELD 23w01 ADC0_SEQB (rw): ADC0 sequence B interrupt wake-up.
0x40000680 C   FIELD 24w01 ADC0_THCMP (rw): ADC0 threshold and error interrupt wake-up.
0x40000680 C   FIELD 25w01 DMIC (rw): Digital microphone interrupt wake-up.
0x40000680 C   FIELD 26w01 HWVAD (rw): Hardware voice activity detect interrupt wake-up.
0x40000680 C   FIELD 27w01 USB0_NEEDCLK (rw): USB activity interrupt wake-up.
0x40000680 C   FIELD 28w01 USB0 (rw): USB function interrupt wake-up.
0x40000680 C   FIELD 29w01 RTC (rw): RTC interrupt alarm and wake-up timer.
0x40000684 B  REGISTER STARTER1 (rw): Start logic 0 wake-up enable register
0x40000684 C   FIELD 00w01 PINT4 (rw): GPIO pin interrupt 4 wake-up.
0x40000684 C   FIELD 01w01 PINT5 (rw): GPIO pin interrupt 5 wake-up.
0x40000684 C   FIELD 02w01 PINT6 (rw): GPIO pin interrupt 6 wake-up.
0x40000684 C   FIELD 03w01 PINT7 (rw): GPIO pin interrupt 7 wake-up.
0x40000684 C   FIELD 04w01 CTIMER2 (rw): Standard counter/timer CTIMER2 wake-up.
0x40000684 C   FIELD 05w01 CTIMER4 (rw): Standard counter/timer CTIMER4 wake-up.
0x40000684 C   FIELD 07w01 SPIFI (rw): SPIFI interrupt wake-up. 0 = Wake-up disabled. 1 = Wake-up enabled.
0x40000684 C   FIELD 08w01 FLEXCOMM8 (rw): Flexcomm Interface 8 wake-up.
0x40000684 C   FIELD 09w01 FLEXCOMM9 (rw): Flexcomm Interface 9 wake-up.
0x40000684 C   FIELD 15w01 USB1 (rw): USB 1 wake-up.
0x40000684 C   FIELD 16w01 USB1_ACT (rw): USB 1 activity wake-up.
0x40000684 C   FIELD 17w01 ENET_INT1 (rw): Ethernet.
0x40000684 C   FIELD 18w01 ENET_INT2 (rw): Ethernet.
0x40000684 C   FIELD 19w01 ENET_INT0 (rw): Ethernet.
0x40000684 C   FIELD 23w01 SMARTCARD0 (rw): Smart card 0 wake-up.
0x40000684 C   FIELD 24w01 SMARTCARD1 (rw): Smart card 1 wake-up.
0x400006A0 B  REGISTER STARTERSET[0] (wo): Set bits in STARTER
0x400006A0 C   FIELD 00w32 START_SET (wo): Writing ones to this register sets the corresponding bit or bits in the STARTER0 register, if they are implemented.
0x400006A4 B  REGISTER STARTERSET[1] (wo): Set bits in STARTER
0x400006A4 C   FIELD 00w32 START_SET (wo): Writing ones to this register sets the corresponding bit or bits in the STARTER0 register, if they are implemented.
0x400006C0 B  REGISTER STARTERCLR[0] (wo): Clear bits in STARTER0
0x400006C0 C   FIELD 00w32 START_CLR (wo): Writing ones to this register clears the corresponding bit or bits in the STARTER0 register, if they are implemented.
0x400006C4 B  REGISTER STARTERCLR[1] (wo): Clear bits in STARTER0
0x400006C4 C   FIELD 00w32 START_CLR (wo): Writing ones to this register clears the corresponding bit or bits in the STARTER0 register, if they are implemented.
0x40000780 B  REGISTER HWWAKE (rw): Configures special cases of hardware wake-up
0x40000780 C   FIELD 00w01 FORCEWAKE (rw): Force peripheral clocking to stay on during Deep Sleep and Power-down modes. When 1, clocking to peripherals is prevented from being shut down when the CPU enters Deep Sleep and Power-down modes. This is intended to allow a coprocessor to continue operating while the main CPU(s) are shut down.
0x40000780 C   FIELD 01w01 FCWAKE (rw): Wake for Flexcomms. When 1, any Flexcomm FIFO reaching the level specified by its own TXLVL will cause peripheral clocking to wake up temporarily while the related status is asserted.
0x40000780 C   FIELD 02w01 WAKEDMIC (rw): Wake for Digital Microphone. When 1, the digital microphone input FIFO reaching the level specified by TRIGLVL of either channel will cause peripheral clocking to wake up temporarily while the related status is asserted.
0x40000780 C   FIELD 03w01 WAKEDMA (rw): Wake for DMA. When 1, DMA being busy will cause peripheral clocking to remain running until DMA completes. This is generally used in conjunction with bit 1 and/or 2 in order to prevent peripheral clocking from being shut down as soon as the cause of wake-up is cleared, but before DMA has completed its related activity.
0x40000E04 B  REGISTER AUTOCGOR (rw): Auto Clock-Gate Override Register
0x40000E04 C   FIELD 01w01 RAM0X (rw): When 1, automatic clock gating for RAMX and RAM0 are turned off.
0x40000E04 C   FIELD 02w01 RAM1 (rw): When 1, automatic clock gating for RAM1 are turned off.
0x40000E04 C   FIELD 03w01 RAM2 (rw): When 1, automatic clock gating for RAM1 are turned off.
0x40000E04 C   FIELD 04w01 RAM3 (rw): When 1, automatic clock gating for RAM1 are turned off.
0x40000FF4 B  REGISTER JTAGIDCODE (ro): JTAG ID code register
0x40000FF4 C   FIELD 00w32 JTAGID (ro): JTAG ID code.
0x40000FF8 B  REGISTER DEVICE_ID0 (ro): Part ID register
0x40000FF8 C   FIELD 00w32 PARTID (ro): Part ID
0x40000FFC B  REGISTER DEVICE_ID1 (ro): Boot ROM and die revision register
0x40000FFC C   FIELD 00w32 REVID (ro): Revision.
0x40001000 A PERIPHERAL IOCON
0x40001000 B  REGISTER PIO00 (rw): Digital I/O control for port 0 pins PIO0_0
0x40001000 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001000 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001000 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001000 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001000 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001000 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001000 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001004 B  REGISTER PIO01 (rw): Digital I/O control for port 0 pins PIO0_1
0x40001004 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001004 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001004 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001004 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001004 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001004 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001004 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001008 B  REGISTER PIO02 (rw): Digital I/O control for port 0 pins PIO0_2
0x40001008 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001008 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001008 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001008 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001008 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001008 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001008 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000100C B  REGISTER PIO03 (rw): Digital I/O control for port 0 pins PIO0_3
0x4000100C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000100C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000100C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000100C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000100C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000100C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000100C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001010 B  REGISTER PIO04 (rw): Digital I/O control for port 0 pins PIO0_4
0x40001010 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001010 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001010 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001010 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001010 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001010 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001010 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001014 B  REGISTER PIO05 (rw): Digital I/O control for port 0 pins PIO0_5
0x40001014 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001014 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001014 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001014 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001014 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001014 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001014 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001018 B  REGISTER PIO06 (rw): Digital I/O control for port 0 pins PIO0_6
0x40001018 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001018 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001018 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001018 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001018 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001018 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001018 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000101C B  REGISTER PIO07 (rw): Digital I/O control for port 0 pins PIO0_7
0x4000101C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000101C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000101C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000101C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000101C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000101C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000101C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001020 B  REGISTER PIO08 (rw): Digital I/O control for port 0 pins PIO0_8
0x40001020 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001020 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001020 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001020 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001020 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001020 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001020 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001024 B  REGISTER PIO09 (rw): Digital I/O control for port 0 pins PIO0_9
0x40001024 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001024 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001024 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001024 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001024 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001024 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001024 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001028 B  REGISTER PIO010 (rw): Digital I/O control for port 0 pins PIO0_10
0x40001028 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001028 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001028 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001028 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001028 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001028 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000102C B  REGISTER PIO011 (rw): Digital I/O control for port 0 pins PIO0_11
0x4000102C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000102C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000102C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000102C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000102C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000102C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000102C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001030 B  REGISTER PIO012 (rw): Digital I/O control for port 0 pins PIO0_12
0x40001030 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001030 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001030 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001030 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001030 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001030 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001030 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001034 B  REGISTER PIO013 (rw): Digital I/O control for port 0 pins PIO0_13
0x40001034 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001034 C   FIELD 06w01 I2CSLEW (rw): Controls slew rate of I2C pad.
0x40001034 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001034 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001034 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001034 C   FIELD 10w01 I2CDRIVE (rw): Controls the current sink capability of the pin.
0x40001034 C   FIELD 11w01 I2CFILTER (rw): Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation.
0x40001038 B  REGISTER PIO014 (rw): Digital I/O control for port 0 pins PIO0_14
0x40001038 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001038 C   FIELD 06w01 I2CSLEW (rw): Controls slew rate of I2C pad.
0x40001038 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001038 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001038 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001038 C   FIELD 10w01 I2CDRIVE (rw): Controls the current sink capability of the pin.
0x40001038 C   FIELD 11w01 I2CFILTER (rw): Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation.
0x4000103C B  REGISTER PIO015 (rw): Digital I/O control for port 0 pins PIO0_15
0x4000103C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000103C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000103C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000103C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000103C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000103C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001040 B  REGISTER PIO016 (rw): Digital I/O control for port 0 pins PIO0_16
0x40001040 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001040 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001040 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001040 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001040 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001040 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001044 B  REGISTER PIO017 (rw): Digital I/O control for port 0 pins PIO0_17
0x40001044 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001044 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001044 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001044 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001044 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001044 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001044 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001048 B  REGISTER PIO018 (rw): Digital I/O control for port 0 pins PIO0_18
0x40001048 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001048 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001048 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001048 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001048 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001048 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001048 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000104C B  REGISTER PIO019 (rw): Digital I/O control for port 0 pins PIO0_19
0x4000104C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000104C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000104C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000104C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000104C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000104C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000104C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001050 B  REGISTER PIO020 (rw): Digital I/O control for port 0 pins PIO0_20
0x40001050 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001050 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001050 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001050 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001050 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001050 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001050 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001054 B  REGISTER PIO021 (rw): Digital I/O control for port 0 pins PIO0_21
0x40001054 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001054 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001054 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001054 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001054 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001054 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001054 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001058 B  REGISTER PIO022 (rw): Digital I/O control for port 0 pins PIO0_22
0x40001058 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001058 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001058 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001058 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001058 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001058 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001058 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000105C B  REGISTER PIO023 (rw): Digital I/O control for port 0 pins PIO0_23
0x4000105C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000105C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000105C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000105C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000105C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000105C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001060 B  REGISTER PIO024 (rw): Digital I/O control for port 0 pins PIO0_24
0x40001060 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001060 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001060 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001060 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001060 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001060 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001060 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001064 B  REGISTER PIO025 (rw): Digital I/O control for port 0 pins PIO0_25
0x40001064 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001064 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001064 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001064 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001064 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001064 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001064 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001068 B  REGISTER PIO026 (rw): Digital I/O control for port 0 pins PIO0_26
0x40001068 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001068 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001068 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001068 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001068 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001068 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001068 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000106C B  REGISTER PIO027 (rw): Digital I/O control for port 0 pins PIO0_27
0x4000106C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000106C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000106C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000106C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000106C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000106C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000106C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001070 B  REGISTER PIO028 (rw): Digital I/O control for port 0 pins PIO0_28
0x40001070 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001070 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001070 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001070 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001070 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001070 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001070 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001074 B  REGISTER PIO029 (rw): Digital I/O control for port 0 pins PIO0_29
0x40001074 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001074 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001074 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001074 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001074 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001074 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001074 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001078 B  REGISTER PIO030 (rw): Digital I/O control for port 0 pins PIO0_30
0x40001078 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001078 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001078 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001078 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001078 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001078 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001078 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000107C B  REGISTER PIO031 (rw): Digital I/O control for port 0 pins PIO0_31
0x4000107C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000107C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000107C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000107C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000107C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000107C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001080 B  REGISTER PIO10 (rw): Digital I/O control for port 1 pins PIO1_0
0x40001080 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001080 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001080 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001080 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001080 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001080 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001084 B  REGISTER PIO11 (rw): Digital I/O control for port 1 pins PIO1_1
0x40001084 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001084 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001084 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001084 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001084 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001084 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001084 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001088 B  REGISTER PIO12 (rw): Digital I/O control for port 1 pins PIO1_2
0x40001088 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001088 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001088 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001088 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001088 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001088 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001088 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000108C B  REGISTER PIO13 (rw): Digital I/O control for port 1 pins PIO1_3
0x4000108C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000108C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000108C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000108C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000108C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000108C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000108C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001090 B  REGISTER PIO14 (rw): Digital I/O control for port 1 pins PIO1_4
0x40001090 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001090 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001090 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001090 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001090 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001090 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001090 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001094 B  REGISTER PIO15 (rw): Digital I/O control for port 1 pins PIO1_5
0x40001094 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001094 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001094 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001094 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001094 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001094 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001094 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001098 B  REGISTER PIO16 (rw): Digital I/O control for port 1 pins PIO1_6
0x40001098 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001098 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001098 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001098 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001098 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001098 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001098 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000109C B  REGISTER PIO17 (rw): Digital I/O control for port 1 pins PIO1_7
0x4000109C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000109C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000109C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000109C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000109C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000109C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000109C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010A0 B  REGISTER PIO18 (rw): Digital I/O control for port 1 pins PIO1_8
0x400010A0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010A0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010A0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010A0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010A0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010A0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010A0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010A4 B  REGISTER PIO19 (rw): Digital I/O control for port 1 pins PIO1_9
0x400010A4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010A4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010A4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010A4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010A4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010A4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010A4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010A8 B  REGISTER PIO110 (rw): Digital I/O control for port 1 pins PIO1_10
0x400010A8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010A8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010A8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010A8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010A8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010A8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010A8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010AC B  REGISTER PIO111 (rw): Digital I/O control for port 1 pins PIO1_11
0x400010AC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010AC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010AC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010AC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010AC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010AC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010AC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010B0 B  REGISTER PIO112 (rw): Digital I/O control for port 1 pins PIO1_12
0x400010B0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010B0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010B0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010B0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010B0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010B0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010B0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010B4 B  REGISTER PIO113 (rw): Digital I/O control for port 1 pins PIO1_13
0x400010B4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010B4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010B4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010B4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010B4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010B4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010B4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010B8 B  REGISTER PIO114 (rw): Digital I/O control for port 1 pins PIO1_14
0x400010B8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010B8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010B8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010B8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010B8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010B8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010B8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010BC B  REGISTER PIO115 (rw): Digital I/O control for port 1 pins PIO1_15
0x400010BC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010BC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010BC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010BC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010BC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010BC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010BC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010C0 B  REGISTER PIO116 (rw): Digital I/O control for port 1 pins PIO1_16
0x400010C0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010C0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010C0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010C0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010C0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010C0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010C0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010C4 B  REGISTER PIO117 (rw): Digital I/O control for port 1 pins PIO1_17
0x400010C4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010C4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010C4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010C4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010C4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010C4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010C4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010C8 B  REGISTER PIO118 (rw): Digital I/O control for port 1 pins PIO1_18
0x400010C8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010C8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010C8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010C8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010C8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010C8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010C8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010CC B  REGISTER PIO119 (rw): Digital I/O control for port 1 pins PIO1_19
0x400010CC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010CC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010CC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010CC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010CC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010CC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010CC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010D0 B  REGISTER PIO120 (rw): Digital I/O control for port 1 pins PIO1_20
0x400010D0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010D0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010D0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010D0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010D0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010D0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010D0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010D4 B  REGISTER PIO121 (rw): Digital I/O control for port 1 pins PIO1_21
0x400010D4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010D4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010D4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010D4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010D4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010D4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010D4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010D8 B  REGISTER PIO122 (rw): Digital I/O control for port 1 pins PIO1_22
0x400010D8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010D8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010D8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010D8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010D8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010D8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010D8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010DC B  REGISTER PIO123 (rw): Digital I/O control for port 1 pins PIO1_23
0x400010DC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010DC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010DC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010DC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010DC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010DC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010DC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010E0 B  REGISTER PIO124 (rw): Digital I/O control for port 1 pins PIO1_24
0x400010E0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010E0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010E0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010E0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010E0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010E0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010E0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010E4 B  REGISTER PIO125 (rw): Digital I/O control for port 1 pins PIO1_25
0x400010E4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010E4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010E4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010E4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010E4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010E4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010E4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010E8 B  REGISTER PIO126 (rw): Digital I/O control for port 1 pins PIO1_26
0x400010E8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010E8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010E8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010E8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010E8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010E8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010E8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010EC B  REGISTER PIO127 (rw): Digital I/O control for port 1 pins PIO1_27
0x400010EC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010EC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010EC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010EC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010EC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010EC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010EC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010F0 B  REGISTER PIO128 (rw): Digital I/O control for port 1 pins PIO1_28
0x400010F0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010F0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010F0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010F0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010F0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010F0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010F0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010F4 B  REGISTER PIO129 (rw): Digital I/O control for port 1 pins PIO1_29
0x400010F4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010F4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010F4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010F4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010F4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010F4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010F4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010F8 B  REGISTER PIO130 (rw): Digital I/O control for port 1 pins PIO1_30
0x400010F8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010F8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010F8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010F8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010F8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010F8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010F8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400010FC B  REGISTER PIO131 (rw): Digital I/O control for port 1 pins PIO1_31
0x400010FC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400010FC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400010FC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400010FC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400010FC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400010FC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400010FC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001100 B  REGISTER PIO20 (rw): Digital I/O control for port 2 pins PIO2_0
0x40001100 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001100 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001100 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001100 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001100 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001100 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001104 B  REGISTER PIO21 (rw): Digital I/O control for port 2 pins PIO2_1
0x40001104 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001104 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001104 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001104 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001104 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001104 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001108 B  REGISTER PIO22 (rw): Digital I/O control for port 2 pins PIO2_2
0x40001108 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001108 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001108 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001108 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001108 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001108 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001108 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000110C B  REGISTER PIO23 (rw): Digital I/O control for port 2 pins PIO2_3
0x4000110C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000110C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000110C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000110C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000110C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000110C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000110C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001110 B  REGISTER PIO24 (rw): Digital I/O control for port 2 pins PIO2_4
0x40001110 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001110 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001110 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001110 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001110 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001110 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001110 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001114 B  REGISTER PIO25 (rw): Digital I/O control for port 2 pins PIO2_5
0x40001114 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001114 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001114 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001114 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001114 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001114 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001114 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001118 B  REGISTER PIO26 (rw): Digital I/O control for port 2 pins PIO2_6
0x40001118 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001118 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001118 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001118 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001118 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001118 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001118 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000111C B  REGISTER PIO27 (rw): Digital I/O control for port 2 pins PIO2_7
0x4000111C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000111C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000111C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000111C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000111C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000111C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000111C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001120 B  REGISTER PIO28 (rw): Digital I/O control for port 2 pins PIO2_8
0x40001120 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001120 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001120 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001120 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001120 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001120 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001120 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001124 B  REGISTER PIO29 (rw): Digital I/O control for port 2 pins PIO2_9
0x40001124 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001124 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001124 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001124 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001124 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001124 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001124 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001128 B  REGISTER PIO210 (rw): Digital I/O control for port 2 pins PIO2_10
0x40001128 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001128 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001128 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001128 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001128 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001128 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001128 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000112C B  REGISTER PIO211 (rw): Digital I/O control for port 2 pins PIO2_11
0x4000112C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000112C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000112C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000112C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000112C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000112C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000112C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001130 B  REGISTER PIO212 (rw): Digital I/O control for port 2 pins PIO2_12
0x40001130 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001130 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001130 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001130 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001130 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001130 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001130 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001134 B  REGISTER PIO213 (rw): Digital I/O control for port 2 pins PIO2_13
0x40001134 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001134 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001134 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001134 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001134 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001134 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001134 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001138 B  REGISTER PIO214 (rw): Digital I/O control for port 2 pins PIO2_14
0x40001138 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001138 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001138 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001138 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001138 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001138 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001138 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000113C B  REGISTER PIO215 (rw): Digital I/O control for port 2 pins PIO2_15
0x4000113C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000113C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000113C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000113C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000113C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000113C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000113C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001140 B  REGISTER PIO216 (rw): Digital I/O control for port 2 pins PIO2_16
0x40001140 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001140 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001140 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001140 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001140 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001140 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001140 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001144 B  REGISTER PIO217 (rw): Digital I/O control for port 2 pins PIO2_17
0x40001144 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001144 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001144 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001144 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001144 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001144 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001144 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001148 B  REGISTER PIO218 (rw): Digital I/O control for port 2 pins PIO2_18
0x40001148 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001148 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001148 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001148 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001148 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001148 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001148 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000114C B  REGISTER PIO219 (rw): Digital I/O control for port 2 pins PIO2_19
0x4000114C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000114C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000114C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000114C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000114C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000114C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000114C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001150 B  REGISTER PIO220 (rw): Digital I/O control for port 2 pins PIO2_20
0x40001150 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001150 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001150 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001150 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001150 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001150 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001150 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001154 B  REGISTER PIO221 (rw): Digital I/O control for port 2 pins PIO2_21
0x40001154 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001154 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001154 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001154 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001154 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001154 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001154 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001158 B  REGISTER PIO222 (rw): Digital I/O control for port 2 pins PIO2_22
0x40001158 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001158 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001158 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001158 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001158 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001158 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001158 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000115C B  REGISTER PIO223 (rw): Digital I/O control for port 2 pins PIO2_23
0x4000115C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000115C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000115C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000115C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000115C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000115C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000115C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001160 B  REGISTER PIO224 (rw): Digital I/O control for port 2 pins PIO2_24
0x40001160 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001160 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001160 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001160 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001160 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001160 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001160 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001164 B  REGISTER PIO225 (rw): Digital I/O control for port 2 pins PIO2_25
0x40001164 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001164 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001164 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001164 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001164 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001164 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001164 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001168 B  REGISTER PIO226 (rw): Digital I/O control for port 2 pins PIO2_26
0x40001168 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001168 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001168 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001168 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001168 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001168 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001168 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000116C B  REGISTER PIO227 (rw): Digital I/O control for port 2 pins PIO2_27
0x4000116C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000116C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000116C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000116C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000116C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000116C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000116C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001170 B  REGISTER PIO228 (rw): Digital I/O control for port 2 pins PIO2_28
0x40001170 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001170 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001170 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001170 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001170 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001170 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001170 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001174 B  REGISTER PIO229 (rw): Digital I/O control for port 2 pins PIO2_29
0x40001174 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001174 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001174 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001174 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001174 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001174 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001174 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001178 B  REGISTER PIO230 (rw): Digital I/O control for port 2 pins PIO2_30
0x40001178 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001178 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001178 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001178 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001178 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001178 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001178 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000117C B  REGISTER PIO231 (rw): Digital I/O control for port 2 pins PIO2_31
0x4000117C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000117C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000117C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000117C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000117C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000117C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000117C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001180 B  REGISTER PIO30 (rw): Digital I/O control for port 3 pins PIO3_0
0x40001180 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001180 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001180 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001180 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001180 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001180 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001180 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001184 B  REGISTER PIO31 (rw): Digital I/O control for port 3 pins PIO3_1
0x40001184 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001184 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001184 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001184 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001184 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001184 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001184 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001188 B  REGISTER PIO32 (rw): Digital I/O control for port 3 pins PIO3_2
0x40001188 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001188 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001188 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001188 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001188 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001188 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001188 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000118C B  REGISTER PIO33 (rw): Digital I/O control for port 3 pins PIO3_3
0x4000118C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000118C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000118C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000118C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000118C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000118C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000118C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001190 B  REGISTER PIO34 (rw): Digital I/O control for port 3 pins PIO3_4
0x40001190 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001190 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001190 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001190 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001190 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001190 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001190 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001194 B  REGISTER PIO35 (rw): Digital I/O control for port 3 pins PIO3_5
0x40001194 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001194 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001194 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001194 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001194 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001194 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001194 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001198 B  REGISTER PIO36 (rw): Digital I/O control for port 3 pins PIO3_6
0x40001198 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001198 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001198 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001198 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001198 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001198 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001198 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000119C B  REGISTER PIO37 (rw): Digital I/O control for port 3 pins PIO3_7
0x4000119C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000119C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000119C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000119C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000119C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000119C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000119C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011A0 B  REGISTER PIO38 (rw): Digital I/O control for port 3 pins PIO3_8
0x400011A0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011A0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011A0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011A0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011A0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011A0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011A0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011A4 B  REGISTER PIO39 (rw): Digital I/O control for port 3 pins PIO3_9
0x400011A4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011A4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011A4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011A4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011A4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011A4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011A4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011A8 B  REGISTER PIO310 (rw): Digital I/O control for port 3 pins PIO3_10
0x400011A8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011A8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011A8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011A8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011A8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011A8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011A8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011AC B  REGISTER PIO311 (rw): Digital I/O control for port 3 pins PIO3_11
0x400011AC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011AC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011AC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011AC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011AC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011AC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011AC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011B0 B  REGISTER PIO312 (rw): Digital I/O control for port 3 pins PIO3_12
0x400011B0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011B0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011B0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011B0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011B0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011B0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011B0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011B4 B  REGISTER PIO313 (rw): Digital I/O control for port 3 pins PIO3_13
0x400011B4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011B4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011B4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011B4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011B4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011B4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011B4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011B8 B  REGISTER PIO314 (rw): Digital I/O control for port 3 pins PIO3_14
0x400011B8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011B8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011B8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011B8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011B8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011B8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011B8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011BC B  REGISTER PIO315 (rw): Digital I/O control for port 3 pins PIO3_15
0x400011BC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011BC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011BC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011BC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011BC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011BC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011BC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011C0 B  REGISTER PIO316 (rw): Digital I/O control for port 3 pins PIO3_16
0x400011C0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011C0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011C0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011C0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011C0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011C0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011C0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011C4 B  REGISTER PIO317 (rw): Digital I/O control for port 3 pins PIO3_17
0x400011C4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011C4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011C4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011C4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011C4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011C4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011C4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011C8 B  REGISTER PIO318 (rw): Digital I/O control for port 3 pins PIO3_18
0x400011C8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011C8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011C8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011C8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011C8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011C8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011C8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011CC B  REGISTER PIO319 (rw): Digital I/O control for port 3 pins PIO3_19
0x400011CC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011CC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011CC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011CC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011CC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011CC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011CC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011D0 B  REGISTER PIO320 (rw): Digital I/O control for port 3 pins PIO3_20
0x400011D0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011D0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011D0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011D0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011D0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011D0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011D0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011D4 B  REGISTER PIO321 (rw): Digital I/O control for port 3 pins PIO3_21
0x400011D4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011D4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011D4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011D4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011D4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011D4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011D8 B  REGISTER PIO322 (rw): Digital I/O control for port 3 pins PIO3_22
0x400011D8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011D8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011D8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011D8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011D8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011D8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011DC B  REGISTER PIO323 (rw): Digital I/O control for port 3 pins PIO3_23
0x400011DC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011DC C   FIELD 06w01 I2CSLEW (rw): Controls slew rate of I2C pad.
0x400011DC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011DC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011DC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011DC C   FIELD 10w01 I2CDRIVE (rw): Controls the current sink capability of the pin.
0x400011DC C   FIELD 11w01 I2CFILTER (rw): Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation.
0x400011E0 B  REGISTER PIO324 (rw): Digital I/O control for port 3 pins PIO3_24
0x400011E0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011E0 C   FIELD 06w01 I2CSLEW (rw): Controls slew rate of I2C pad.
0x400011E0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011E0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011E0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011E0 C   FIELD 10w01 I2CDRIVE (rw): Controls the current sink capability of the pin.
0x400011E0 C   FIELD 11w01 I2CFILTER (rw): Configures I2C features for standard mode, fast mode, and Fast Mode Plus operation.
0x400011E4 B  REGISTER PIO325 (rw): Digital I/O control for port 3 pins PIO3_25
0x400011E4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011E4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011E4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011E4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011E4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011E4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011E4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011E8 B  REGISTER PIO326 (rw): Digital I/O control for port 3 pins PIO3_26
0x400011E8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011E8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011E8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011E8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011E8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011E8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011E8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011EC B  REGISTER PIO327 (rw): Digital I/O control for port 3 pins PIO3_27
0x400011EC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011EC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011EC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011EC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011EC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011EC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011EC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011F0 B  REGISTER PIO328 (rw): Digital I/O control for port 3 pins PIO3_28
0x400011F0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011F0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011F0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011F0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011F0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011F0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011F0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011F4 B  REGISTER PIO329 (rw): Digital I/O control for port 3 pins PIO3_29
0x400011F4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011F4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011F4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011F4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011F4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011F4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011F4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011F8 B  REGISTER PIO330 (rw): Digital I/O control for port 3 pins PIO3_30
0x400011F8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011F8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011F8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011F8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011F8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011F8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011F8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400011FC B  REGISTER PIO331 (rw): Digital I/O control for port 3 pins PIO3_31
0x400011FC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400011FC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400011FC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400011FC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400011FC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400011FC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400011FC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001200 B  REGISTER PIO40 (rw): Digital I/O control for port 4 pins PIO4_0
0x40001200 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001200 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001200 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001200 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001200 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001200 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001200 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001204 B  REGISTER PIO41 (rw): Digital I/O control for port 4 pins PIO4_1
0x40001204 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001204 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001204 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001204 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001204 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001204 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001204 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001208 B  REGISTER PIO42 (rw): Digital I/O control for port 4 pins PIO4_2
0x40001208 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001208 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001208 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001208 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001208 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001208 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001208 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000120C B  REGISTER PIO43 (rw): Digital I/O control for port 4 pins PIO4_3
0x4000120C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000120C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000120C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000120C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000120C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000120C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000120C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001210 B  REGISTER PIO44 (rw): Digital I/O control for port 4 pins PIO4_4
0x40001210 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001210 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001210 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001210 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001210 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001210 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001210 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001214 B  REGISTER PIO45 (rw): Digital I/O control for port 4 pins PIO4_5
0x40001214 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001214 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001214 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001214 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001214 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001214 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001214 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001218 B  REGISTER PIO46 (rw): Digital I/O control for port 4 pins PIO4_6
0x40001218 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001218 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001218 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001218 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001218 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001218 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001218 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000121C B  REGISTER PIO47 (rw): Digital I/O control for port 4 pins PIO4_7
0x4000121C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000121C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000121C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000121C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000121C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000121C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000121C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001220 B  REGISTER PIO48 (rw): Digital I/O control for port 4 pins PIO4_8
0x40001220 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001220 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001220 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001220 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001220 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001220 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001220 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001224 B  REGISTER PIO49 (rw): Digital I/O control for port 4 pins PIO4_9
0x40001224 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001224 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001224 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001224 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001224 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001224 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001224 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001228 B  REGISTER PIO410 (rw): Digital I/O control for port 4 pins PIO4_10
0x40001228 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001228 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001228 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001228 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001228 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001228 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001228 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000122C B  REGISTER PIO411 (rw): Digital I/O control for port 4 pins PIO4_11
0x4000122C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000122C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000122C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000122C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000122C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000122C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000122C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001230 B  REGISTER PIO412 (rw): Digital I/O control for port 4 pins PIO4_12
0x40001230 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001230 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001230 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001230 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001230 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001230 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001230 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001234 B  REGISTER PIO413 (rw): Digital I/O control for port 4 pins PIO4_13
0x40001234 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001234 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001234 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001234 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001234 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001234 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001234 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001238 B  REGISTER PIO414 (rw): Digital I/O control for port 4 pins PIO4_14
0x40001238 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001238 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001238 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001238 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001238 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001238 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001238 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000123C B  REGISTER PIO415 (rw): Digital I/O control for port 4 pins PIO4_15
0x4000123C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000123C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000123C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000123C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000123C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000123C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000123C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001240 B  REGISTER PIO416 (rw): Digital I/O control for port 4 pins PIO4_16
0x40001240 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001240 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001240 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001240 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001240 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001240 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001240 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001244 B  REGISTER PIO417 (rw): Digital I/O control for port 4 pins PIO4_17
0x40001244 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001244 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001244 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001244 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001244 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001244 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001244 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001248 B  REGISTER PIO418 (rw): Digital I/O control for port 4 pins PIO4_18
0x40001248 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001248 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001248 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001248 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001248 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001248 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001248 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000124C B  REGISTER PIO419 (rw): Digital I/O control for port 4 pins PIO4_19
0x4000124C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000124C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000124C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000124C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000124C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000124C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000124C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001250 B  REGISTER PIO420 (rw): Digital I/O control for port 4 pins PIO4_20
0x40001250 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001250 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001250 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001250 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001250 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001250 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001250 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001254 B  REGISTER PIO421 (rw): Digital I/O control for port 4 pins PIO4_21
0x40001254 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001254 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001254 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001254 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001254 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001254 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001254 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001258 B  REGISTER PIO422 (rw): Digital I/O control for port 4 pins PIO4_22
0x40001258 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001258 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001258 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001258 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001258 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001258 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001258 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000125C B  REGISTER PIO423 (rw): Digital I/O control for port 4 pins PIO4_23
0x4000125C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000125C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000125C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000125C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000125C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000125C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000125C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001260 B  REGISTER PIO424 (rw): Digital I/O control for port 4 pins PIO4_24
0x40001260 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001260 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001260 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001260 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001260 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001260 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001260 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001264 B  REGISTER PIO425 (rw): Digital I/O control for port 4 pins PIO4_25
0x40001264 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001264 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001264 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001264 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001264 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001264 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001264 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001268 B  REGISTER PIO426 (rw): Digital I/O control for port 4 pins PIO4_26
0x40001268 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001268 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001268 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001268 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001268 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001268 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001268 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000126C B  REGISTER PIO427 (rw): Digital I/O control for port 4 pins PIO4_27
0x4000126C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000126C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000126C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000126C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000126C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000126C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000126C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001270 B  REGISTER PIO428 (rw): Digital I/O control for port 4 pins PIO4_28
0x40001270 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001270 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001270 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001270 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001270 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001270 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001270 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001274 B  REGISTER PIO429 (rw): Digital I/O control for port 4 pins PIO4_29
0x40001274 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001274 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001274 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001274 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001274 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001274 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001274 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001278 B  REGISTER PIO430 (rw): Digital I/O control for port 4 pins PIO4_30
0x40001278 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001278 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001278 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001278 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001278 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001278 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001278 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000127C B  REGISTER PIO431 (rw): Digital I/O control for port 4 pins PIO4_31
0x4000127C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000127C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000127C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000127C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000127C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000127C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000127C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001280 B  REGISTER PIO50 (rw): Digital I/O control for port 5 pins PIO5_0
0x40001280 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001280 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001280 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001280 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001280 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001280 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001280 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001284 B  REGISTER PIO51 (rw): Digital I/O control for port 5 pins PIO5_1
0x40001284 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001284 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001284 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001284 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001284 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001284 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001284 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001288 B  REGISTER PIO52 (rw): Digital I/O control for port 5 pins PIO5_2
0x40001288 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001288 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001288 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001288 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001288 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001288 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001288 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000128C B  REGISTER PIO53 (rw): Digital I/O control for port 5 pins PIO5_3
0x4000128C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000128C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000128C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000128C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000128C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000128C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000128C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001290 B  REGISTER PIO54 (rw): Digital I/O control for port 5 pins PIO5_4
0x40001290 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001290 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001290 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001290 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001290 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001290 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001290 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001294 B  REGISTER PIO55 (rw): Digital I/O control for port 5 pins PIO5_5
0x40001294 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001294 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001294 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001294 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001294 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001294 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001294 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40001298 B  REGISTER PIO56 (rw): Digital I/O control for port 5 pins PIO5_6
0x40001298 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x40001298 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x40001298 C   FIELD 07w01 INVERT (rw): Input polarity.
0x40001298 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x40001298 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x40001298 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x40001298 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x4000129C B  REGISTER PIO57 (rw): Digital I/O control for port 5 pins PIO5_7
0x4000129C C   FIELD 00w04 FUNC (rw): Selects pin function.
0x4000129C C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x4000129C C   FIELD 07w01 INVERT (rw): Input polarity.
0x4000129C C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x4000129C C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x4000129C C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x4000129C C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012A0 B  REGISTER PIO58 (rw): Digital I/O control for port 5 pins PIO5_8
0x400012A0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012A0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012A0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012A0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012A0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012A0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012A0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012A4 B  REGISTER PIO59 (rw): Digital I/O control for port 5 pins PIO5_9
0x400012A4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012A4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012A4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012A4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012A4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012A4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012A4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012A8 B  REGISTER PIO510 (rw): Digital I/O control for port 5 pins PIO5_10
0x400012A8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012A8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012A8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012A8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012A8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012A8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012A8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012AC B  REGISTER PIO511 (rw): Digital I/O control for port 5 pins PIO5_11
0x400012AC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012AC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012AC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012AC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012AC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012AC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012AC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012B0 B  REGISTER PIO512 (rw): Digital I/O control for port 5 pins PIO5_12
0x400012B0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012B0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012B0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012B0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012B0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012B0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012B0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012B4 B  REGISTER PIO513 (rw): Digital I/O control for port 5 pins PIO5_13
0x400012B4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012B4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012B4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012B4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012B4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012B4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012B4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012B8 B  REGISTER PIO514 (rw): Digital I/O control for port 5 pins PIO5_14
0x400012B8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012B8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012B8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012B8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012B8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012B8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012B8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012BC B  REGISTER PIO515 (rw): Digital I/O control for port 5 pins PIO5_15
0x400012BC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012BC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012BC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012BC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012BC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012BC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012BC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012C0 B  REGISTER PIO516 (rw): Digital I/O control for port 5 pins PIO5_16
0x400012C0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012C0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012C0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012C0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012C0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012C0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012C0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012C4 B  REGISTER PIO517 (rw): Digital I/O control for port 5 pins PIO5_17
0x400012C4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012C4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012C4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012C4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012C4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012C4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012C4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012C8 B  REGISTER PIO518 (rw): Digital I/O control for port 5 pins PIO5_18
0x400012C8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012C8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012C8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012C8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012C8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012C8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012C8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012CC B  REGISTER PIO519 (rw): Digital I/O control for port 5 pins PIO5_19
0x400012CC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012CC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012CC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012CC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012CC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012CC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012CC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012D0 B  REGISTER PIO520 (rw): Digital I/O control for port 5 pins PIO5_20
0x400012D0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012D0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012D0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012D0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012D0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012D0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012D0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012D4 B  REGISTER PIO521 (rw): Digital I/O control for port 5 pins PIO5_21
0x400012D4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012D4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012D4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012D4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012D4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012D4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012D4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012D8 B  REGISTER PIO522 (rw): Digital I/O control for port 5 pins PIO5_22
0x400012D8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012D8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012D8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012D8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012D8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012D8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012D8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012DC B  REGISTER PIO523 (rw): Digital I/O control for port 5 pins PIO5_23
0x400012DC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012DC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012DC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012DC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012DC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012DC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012DC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012E0 B  REGISTER PIO524 (rw): Digital I/O control for port 5 pins PIO5_24
0x400012E0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012E0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012E0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012E0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012E0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012E0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012E0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012E4 B  REGISTER PIO525 (rw): Digital I/O control for port 5 pins PIO5_25
0x400012E4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012E4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012E4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012E4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012E4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012E4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012E4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012E8 B  REGISTER PIO526 (rw): Digital I/O control for port 5 pins PIO5_26
0x400012E8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012E8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012E8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012E8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012E8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012E8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012E8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012EC B  REGISTER PIO527 (rw): Digital I/O control for port 5 pins PIO5_27
0x400012EC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012EC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012EC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012EC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012EC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012EC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012EC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012F0 B  REGISTER PIO528 (rw): Digital I/O control for port 5 pins PIO5_28
0x400012F0 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012F0 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012F0 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012F0 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012F0 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012F0 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012F0 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012F4 B  REGISTER PIO529 (rw): Digital I/O control for port 5 pins PIO5_29
0x400012F4 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012F4 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012F4 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012F4 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012F4 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012F4 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012F4 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012F8 B  REGISTER PIO530 (rw): Digital I/O control for port 5 pins PIO5_30
0x400012F8 C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012F8 C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012F8 C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012F8 C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012F8 C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012F8 C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012F8 C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x400012FC B  REGISTER PIO531 (rw): Digital I/O control for port 5 pins PIO5_31
0x400012FC C   FIELD 00w04 FUNC (rw): Selects pin function.
0x400012FC C   FIELD 04w02 MODE (rw): Selects function mode (on-chip pull-up/pull-down resistor control).
0x400012FC C   FIELD 07w01 INVERT (rw): Input polarity.
0x400012FC C   FIELD 08w01 DIGIMODE (rw): Select Analog/Digital mode.
0x400012FC C   FIELD 09w01 FILTEROFF (rw): Controls input glitch filter.
0x400012FC C   FIELD 10w01 SLEW (rw): Driver slew rate.
0x400012FC C   FIELD 11w01 OD (rw): Controls open-drain mode.
0x40002000 A PERIPHERAL GINT0
0x40002000 B  REGISTER CTRL (rw): GPIO grouped interrupt control register
0x40002000 C   FIELD 00w01 INT (rw): Group interrupt status. This bit is cleared by writing a one to it. Writing zero has no effect.
0x40002000 C   FIELD 01w01 COMB (rw): Combine enabled inputs for group interrupt
0x40002000 C   FIELD 02w01 TRIG (rw): Group interrupt trigger
0x40002020 B  REGISTER PORT_POL[0] (rw): GPIO grouped interrupt port 0 polarity register
0x40002020 C   FIELD 00w32 POL (rw): Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt.
0x40002024 B  REGISTER PORT_POL[1] (rw): GPIO grouped interrupt port 0 polarity register
0x40002024 C   FIELD 00w32 POL (rw): Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt.
0x40002040 B  REGISTER PORT_ENA[0] (rw): GPIO grouped interrupt port 0 enable register
0x40002040 C   FIELD 00w32 ENA (rw): Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt.
0x40002044 B  REGISTER PORT_ENA[1] (rw): GPIO grouped interrupt port 0 enable register
0x40002044 C   FIELD 00w32 ENA (rw): Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt.
0x40003000 A PERIPHERAL GINT1
0x40003000 B  REGISTER CTRL (rw): GPIO grouped interrupt control register
0x40003000 C   FIELD 00w01 INT (rw): Group interrupt status. This bit is cleared by writing a one to it. Writing zero has no effect.
0x40003000 C   FIELD 01w01 COMB (rw): Combine enabled inputs for group interrupt
0x40003000 C   FIELD 02w01 TRIG (rw): Group interrupt trigger
0x40003020 B  REGISTER PORT_POL[0] (rw): GPIO grouped interrupt port 0 polarity register
0x40003020 C   FIELD 00w32 POL (rw): Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt.
0x40003024 B  REGISTER PORT_POL[1] (rw): GPIO grouped interrupt port 0 polarity register
0x40003024 C   FIELD 00w32 POL (rw): Configure pin polarity of port m pins for group interrupt. Bit n corresponds to pin PIOm_n of port m. 0 = the pin is active LOW. If the level on this pin is LOW, the pin contributes to the group interrupt. 1 = the pin is active HIGH. If the level on this pin is HIGH, the pin contributes to the group interrupt.
0x40003040 B  REGISTER PORT_ENA[0] (rw): GPIO grouped interrupt port 0 enable register
0x40003040 C   FIELD 00w32 ENA (rw): Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt.
0x40003044 B  REGISTER PORT_ENA[1] (rw): GPIO grouped interrupt port 0 enable register
0x40003044 C   FIELD 00w32 ENA (rw): Enable port 0 pin for group interrupt. Bit n corresponds to pin Pm_n of port m. 0 = the port 0 pin is disabled and does not contribute to the grouped interrupt. 1 = the port 0 pin is enabled and contributes to the grouped interrupt.
0x40004000 A PERIPHERAL PINT
0x40004000 B  REGISTER ISEL (rw): Pin Interrupt Mode register
0x40004000 C   FIELD 00w08 PMODE (rw): Selects the interrupt mode for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Edge sensitive 1 = Level sensitive
0x40004004 B  REGISTER IENR (rw): Pin interrupt level or rising edge interrupt enable register
0x40004004 C   FIELD 00w08 ENRL (rw): Enables the rising edge or level interrupt for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Disable rising edge or level interrupt. 1 = Enable rising edge or level interrupt.
0x40004008 B  REGISTER SIENR (wo): Pin interrupt level or rising edge interrupt set register
0x40004008 C   FIELD 00w08 SETENRL (wo): Ones written to this address set bits in the IENR, thus enabling interrupts. Bit n sets bit n in the IENR register. 0 = No operation. 1 = Enable rising edge or level interrupt.
0x4000400C B  REGISTER CIENR (wo): Pin interrupt level (rising edge interrupt) clear register
0x4000400C C   FIELD 00w08 CENRL (wo): Ones written to this address clear bits in the IENR, thus disabling the interrupts. Bit n clears bit n in the IENR register. 0 = No operation. 1 = Disable rising edge or level interrupt.
0x40004010 B  REGISTER IENF (rw): Pin interrupt active level or falling edge interrupt enable register
0x40004010 C   FIELD 00w08 ENAF (rw): Enables the falling edge or configures the active level interrupt for each pin interrupt. Bit n configures the pin interrupt selected in PINTSELn. 0 = Disable falling edge interrupt or set active interrupt level LOW. 1 = Enable falling edge interrupt enabled or set active interrupt level HIGH.
0x40004014 B  REGISTER SIENF (wo): Pin interrupt active level or falling edge interrupt set register
0x40004014 C   FIELD 00w08 SETENAF (wo): Ones written to this address set bits in the IENF, thus enabling interrupts. Bit n sets bit n in the IENF register. 0 = No operation. 1 = Select HIGH-active interrupt or enable falling edge interrupt.
0x40004018 B  REGISTER CIENF (wo): Pin interrupt active level or falling edge interrupt clear register
0x40004018 C   FIELD 00w08 CENAF (wo): Ones written to this address clears bits in the IENF, thus disabling interrupts. Bit n clears bit n in the IENF register. 0 = No operation. 1 = LOW-active interrupt selected or falling edge interrupt disabled.
0x4000401C B  REGISTER RISE (rw): Pin interrupt rising edge register
0x4000401C C   FIELD 00w08 RDET (rw): Rising edge detect. Bit n detects the rising edge of the pin selected in PINTSELn. Read 0: No rising edge has been detected on this pin since Reset or the last time a one was written to this bit. Write 0: no operation. Read 1: a rising edge has been detected since Reset or the last time a one was written to this bit. Write 1: clear rising edge detection for this pin.
0x40004020 B  REGISTER FALL (rw): Pin interrupt falling edge register
0x40004020 C   FIELD 00w08 FDET (rw): Falling edge detect. Bit n detects the falling edge of the pin selected in PINTSELn. Read 0: No falling edge has been detected on this pin since Reset or the last time a one was written to this bit. Write 0: no operation. Read 1: a falling edge has been detected since Reset or the last time a one was written to this bit. Write 1: clear falling edge detection for this pin.
0x40004024 B  REGISTER IST (rw): Pin interrupt status register
0x40004024 C   FIELD 00w08 PSTAT (rw): Pin interrupt status. Bit n returns the status, clears the edge interrupt, or inverts the active level of the pin selected in PINTSELn. Read 0: interrupt is not being requested for this interrupt pin. Write 0: no operation. Read 1: interrupt is being requested for this interrupt pin. Write 1 (edge-sensitive): clear rising- and falling-edge detection for this pin. Write 1 (level-sensitive): switch the active level for this pin (in the IENF register).
0x40004028 B  REGISTER PMCTRL (rw): Pattern match interrupt control register
0x40004028 C   FIELD 00w01 SEL_PMATCH (rw): Specifies whether the 8 pin interrupts are controlled by the pin interrupt function or by the pattern match function.
0x40004028 C   FIELD 01w01 ENA_RXEV (rw): Enables the RXEV output to the CPU and/or to a GPIO output when the specified boolean expression evaluates to true.
0x40004028 C   FIELD 24w08 PMAT (rw): This field displays the current state of pattern matches. A 1 in any bit of this field indicates that the corresponding product term is matched by the current state of the appropriate inputs.
0x4000402C B  REGISTER PMSRC (rw): Pattern match interrupt bit-slice source register
0x4000402C C   FIELD 08w03 SRC0 (rw): Selects the input source for bit slice 0
0x4000402C C   FIELD 11w03 SRC1 (rw): Selects the input source for bit slice 1
0x4000402C C   FIELD 14w03 SRC2 (rw): Selects the input source for bit slice 2
0x4000402C C   FIELD 17w03 SRC3 (rw): Selects the input source for bit slice 3
0x4000402C C   FIELD 20w03 SRC4 (rw): Selects the input source for bit slice 4
0x4000402C C   FIELD 23w03 SRC5 (rw): Selects the input source for bit slice 5
0x4000402C C   FIELD 26w03 SRC6 (rw): Selects the input source for bit slice 6
0x4000402C C   FIELD 29w03 SRC7 (rw): Selects the input source for bit slice 7
0x40004030 B  REGISTER PMCFG (rw): Pattern match interrupt bit slice configuration register
0x40004030 C   FIELD 00w01 PROD_ENDPTS0 (rw): Determines whether slice 0 is an endpoint.
0x40004030 C   FIELD 01w01 PROD_ENDPTS1 (rw): Determines whether slice 1 is an endpoint.
0x40004030 C   FIELD 02w01 PROD_ENDPTS2 (rw): Determines whether slice 2 is an endpoint.
0x40004030 C   FIELD 03w01 PROD_ENDPTS3 (rw): Determines whether slice 3 is an endpoint.
0x40004030 C   FIELD 04w01 PROD_ENDPTS4 (rw): Determines whether slice 4 is an endpoint.
0x40004030 C   FIELD 05w01 PROD_ENDPTS5 (rw): Determines whether slice 5 is an endpoint.
0x40004030 C   FIELD 06w01 PROD_ENDPTS6 (rw): Determines whether slice 6 is an endpoint.
0x40004030 C   FIELD 08w03 CFG0 (rw): Specifies the match contribution condition for bit slice 0.
0x40004030 C   FIELD 11w03 CFG1 (rw): Specifies the match contribution condition for bit slice 1.
0x40004030 C   FIELD 14w03 CFG2 (rw): Specifies the match contribution condition for bit slice 2.
0x40004030 C   FIELD 17w03 CFG3 (rw): Specifies the match contribution condition for bit slice 3.
0x40004030 C   FIELD 20w03 CFG4 (rw): Specifies the match contribution condition for bit slice 4.
0x40004030 C   FIELD 23w03 CFG5 (rw): Specifies the match contribution condition for bit slice 5.
0x40004030 C   FIELD 26w03 CFG6 (rw): Specifies the match contribution condition for bit slice 6.
0x40004030 C   FIELD 29w03 CFG7 (rw): Specifies the match contribution condition for bit slice 7.
0x40005000 A PERIPHERAL INPUTMUX
0x40005000 B  REGISTER SCT0_INMUX[0] (rw): Trigger select register for DMA channel
0x40005000 C   FIELD 00w05 INP_N (rw): Input number to SCT0 inputs 0 to 6..
0x40005004 B  REGISTER SCT0_INMUX[1] (rw): Trigger select register for DMA channel
0x40005004 C   FIELD 00w05 INP_N (rw): Input number to SCT0 inputs 0 to 6..
0x40005008 B  REGISTER SCT0_INMUX[2] (rw): Trigger select register for DMA channel
0x40005008 C   FIELD 00w05 INP_N (rw): Input number to SCT0 inputs 0 to 6..
0x4000500C B  REGISTER SCT0_INMUX[3] (rw): Trigger select register for DMA channel
0x4000500C C   FIELD 00w05 INP_N (rw): Input number to SCT0 inputs 0 to 6..
0x40005010 B  REGISTER SCT0_INMUX[4] (rw): Trigger select register for DMA channel
0x40005010 C   FIELD 00w05 INP_N (rw): Input number to SCT0 inputs 0 to 6..
0x40005014 B  REGISTER SCT0_INMUX[5] (rw): Trigger select register for DMA channel
0x40005014 C   FIELD 00w05 INP_N (rw): Input number to SCT0 inputs 0 to 6..
0x40005018 B  REGISTER SCT0_INMUX[6] (rw): Trigger select register for DMA channel
0x40005018 C   FIELD 00w05 INP_N (rw): Input number to SCT0 inputs 0 to 6..
0x400050C0 B  REGISTER PINTSEL[0] (rw): Pin interrupt select register
0x400050C0 C   FIELD 00w08 INTPIN (rw): Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
0x400050C4 B  REGISTER PINTSEL[1] (rw): Pin interrupt select register
0x400050C4 C   FIELD 00w08 INTPIN (rw): Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
0x400050C8 B  REGISTER PINTSEL[2] (rw): Pin interrupt select register
0x400050C8 C   FIELD 00w08 INTPIN (rw): Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
0x400050CC B  REGISTER PINTSEL[3] (rw): Pin interrupt select register
0x400050CC C   FIELD 00w08 INTPIN (rw): Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
0x400050D0 B  REGISTER PINTSEL[4] (rw): Pin interrupt select register
0x400050D0 C   FIELD 00w08 INTPIN (rw): Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
0x400050D4 B  REGISTER PINTSEL[5] (rw): Pin interrupt select register
0x400050D4 C   FIELD 00w08 INTPIN (rw): Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
0x400050D8 B  REGISTER PINTSEL[6] (rw): Pin interrupt select register
0x400050D8 C   FIELD 00w08 INTPIN (rw): Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
0x400050DC B  REGISTER PINTSEL[7] (rw): Pin interrupt select register
0x400050DC C   FIELD 00w08 INTPIN (rw): Pin number select for pin interrupt or pattern match engine input. (PIO0_0 to PIO1_31 correspond to numbers 0 to 63).
0x400050E0 B  REGISTER DMA_ITRIG_INMUX[0] (rw): Trigger select register for DMA channel
0x400050E0 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x400050E4 B  REGISTER DMA_ITRIG_INMUX[1] (rw): Trigger select register for DMA channel
0x400050E4 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x400050E8 B  REGISTER DMA_ITRIG_INMUX[2] (rw): Trigger select register for DMA channel
0x400050E8 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x400050EC B  REGISTER DMA_ITRIG_INMUX[3] (rw): Trigger select register for DMA channel
0x400050EC C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x400050F0 B  REGISTER DMA_ITRIG_INMUX[4] (rw): Trigger select register for DMA channel
0x400050F0 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x400050F4 B  REGISTER DMA_ITRIG_INMUX[5] (rw): Trigger select register for DMA channel
0x400050F4 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x400050F8 B  REGISTER DMA_ITRIG_INMUX[6] (rw): Trigger select register for DMA channel
0x400050F8 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x400050FC B  REGISTER DMA_ITRIG_INMUX[7] (rw): Trigger select register for DMA channel
0x400050FC C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005100 B  REGISTER DMA_ITRIG_INMUX[8] (rw): Trigger select register for DMA channel
0x40005100 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005104 B  REGISTER DMA_ITRIG_INMUX[9] (rw): Trigger select register for DMA channel
0x40005104 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005108 B  REGISTER DMA_ITRIG_INMUX[10] (rw): Trigger select register for DMA channel
0x40005108 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x4000510C B  REGISTER DMA_ITRIG_INMUX[11] (rw): Trigger select register for DMA channel
0x4000510C C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005110 B  REGISTER DMA_ITRIG_INMUX[12] (rw): Trigger select register for DMA channel
0x40005110 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005114 B  REGISTER DMA_ITRIG_INMUX[13] (rw): Trigger select register for DMA channel
0x40005114 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005118 B  REGISTER DMA_ITRIG_INMUX[14] (rw): Trigger select register for DMA channel
0x40005118 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x4000511C B  REGISTER DMA_ITRIG_INMUX[15] (rw): Trigger select register for DMA channel
0x4000511C C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005120 B  REGISTER DMA_ITRIG_INMUX[16] (rw): Trigger select register for DMA channel
0x40005120 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005124 B  REGISTER DMA_ITRIG_INMUX[17] (rw): Trigger select register for DMA channel
0x40005124 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005128 B  REGISTER DMA_ITRIG_INMUX[18] (rw): Trigger select register for DMA channel
0x40005128 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x4000512C B  REGISTER DMA_ITRIG_INMUX[19] (rw): Trigger select register for DMA channel
0x4000512C C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005130 B  REGISTER DMA_ITRIG_INMUX[20] (rw): Trigger select register for DMA channel
0x40005130 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005134 B  REGISTER DMA_ITRIG_INMUX[21] (rw): Trigger select register for DMA channel
0x40005134 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005138 B  REGISTER DMA_ITRIG_INMUX[22] (rw): Trigger select register for DMA channel
0x40005138 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x4000513C B  REGISTER DMA_ITRIG_INMUX[23] (rw): Trigger select register for DMA channel
0x4000513C C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005140 B  REGISTER DMA_ITRIG_INMUX[24] (rw): Trigger select register for DMA channel
0x40005140 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005144 B  REGISTER DMA_ITRIG_INMUX[25] (rw): Trigger select register for DMA channel
0x40005144 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005148 B  REGISTER DMA_ITRIG_INMUX[26] (rw): Trigger select register for DMA channel
0x40005148 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x4000514C B  REGISTER DMA_ITRIG_INMUX[27] (rw): Trigger select register for DMA channel
0x4000514C C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005150 B  REGISTER DMA_ITRIG_INMUX[28] (rw): Trigger select register for DMA channel
0x40005150 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005154 B  REGISTER DMA_ITRIG_INMUX[29] (rw): Trigger select register for DMA channel
0x40005154 C   FIELD 00w05 INP (rw): Trigger input number (decimal value) for DMA channel n (n = 0 to 21). 0 = ADC0 Sequence A interrupt 1 = ADC0 Sequence B interrupt 2 = SCT0 DMA request 0 3 = SCT0 DMA request 1 4 = Timer CTIMER0 Match 0 5 = Timer CTIMER0 Match 1 6 = Timer CTIMER1 Match 0 7 = Timer CTIMER2 Match 0 8 = Timer CTIMER2 Match 1 9 = Timer CTIMER3 Match 0 10 = Timer CTIMER4 Match 0 11 = Timer CTIMER4 Match 1 12 = Pin interrupt 0 13 = Pin interrupt 1 14 = Pin interrupt 2 15 = Pin interrupt 3 16 = DMA output trigger mux 0 17 = DMA output trigger mux 1 18 = DMA output trigger mux 2 19 = DMA output trigger mux 3
0x40005160 B  REGISTER DMA_OTRIG_INMUX[0] (rw): DMA output trigger selection to become DMA trigger
0x40005160 C   FIELD 00w05 INP (rw): DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19).
0x40005164 B  REGISTER DMA_OTRIG_INMUX[1] (rw): DMA output trigger selection to become DMA trigger
0x40005164 C   FIELD 00w05 INP (rw): DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19).
0x40005168 B  REGISTER DMA_OTRIG_INMUX[2] (rw): DMA output trigger selection to become DMA trigger
0x40005168 C   FIELD 00w05 INP (rw): DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19).
0x4000516C B  REGISTER DMA_OTRIG_INMUX[3] (rw): DMA output trigger selection to become DMA trigger
0x4000516C C   FIELD 00w05 INP (rw): DMA trigger output number (decimal value) for DMA channel n (n = 0 to 19).
0x40005180 B  REGISTER FREQMEAS_REF (rw): Selection for frequency measurement reference clock
0x40005180 C   FIELD 00w05 CLKIN (rw): Clock source number (decimal value) for frequency measure function target clock: 0 = CLK_IN 1 = FRO 12 MHz oscillator 2 = Watchdog oscillator 3 = 32 kHz RTC oscillator 4 = Main clock (see Section 4.5.23) 5 = PIO0_4 6 = PIO0_20 7 = PIO0_24 8 = PIO1_4
0x40005184 B  REGISTER FREQMEAS_TARGET (rw): Selection for frequency measurement target clock
0x40005184 C   FIELD 00w05 CLKIN (rw): Clock source number (decimal value) for frequency measure function target clock: 0 = CLK_IN 1 = FRO 12 MHz oscillator 2 = Watchdog oscillator 3 = 32 kHz RTC oscillator 4 = Main clock (see Section 4.5.23) 5 = PIO0_4 6 = PIO0_20 7 = PIO0_24 8 = PIO1_4
0x40008000 A PERIPHERAL CTIMER0
0x40008000 B  REGISTER IR (rw): Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending.
0x40008000 C   FIELD 00w01 MR0INT (rw): Interrupt flag for match channel 0.
0x40008000 C   FIELD 01w01 MR1INT (rw): Interrupt flag for match channel 1.
0x40008000 C   FIELD 02w01 MR2INT (rw): Interrupt flag for match channel 2.
0x40008000 C   FIELD 03w01 MR3INT (rw): Interrupt flag for match channel 3.
0x40008000 C   FIELD 04w01 CR0INT (rw): Interrupt flag for capture channel 0 event.
0x40008000 C   FIELD 05w01 CR1INT (rw): Interrupt flag for capture channel 1 event.
0x40008000 C   FIELD 06w01 CR2INT (rw): Interrupt flag for capture channel 2 event.
0x40008000 C   FIELD 07w01 CR3INT (rw): Interrupt flag for capture channel 3 event.
0x40008004 B  REGISTER TCR (rw): Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.
0x40008004 C   FIELD 00w01 CEN (rw): Counter enable.
0x40008004 C   FIELD 01w01 CRST (rw): Counter reset.
0x40008008 B  REGISTER TC (rw): Timer Counter
0x40008008 C   FIELD 00w32 TCVAL (rw): Timer counter value.
0x4000800C B  REGISTER PR (rw): Prescale Register
0x4000800C C   FIELD 00w32 PRVAL (rw): Prescale counter value.
0x40008010 B  REGISTER PC (rw): Prescale Counter
0x40008010 C   FIELD 00w32 PCVAL (rw): Prescale counter value.
0x40008014 B  REGISTER MCR (rw): Match Control Register
0x40008014 C   FIELD 00w01 MR0I (rw): Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC.
0x40008014 C   FIELD 01w01 MR0R (rw): Reset on MR0: the TC will be reset if MR0 matches it.
0x40008014 C   FIELD 02w01 MR0S (rw): Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC.
0x40008014 C   FIELD 03w01 MR1I (rw): Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC.
0x40008014 C   FIELD 04w01 MR1R (rw): Reset on MR1: the TC will be reset if MR1 matches it.
0x40008014 C   FIELD 05w01 MR1S (rw): Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC.
0x40008014 C   FIELD 06w01 MR2I (rw): Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC.
0x40008014 C   FIELD 07w01 MR2R (rw): Reset on MR2: the TC will be reset if MR2 matches it.
0x40008014 C   FIELD 08w01 MR2S (rw): Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC.
0x40008014 C   FIELD 09w01 MR3I (rw): Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC.
0x40008014 C   FIELD 10w01 MR3R (rw): Reset on MR3: the TC will be reset if MR3 matches it.
0x40008014 C   FIELD 11w01 MR3S (rw): Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC.
0x40008014 C   FIELD 24w01 MR0RL (rw): Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40008014 C   FIELD 25w01 MR1RL (rw): Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40008014 C   FIELD 26w01 MR2RL (rw): Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40008014 C   FIELD 27w01 MR3RL (rw): Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40008018 B  REGISTER MR[0] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40008018 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x4000801C B  REGISTER MR[1] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x4000801C C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40008020 B  REGISTER MR[2] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40008020 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40008024 B  REGISTER MR[3] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40008024 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40008028 B  REGISTER CCR (rw): Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.
0x40008028 C   FIELD 00w01 CAP0RE (rw): Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40008028 C   FIELD 01w01 CAP0FE (rw): Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40008028 C   FIELD 02w01 CAP0I (rw): Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt.
0x40008028 C   FIELD 03w01 CAP1RE (rw): Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40008028 C   FIELD 04w01 CAP1FE (rw): Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40008028 C   FIELD 05w01 CAP1I (rw): Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt.
0x40008028 C   FIELD 06w01 CAP2RE (rw): Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40008028 C   FIELD 07w01 CAP2FE (rw): Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40008028 C   FIELD 08w01 CAP2I (rw): Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt.
0x40008028 C   FIELD 09w01 CAP3RE (rw): Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40008028 C   FIELD 10w01 CAP3FE (rw): Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40008028 C   FIELD 11w01 CAP3I (rw): Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt.
0x4000802C B  REGISTER CR[0] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x4000802C C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40008030 B  REGISTER CR[1] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40008030 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40008034 B  REGISTER CR[2] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40008034 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40008038 B  REGISTER CR[3] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40008038 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x4000803C B  REGISTER EMR (rw): External Match Register. The EMR controls the match function and the external match pins.
0x4000803C C   FIELD 00w01 EM0 (rw): External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4000803C C   FIELD 01w01 EM1 (rw): External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4000803C C   FIELD 02w01 EM2 (rw): External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4000803C C   FIELD 03w01 EM3 (rw): External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4000803C C   FIELD 04w02 EMC0 (rw): External Match Control 0. Determines the functionality of External Match 0.
0x4000803C C   FIELD 06w02 EMC1 (rw): External Match Control 1. Determines the functionality of External Match 1.
0x4000803C C   FIELD 08w02 EMC2 (rw): External Match Control 2. Determines the functionality of External Match 2.
0x4000803C C   FIELD 10w02 EMC3 (rw): External Match Control 3. Determines the functionality of External Match 3.
0x40008070 B  REGISTER CTCR (rw): Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.
0x40008070 C   FIELD 00w02 CTMODE (rw): Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register.
0x40008070 C   FIELD 02w02 CINSEL (rw): Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer.
0x40008070 C   FIELD 04w01 ENCC (rw): Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs.
0x40008070 C   FIELD 05w03 SELCC (rw): Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.
0x40008074 B  REGISTER PWMC (rw): PWM Control Register. The PWMCON enables PWM mode for the external match pins.
0x40008074 C   FIELD 00w01 PWMEN0 (rw): PWM mode enable for channel0.
0x40008074 C   FIELD 01w01 PWMEN1 (rw): PWM mode enable for channel1.
0x40008074 C   FIELD 02w01 PWMEN2 (rw): PWM mode enable for channel2.
0x40008074 C   FIELD 03w01 PWMEN3 (rw): PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle.
0x40008078 B  REGISTER MSR[0] (rw): Match Shadow Register
0x40008078 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x4000807C B  REGISTER MSR[1] (rw): Match Shadow Register
0x4000807C C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40008080 B  REGISTER MSR[2] (rw): Match Shadow Register
0x40008080 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40008084 B  REGISTER MSR[3] (rw): Match Shadow Register
0x40008084 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40009000 A PERIPHERAL CTIMER1
0x40009000 B  REGISTER IR (rw): Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending.
0x40009000 C   FIELD 00w01 MR0INT (rw): Interrupt flag for match channel 0.
0x40009000 C   FIELD 01w01 MR1INT (rw): Interrupt flag for match channel 1.
0x40009000 C   FIELD 02w01 MR2INT (rw): Interrupt flag for match channel 2.
0x40009000 C   FIELD 03w01 MR3INT (rw): Interrupt flag for match channel 3.
0x40009000 C   FIELD 04w01 CR0INT (rw): Interrupt flag for capture channel 0 event.
0x40009000 C   FIELD 05w01 CR1INT (rw): Interrupt flag for capture channel 1 event.
0x40009000 C   FIELD 06w01 CR2INT (rw): Interrupt flag for capture channel 2 event.
0x40009000 C   FIELD 07w01 CR3INT (rw): Interrupt flag for capture channel 3 event.
0x40009004 B  REGISTER TCR (rw): Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.
0x40009004 C   FIELD 00w01 CEN (rw): Counter enable.
0x40009004 C   FIELD 01w01 CRST (rw): Counter reset.
0x40009008 B  REGISTER TC (rw): Timer Counter
0x40009008 C   FIELD 00w32 TCVAL (rw): Timer counter value.
0x4000900C B  REGISTER PR (rw): Prescale Register
0x4000900C C   FIELD 00w32 PRVAL (rw): Prescale counter value.
0x40009010 B  REGISTER PC (rw): Prescale Counter
0x40009010 C   FIELD 00w32 PCVAL (rw): Prescale counter value.
0x40009014 B  REGISTER MCR (rw): Match Control Register
0x40009014 C   FIELD 00w01 MR0I (rw): Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC.
0x40009014 C   FIELD 01w01 MR0R (rw): Reset on MR0: the TC will be reset if MR0 matches it.
0x40009014 C   FIELD 02w01 MR0S (rw): Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC.
0x40009014 C   FIELD 03w01 MR1I (rw): Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC.
0x40009014 C   FIELD 04w01 MR1R (rw): Reset on MR1: the TC will be reset if MR1 matches it.
0x40009014 C   FIELD 05w01 MR1S (rw): Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC.
0x40009014 C   FIELD 06w01 MR2I (rw): Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC.
0x40009014 C   FIELD 07w01 MR2R (rw): Reset on MR2: the TC will be reset if MR2 matches it.
0x40009014 C   FIELD 08w01 MR2S (rw): Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC.
0x40009014 C   FIELD 09w01 MR3I (rw): Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC.
0x40009014 C   FIELD 10w01 MR3R (rw): Reset on MR3: the TC will be reset if MR3 matches it.
0x40009014 C   FIELD 11w01 MR3S (rw): Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC.
0x40009014 C   FIELD 24w01 MR0RL (rw): Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40009014 C   FIELD 25w01 MR1RL (rw): Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40009014 C   FIELD 26w01 MR2RL (rw): Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40009014 C   FIELD 27w01 MR3RL (rw): Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40009018 B  REGISTER MR[0] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40009018 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x4000901C B  REGISTER MR[1] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x4000901C C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40009020 B  REGISTER MR[2] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40009020 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40009024 B  REGISTER MR[3] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40009024 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40009028 B  REGISTER CCR (rw): Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.
0x40009028 C   FIELD 00w01 CAP0RE (rw): Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40009028 C   FIELD 01w01 CAP0FE (rw): Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40009028 C   FIELD 02w01 CAP0I (rw): Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt.
0x40009028 C   FIELD 03w01 CAP1RE (rw): Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40009028 C   FIELD 04w01 CAP1FE (rw): Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40009028 C   FIELD 05w01 CAP1I (rw): Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt.
0x40009028 C   FIELD 06w01 CAP2RE (rw): Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40009028 C   FIELD 07w01 CAP2FE (rw): Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40009028 C   FIELD 08w01 CAP2I (rw): Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt.
0x40009028 C   FIELD 09w01 CAP3RE (rw): Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40009028 C   FIELD 10w01 CAP3FE (rw): Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40009028 C   FIELD 11w01 CAP3I (rw): Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt.
0x4000902C B  REGISTER CR[0] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x4000902C C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40009030 B  REGISTER CR[1] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40009030 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40009034 B  REGISTER CR[2] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40009034 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40009038 B  REGISTER CR[3] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40009038 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x4000903C B  REGISTER EMR (rw): External Match Register. The EMR controls the match function and the external match pins.
0x4000903C C   FIELD 00w01 EM0 (rw): External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4000903C C   FIELD 01w01 EM1 (rw): External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4000903C C   FIELD 02w01 EM2 (rw): External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4000903C C   FIELD 03w01 EM3 (rw): External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4000903C C   FIELD 04w02 EMC0 (rw): External Match Control 0. Determines the functionality of External Match 0.
0x4000903C C   FIELD 06w02 EMC1 (rw): External Match Control 1. Determines the functionality of External Match 1.
0x4000903C C   FIELD 08w02 EMC2 (rw): External Match Control 2. Determines the functionality of External Match 2.
0x4000903C C   FIELD 10w02 EMC3 (rw): External Match Control 3. Determines the functionality of External Match 3.
0x40009070 B  REGISTER CTCR (rw): Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.
0x40009070 C   FIELD 00w02 CTMODE (rw): Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register.
0x40009070 C   FIELD 02w02 CINSEL (rw): Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer.
0x40009070 C   FIELD 04w01 ENCC (rw): Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs.
0x40009070 C   FIELD 05w03 SELCC (rw): Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.
0x40009074 B  REGISTER PWMC (rw): PWM Control Register. The PWMCON enables PWM mode for the external match pins.
0x40009074 C   FIELD 00w01 PWMEN0 (rw): PWM mode enable for channel0.
0x40009074 C   FIELD 01w01 PWMEN1 (rw): PWM mode enable for channel1.
0x40009074 C   FIELD 02w01 PWMEN2 (rw): PWM mode enable for channel2.
0x40009074 C   FIELD 03w01 PWMEN3 (rw): PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle.
0x40009078 B  REGISTER MSR[0] (rw): Match Shadow Register
0x40009078 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x4000907C B  REGISTER MSR[1] (rw): Match Shadow Register
0x4000907C C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40009080 B  REGISTER MSR[2] (rw): Match Shadow Register
0x40009080 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40009084 B  REGISTER MSR[3] (rw): Match Shadow Register
0x40009084 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x4000C000 A PERIPHERAL WWDT
0x4000C000 B  REGISTER MOD (rw): Watchdog mode register. This register contains the basic mode and status of the Watchdog Timer.
0x4000C000 C   FIELD 00w01 WDEN (rw): Watchdog enable bit. Once this bit is set to one and a watchdog feed is performed, the watchdog timer will run permanently.
0x4000C000 C   FIELD 01w01 WDRESET (rw): Watchdog reset enable bit. Once this bit has been written with a 1 it cannot be re-written with a 0.
0x4000C000 C   FIELD 02w01 WDTOF (rw): Watchdog time-out flag. Set when the watchdog timer times out, by a feed error, or by events associated with WDPROTECT. Cleared by software writing a 0 to this bit position. Causes a chip reset if WDRESET = 1.
0x4000C000 C   FIELD 03w01 WDINT (rw): Warning interrupt flag. Set when the timer is at or below the value in WDWARNINT. Cleared by software writing a 1 to this bit position. Note that this bit cannot be cleared while the WARNINT value is equal to the value of the TV register. This can occur if the value of WARNINT is 0 and the WDRESET bit is 0 when TV decrements to 0.
0x4000C000 C   FIELD 04w01 WDPROTECT (rw): Watchdog update mode. This bit can be set once by software and is only cleared by a reset.
0x4000C000 C   FIELD 05w01 LOCK (rw): Once this bit is set to one and a watchdog feed is performed, disabling or powering down the watchdog oscillator is prevented by hardware. This bit can be set once by software and is only cleared by any reset.
0x4000C004 B  REGISTER TC (rw): Watchdog timer constant register. This 24-bit register determines the time-out value.
0x4000C004 C   FIELD 00w24 COUNT (rw): Watchdog time-out value.
0x4000C008 B  REGISTER FEED (wo): Watchdog feed sequence register. Writing 0xAA followed by 0x55 to this register reloads the Watchdog timer with the value contained in TC.
0x4000C008 C   FIELD 00w08 FEED (wo): Feed value should be 0xAA followed by 0x55.
0x4000C00C B  REGISTER TV (ro): Watchdog timer value register. This 24-bit register reads out the current value of the Watchdog timer.
0x4000C00C C   FIELD 00w24 COUNT (ro): Counter timer value.
0x4000C014 B  REGISTER WARNINT (rw): Watchdog Warning Interrupt compare value.
0x4000C014 C   FIELD 00w10 WARNINT (rw): Watchdog warning interrupt compare value.
0x4000C018 B  REGISTER WINDOW (rw): Watchdog Window compare value.
0x4000C018 C   FIELD 00w24 WINDOW (rw): Watchdog window value.
0x4000D000 A PERIPHERAL MRT0
0x4000D000 B  CLUSTER CHANNEL[0]: no description available
0x4000D000 B  REGISTER INTVAL0 (rw): MRT Time interval value register. This value is loaded into the TIMER register.
0x4000D000 C   FIELD 00w24 IVALUE (rw): Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval.
0x4000D000 C   FIELD 31w01 LOAD (rw): Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0.
0x4000D004 B  REGISTER TIMER0 (ro): MRT Timer register. This register reads the value of the down-counter.
0x4000D004 C   FIELD 00w24 VALUE (ro): Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF).
0x4000D008 B  REGISTER CTRL0 (rw): MRT Control register. This register controls the MRT modes.
0x4000D008 C   FIELD 00w01 INTEN (rw): Enable the TIMERn interrupt.
0x4000D008 C   FIELD 01w02 MODE (rw): Selects timer mode.
0x4000D00C B  REGISTER STAT0 (rw): MRT Status register.
0x4000D00C C   FIELD 00w01 INTFLAG (rw): Monitors the interrupt flag.
0x4000D00C C   FIELD 01w01 RUN (rw): Indicates the state of TIMERn. This bit is read-only.
0x4000D00C C   FIELD 02w01 INUSE (rw): Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes.
0x4000D010 B  CLUSTER CHANNEL[1]: no description available
0x4000D010 B  REGISTER INTVAL1 (rw): MRT Time interval value register. This value is loaded into the TIMER register.
0x4000D010 C   FIELD 00w24 IVALUE (rw): Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval.
0x4000D010 C   FIELD 31w01 LOAD (rw): Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0.
0x4000D014 B  REGISTER TIMER1 (ro): MRT Timer register. This register reads the value of the down-counter.
0x4000D014 C   FIELD 00w24 VALUE (ro): Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF).
0x4000D018 B  REGISTER CTRL1 (rw): MRT Control register. This register controls the MRT modes.
0x4000D018 C   FIELD 00w01 INTEN (rw): Enable the TIMERn interrupt.
0x4000D018 C   FIELD 01w02 MODE (rw): Selects timer mode.
0x4000D01C B  REGISTER STAT1 (rw): MRT Status register.
0x4000D01C C   FIELD 00w01 INTFLAG (rw): Monitors the interrupt flag.
0x4000D01C C   FIELD 01w01 RUN (rw): Indicates the state of TIMERn. This bit is read-only.
0x4000D01C C   FIELD 02w01 INUSE (rw): Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes.
0x4000D020 B  CLUSTER CHANNEL[2]: no description available
0x4000D020 B  REGISTER INTVAL2 (rw): MRT Time interval value register. This value is loaded into the TIMER register.
0x4000D020 C   FIELD 00w24 IVALUE (rw): Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval.
0x4000D020 C   FIELD 31w01 LOAD (rw): Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0.
0x4000D024 B  REGISTER TIMER2 (ro): MRT Timer register. This register reads the value of the down-counter.
0x4000D024 C   FIELD 00w24 VALUE (ro): Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF).
0x4000D028 B  REGISTER CTRL2 (rw): MRT Control register. This register controls the MRT modes.
0x4000D028 C   FIELD 00w01 INTEN (rw): Enable the TIMERn interrupt.
0x4000D028 C   FIELD 01w02 MODE (rw): Selects timer mode.
0x4000D02C B  REGISTER STAT2 (rw): MRT Status register.
0x4000D02C C   FIELD 00w01 INTFLAG (rw): Monitors the interrupt flag.
0x4000D02C C   FIELD 01w01 RUN (rw): Indicates the state of TIMERn. This bit is read-only.
0x4000D02C C   FIELD 02w01 INUSE (rw): Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes.
0x4000D030 B  CLUSTER CHANNEL[3]: no description available
0x4000D030 B  REGISTER INTVAL3 (rw): MRT Time interval value register. This value is loaded into the TIMER register.
0x4000D030 C   FIELD 00w24 IVALUE (rw): Time interval load value. This value is loaded into the TIMERn register and the MRT channel n starts counting down from IVALUE -1. If the timer is idle, writing a non-zero value to this bit field starts the timer immediately. If the timer is running, writing a zero to this bit field does the following: If LOAD = 1, the timer stops immediately. If LOAD = 0, the timer stops at the end of the time interval.
0x4000D030 C   FIELD 31w01 LOAD (rw): Determines how the timer interval value IVALUE -1 is loaded into the TIMERn register. This bit is write-only. Reading this bit always returns 0.
0x4000D034 B  REGISTER TIMER3 (ro): MRT Timer register. This register reads the value of the down-counter.
0x4000D034 C   FIELD 00w24 VALUE (ro): Holds the current timer value of the down-counter. The initial value of the TIMERn register is loaded as IVALUE - 1 from the INTVALn register either at the end of the time interval or immediately in the following cases: INTVALn register is updated in the idle state. INTVALn register is updated with LOAD = 1. When the timer is in idle state, reading this bit fields returns -1 (0x00FF FFFF).
0x4000D038 B  REGISTER CTRL3 (rw): MRT Control register. This register controls the MRT modes.
0x4000D038 C   FIELD 00w01 INTEN (rw): Enable the TIMERn interrupt.
0x4000D038 C   FIELD 01w02 MODE (rw): Selects timer mode.
0x4000D03C B  REGISTER STAT3 (rw): MRT Status register.
0x4000D03C C   FIELD 00w01 INTFLAG (rw): Monitors the interrupt flag.
0x4000D03C C   FIELD 01w01 RUN (rw): Indicates the state of TIMERn. This bit is read-only.
0x4000D03C C   FIELD 02w01 INUSE (rw): Channel In Use flag. Operating details depend on the MULTITASK bit in the MODCFG register, and affects the use of IDLE_CH. See Idle channel register for details of the two operating modes.
0x4000D0F0 B  REGISTER MODCFG (rw): Module Configuration register. This register provides information about this particular MRT instance, and allows choosing an overall mode for the idle channel feature.
0x4000D0F0 C   FIELD 00w04 NOC (rw): Identifies the number of channels in this MRT.(4 channels on this device.)
0x4000D0F0 C   FIELD 04w05 NOB (rw): Identifies the number of timer bits in this MRT. (24 bits wide on this device.)
0x4000D0F0 C   FIELD 31w01 MULTITASK (rw): Selects the operating mode for the INUSE flags and the IDLE_CH register.
0x4000D0F4 B  REGISTER IDLE_CH (ro): Idle channel register. This register returns the number of the first idle channel.
0x4000D0F4 C   FIELD 04w04 CHAN (ro): Idle channel. Reading the CHAN bits, returns the lowest idle timer channel. The number is positioned such that it can be used as an offset from the MRT base address in order to access the registers for the allocated channel. If all timer channels are running, CHAN = 0xF. See text above for more details.
0x4000D0F8 B  REGISTER IRQ_FLAG (rw): Global interrupt flag register
0x4000D0F8 C   FIELD 00w01 GFLAG0 (rw): Monitors the interrupt flag of TIMER0.
0x4000D0F8 C   FIELD 01w01 GFLAG1 (rw): Monitors the interrupt flag of TIMER1. See description of channel 0.
0x4000D0F8 C   FIELD 02w01 GFLAG2 (rw): Monitors the interrupt flag of TIMER2. See description of channel 0.
0x4000D0F8 C   FIELD 03w01 GFLAG3 (rw): Monitors the interrupt flag of TIMER3. See description of channel 0.
0x4000E000 A PERIPHERAL UTICK0
0x4000E000 B  REGISTER CTRL (rw): Control register.
0x4000E000 C   FIELD 00w31 DELAYVAL (rw): Tick interval value. The delay will be equal to DELAYVAL + 1 periods of the timer clock. The minimum usable value is 1, for a delay of 2 timer clocks. A value of 0 stops the timer.
0x4000E000 C   FIELD 31w01 REPEAT (rw): Repeat delay. 0 = One-time delay. 1 = Delay repeats continuously.
0x4000E004 B  REGISTER STAT (rw): Status register.
0x4000E004 C   FIELD 00w01 INTR (rw): Interrupt flag. 0 = No interrupt is pending. 1 = An interrupt is pending. A write of any value to this register clears this flag.
0x4000E004 C   FIELD 01w01 ACTIVE (rw): Active flag. 0 = The Micro-Tick Timer is stopped. 1 = The Micro-Tick Timer is currently active.
0x4000E008 B  REGISTER CFG (rw): Capture configuration register.
0x4000E008 C   FIELD 00w01 CAPEN0 (rw): Enable Capture 0. 1 = Enabled, 0 = Disabled.
0x4000E008 C   FIELD 01w01 CAPEN1 (rw): Enable Capture 1. 1 = Enabled, 0 = Disabled.
0x4000E008 C   FIELD 02w01 CAPEN2 (rw): Enable Capture 2. 1 = Enabled, 0 = Disabled.
0x4000E008 C   FIELD 03w01 CAPEN3 (rw): Enable Capture 3. 1 = Enabled, 0 = Disabled.
0x4000E008 C   FIELD 08w01 CAPPOL0 (rw): Capture Polarity 0. 0 = Positive edge capture, 1 = Negative edge capture.
0x4000E008 C   FIELD 09w01 CAPPOL1 (rw): Capture Polarity 1. 0 = Positive edge capture, 1 = Negative edge capture.
0x4000E008 C   FIELD 10w01 CAPPOL2 (rw): Capture Polarity 2. 0 = Positive edge capture, 1 = Negative edge capture.
0x4000E008 C   FIELD 11w01 CAPPOL3 (rw): Capture Polarity 3. 0 = Positive edge capture, 1 = Negative edge capture.
0x4000E00C B  REGISTER CAPCLR (wo): Capture clear register.
0x4000E00C C   FIELD 00w01 CAPCLR0 (wo): Clear capture 0. Writing 1 to this bit clears the CAP0 register value.
0x4000E00C C   FIELD 01w01 CAPCLR1 (wo): Clear capture 1. Writing 1 to this bit clears the CAP1 register value.
0x4000E00C C   FIELD 02w01 CAPCLR2 (wo): Clear capture 2. Writing 1 to this bit clears the CAP2 register value.
0x4000E00C C   FIELD 03w01 CAPCLR3 (wo): Clear capture 3. Writing 1 to this bit clears the CAP3 register value.
0x4000E010 B  REGISTER CAP[0] (ro): Capture register .
0x4000E010 C   FIELD 00w31 CAP_VALUE (ro): Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event.
0x4000E010 C   FIELD 31w01 VALID (ro): Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register.
0x4000E014 B  REGISTER CAP[1] (ro): Capture register .
0x4000E014 C   FIELD 00w31 CAP_VALUE (ro): Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event.
0x4000E014 C   FIELD 31w01 VALID (ro): Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register.
0x4000E018 B  REGISTER CAP[2] (ro): Capture register .
0x4000E018 C   FIELD 00w31 CAP_VALUE (ro): Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event.
0x4000E018 C   FIELD 31w01 VALID (ro): Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register.
0x4000E01C B  REGISTER CAP[3] (ro): Capture register .
0x4000E01C C   FIELD 00w31 CAP_VALUE (ro): Capture value for the related capture event (UTICK_CAPn. Note: the value is 1 lower than the actual value of the Micro-tick Timer at the moment of the capture event.
0x4000E01C C   FIELD 31w01 VALID (ro): Capture Valid. When 1, a value has been captured based on a transition of the related UTICK_CAPn pin. Cleared by writing to the related bit in the CAPCLR register.
0x40014000 A PERIPHERAL EEPROM
0x40014000 B  REGISTER CMD (rw): EEPROM command register
0x40014000 C   FIELD 00w03 CMD (rw): Command.
0x40014008 B  REGISTER RWSTATE (rw): EEPROM read wait state register
0x40014008 C   FIELD 00w08 RPHASE2 (rw): Wait states 2 (minus 1 encoded).
0x40014008 C   FIELD 08w08 RPHASE1 (rw): Wait states 1 (minus 1 encoded).
0x4001400C B  REGISTER AUTOPROG (rw): EEPROM auto programming register
0x4001400C C   FIELD 00w02 AUTOPROG (rw): Auto programming mode: 00 = auto programming off 01 = erase/program cycle is triggered after 1 word is written 10 = erase/program cycle is triggered after a write to AHB address ending with .
0x40014010 B  REGISTER WSTATE (rw): EEPROM wait state register
0x40014010 C   FIELD 00w08 PHASE3 (rw): Wait states for phase 3 (minus 1 encoded).
0x40014010 C   FIELD 08w08 PHASE2 (rw): Wait states for phase 2 (minus 1 encoded).
0x40014010 C   FIELD 16w08 PHASE1 (rw): Wait states for phase 1 (minus 1 encoded).
0x40014010 C   FIELD 31w01 LCK_PARWEP (rw): Lock timing parameters for write, erase and program operation 0 = WSTATE and CLKDIV registers have R/W access 1 = WSTATE and CLKDIV registers have R only access.
0x40014014 B  REGISTER CLKDIV (rw): EEPROM clock divider register
0x40014014 C   FIELD 00w16 CLKDIV (rw): Division factor (minus 1 encoded).
0x40014018 B  REGISTER PWRDWN (rw): EEPROM power-down register
0x40014018 C   FIELD 00w01 PWRDWN (rw): Power down mode bit.
0x40014FD8 B  REGISTER INTENCLR (wo): EEPROM interrupt enable clear
0x40014FD8 C   FIELD 02w01 PROG_CLR_EN (wo): Clear program operation finished interrupt enable bit for EEPROM.
0x40014FDC B  REGISTER INTENSET (wo): EEPROM interrupt enable set
0x40014FDC C   FIELD 02w01 PROG_SET_EN (wo): Set program operation finished interrupt enable bit for EEPROM device 1.
0x40014FE0 B  REGISTER INTSTAT (ro): EEPROM interrupt status
0x40014FE0 C   FIELD 02w01 END_OF_PROG (ro): EEPROM program operation finished interrupt status bit.
0x40014FE4 B  REGISTER INTEN (ro): EEPROM interrupt enable
0x40014FE4 C   FIELD 02w01 EE_PROG_DONE (ro): EEPROM program operation finished interrupt enable bit.
0x40014FE8 B  REGISTER INTSTATCLR (wo): EEPROM interrupt status clear
0x40014FE8 C   FIELD 02w01 PROG_CLR_ST (wo): Clear program operation finished interrupt status bit for EEPROM device.
0x40014FEC B  REGISTER INTSTATSET (wo): EEPROM interrupt status set
0x40014FEC C   FIELD 02w01 PROG_SET_ST (wo): Set program operation finished interrupt status bit for EEPROM device.
0x40015000 A PERIPHERAL OTPC
0x40015010 B  REGISTER AESKEY[0] (ro): Register for reading the AES key.
0x40015010 C   FIELD 00w32 KEY (ro): AES key.
0x40015014 B  REGISTER AESKEY[1] (ro): Register for reading the AES key.
0x40015014 C   FIELD 00w32 KEY (ro): AES key.
0x40015018 B  REGISTER AESKEY[2] (ro): Register for reading the AES key.
0x40015018 C   FIELD 00w32 KEY (ro): AES key.
0x4001501C B  REGISTER AESKEY[3] (ro): Register for reading the AES key.
0x4001501C C   FIELD 00w32 KEY (ro): AES key.
0x40015020 B  REGISTER AESKEY[4] (ro): Register for reading the AES key.
0x40015020 C   FIELD 00w32 KEY (ro): AES key.
0x40015024 B  REGISTER AESKEY[5] (ro): Register for reading the AES key.
0x40015024 C   FIELD 00w32 KEY (ro): AES key.
0x40015028 B  REGISTER AESKEY[6] (ro): Register for reading the AES key.
0x40015028 C   FIELD 00w32 KEY (ro): AES key.
0x4001502C B  REGISTER AESKEY[7] (ro): Register for reading the AES key.
0x4001502C C   FIELD 00w32 KEY (ro): AES key.
0x40015030 B  REGISTER ECRP (ro): ECRP options.
0x40015030 C   FIELD 04w01 CRP_MASS_ERASE_DISABLE (ro): Disable or enable CRP mass erase.
0x40015030 C   FIELD 05w01 IAP_PROTECTION_ENABLE (ro): This bit controls the ability to enable checking for ECRP in IAP functions.
0x40015030 C   FIELD 06w01 CRP_ISP_DISABLE_PIN (ro): This bit controls the ability to enter ISP mode using the ISP pin.
0x40015030 C   FIELD 07w01 CRP_ISP_DISABLE_IAP (ro): This bit controls the ability to re-invoke ISP using IAP routines.
0x40015030 C   FIELD 09w01 CRP_ALLOW_ZERO (ro): This bit controls how 0 is treated when read as a ECRP value..
0x40015030 C   FIELD 31w01 JTAG_DISABLE (ro): 0 => Enable SWD/JTAG; 1 => Disable SWD/JTAG..
0x40015038 B  REGISTER USER0 (ro): User application specific options.
0x40015038 C   FIELD 00w32 USER0 (ro): User application specific option.
0x4001503C B  REGISTER USER1 (ro): User application specific options.
0x4001503C C   FIELD 00w32 USER1 (ro): User application specific option.
0x40020044 B  REGISTER BODCTRL (rw): Brown-Out Detect control
0x40020044 C   FIELD 00w02 BODRSTLEV (rw): BOD reset level
0x40020044 C   FIELD 02w01 BODRSTENA (rw): BOD reset enable
0x40020044 C   FIELD 03w02 BODINTLEV (rw): BOD interrupt level
0x40020044 C   FIELD 05w01 BODINTENA (rw): BOD interrupt enable
0x40020044 C   FIELD 06w01 BODRSTSTAT (rw): BOD reset status. When 1, a BOD reset has occurred. Cleared by writing 1 to this bit.
0x40020044 C   FIELD 07w01 BODINTSTAT (rw): BOD interrupt status. When 1, a BOD interrupt has occurred. Cleared by writing 1 to this bit.
0x40028000 A PERIPHERAL CTIMER2
0x40028000 B  REGISTER IR (rw): Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending.
0x40028000 C   FIELD 00w01 MR0INT (rw): Interrupt flag for match channel 0.
0x40028000 C   FIELD 01w01 MR1INT (rw): Interrupt flag for match channel 1.
0x40028000 C   FIELD 02w01 MR2INT (rw): Interrupt flag for match channel 2.
0x40028000 C   FIELD 03w01 MR3INT (rw): Interrupt flag for match channel 3.
0x40028000 C   FIELD 04w01 CR0INT (rw): Interrupt flag for capture channel 0 event.
0x40028000 C   FIELD 05w01 CR1INT (rw): Interrupt flag for capture channel 1 event.
0x40028000 C   FIELD 06w01 CR2INT (rw): Interrupt flag for capture channel 2 event.
0x40028000 C   FIELD 07w01 CR3INT (rw): Interrupt flag for capture channel 3 event.
0x40028004 B  REGISTER TCR (rw): Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.
0x40028004 C   FIELD 00w01 CEN (rw): Counter enable.
0x40028004 C   FIELD 01w01 CRST (rw): Counter reset.
0x40028008 B  REGISTER TC (rw): Timer Counter
0x40028008 C   FIELD 00w32 TCVAL (rw): Timer counter value.
0x4002800C B  REGISTER PR (rw): Prescale Register
0x4002800C C   FIELD 00w32 PRVAL (rw): Prescale counter value.
0x40028010 B  REGISTER PC (rw): Prescale Counter
0x40028010 C   FIELD 00w32 PCVAL (rw): Prescale counter value.
0x40028014 B  REGISTER MCR (rw): Match Control Register
0x40028014 C   FIELD 00w01 MR0I (rw): Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC.
0x40028014 C   FIELD 01w01 MR0R (rw): Reset on MR0: the TC will be reset if MR0 matches it.
0x40028014 C   FIELD 02w01 MR0S (rw): Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC.
0x40028014 C   FIELD 03w01 MR1I (rw): Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC.
0x40028014 C   FIELD 04w01 MR1R (rw): Reset on MR1: the TC will be reset if MR1 matches it.
0x40028014 C   FIELD 05w01 MR1S (rw): Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC.
0x40028014 C   FIELD 06w01 MR2I (rw): Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC.
0x40028014 C   FIELD 07w01 MR2R (rw): Reset on MR2: the TC will be reset if MR2 matches it.
0x40028014 C   FIELD 08w01 MR2S (rw): Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC.
0x40028014 C   FIELD 09w01 MR3I (rw): Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC.
0x40028014 C   FIELD 10w01 MR3R (rw): Reset on MR3: the TC will be reset if MR3 matches it.
0x40028014 C   FIELD 11w01 MR3S (rw): Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC.
0x40028014 C   FIELD 24w01 MR0RL (rw): Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40028014 C   FIELD 25w01 MR1RL (rw): Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40028014 C   FIELD 26w01 MR2RL (rw): Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40028014 C   FIELD 27w01 MR3RL (rw): Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40028018 B  REGISTER MR[0] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40028018 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x4002801C B  REGISTER MR[1] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x4002801C C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40028020 B  REGISTER MR[2] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40028020 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40028024 B  REGISTER MR[3] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40028024 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40028028 B  REGISTER CCR (rw): Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.
0x40028028 C   FIELD 00w01 CAP0RE (rw): Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40028028 C   FIELD 01w01 CAP0FE (rw): Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40028028 C   FIELD 02w01 CAP0I (rw): Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt.
0x40028028 C   FIELD 03w01 CAP1RE (rw): Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40028028 C   FIELD 04w01 CAP1FE (rw): Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40028028 C   FIELD 05w01 CAP1I (rw): Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt.
0x40028028 C   FIELD 06w01 CAP2RE (rw): Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40028028 C   FIELD 07w01 CAP2FE (rw): Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40028028 C   FIELD 08w01 CAP2I (rw): Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt.
0x40028028 C   FIELD 09w01 CAP3RE (rw): Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40028028 C   FIELD 10w01 CAP3FE (rw): Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40028028 C   FIELD 11w01 CAP3I (rw): Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt.
0x4002802C B  REGISTER CR[0] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x4002802C C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40028030 B  REGISTER CR[1] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40028030 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40028034 B  REGISTER CR[2] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40028034 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40028038 B  REGISTER CR[3] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40028038 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x4002803C B  REGISTER EMR (rw): External Match Register. The EMR controls the match function and the external match pins.
0x4002803C C   FIELD 00w01 EM0 (rw): External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4002803C C   FIELD 01w01 EM1 (rw): External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4002803C C   FIELD 02w01 EM2 (rw): External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4002803C C   FIELD 03w01 EM3 (rw): External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4002803C C   FIELD 04w02 EMC0 (rw): External Match Control 0. Determines the functionality of External Match 0.
0x4002803C C   FIELD 06w02 EMC1 (rw): External Match Control 1. Determines the functionality of External Match 1.
0x4002803C C   FIELD 08w02 EMC2 (rw): External Match Control 2. Determines the functionality of External Match 2.
0x4002803C C   FIELD 10w02 EMC3 (rw): External Match Control 3. Determines the functionality of External Match 3.
0x40028070 B  REGISTER CTCR (rw): Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.
0x40028070 C   FIELD 00w02 CTMODE (rw): Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register.
0x40028070 C   FIELD 02w02 CINSEL (rw): Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer.
0x40028070 C   FIELD 04w01 ENCC (rw): Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs.
0x40028070 C   FIELD 05w03 SELCC (rw): Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.
0x40028074 B  REGISTER PWMC (rw): PWM Control Register. The PWMCON enables PWM mode for the external match pins.
0x40028074 C   FIELD 00w01 PWMEN0 (rw): PWM mode enable for channel0.
0x40028074 C   FIELD 01w01 PWMEN1 (rw): PWM mode enable for channel1.
0x40028074 C   FIELD 02w01 PWMEN2 (rw): PWM mode enable for channel2.
0x40028074 C   FIELD 03w01 PWMEN3 (rw): PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle.
0x40028078 B  REGISTER MSR[0] (rw): Match Shadow Register
0x40028078 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x4002807C B  REGISTER MSR[1] (rw): Match Shadow Register
0x4002807C C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40028080 B  REGISTER MSR[2] (rw): Match Shadow Register
0x40028080 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40028084 B  REGISTER MSR[3] (rw): Match Shadow Register
0x40028084 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x4002C000 A PERIPHERAL RTC
0x4002C000 B  REGISTER CTRL (rw): RTC control register
0x4002C000 C   FIELD 00w01 SWRESET (rw): Software reset control
0x4002C000 C   FIELD 02w01 ALARM1HZ (rw): RTC 1 Hz timer alarm flag status.
0x4002C000 C   FIELD 03w01 WAKE1KHZ (rw): RTC 1 kHz timer wake-up flag status.
0x4002C000 C   FIELD 04w01 ALARMDPD_EN (rw): RTC 1 Hz timer alarm enable for Deep power-down.
0x4002C000 C   FIELD 05w01 WAKEDPD_EN (rw): RTC 1 kHz timer wake-up enable for Deep power-down.
0x4002C000 C   FIELD 06w01 RTC1KHZ_EN (rw): RTC 1 kHz clock enable. This bit can be set to 0 to conserve power if the 1 kHz timer is not used. This bit has no effect when the RTC is disabled (bit 7 of this register is 0).
0x4002C000 C   FIELD 07w01 RTC_EN (rw): RTC enable.
0x4002C000 C   FIELD 08w01 RTC_OSC_PD (rw): RTC oscillator power-down control.
0x4002C004 B  REGISTER MATCH (rw): RTC match register
0x4002C004 C   FIELD 00w32 MATVAL (rw): Contains the match value against which the 1 Hz RTC timer will be compared to set the alarm flag RTC_ALARM and generate an alarm interrupt/wake-up if enabled.
0x4002C008 B  REGISTER COUNT (rw): RTC counter register
0x4002C008 C   FIELD 00w32 VAL (rw): A read reflects the current value of the main, 1 Hz RTC timer. A write loads a new initial value into the timer. The RTC counter will count up continuously at a 1 Hz rate once the RTC Software Reset is removed (by clearing bit 0 of the CTRL register). Only write to this register when the RTC_EN bit in the RTC CTRL Register is 0. The counter increments one second after the RTC_EN bit is set.
0x4002C00C B  REGISTER WAKE (rw): High-resolution/wake-up timer control register
0x4002C00C C   FIELD 00w16 VAL (rw): A read reflects the current value of the high-resolution/wake-up timer. A write pre-loads a start count value into the wake-up timer and initializes a count-down sequence. Do not write to this register while counting is in progress.
0x4002C040 B  REGISTER GPREG[0] (rw): General Purpose register
0x4002C040 C   FIELD 00w32 GPDATA (rw): Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied.
0x4002C044 B  REGISTER GPREG[1] (rw): General Purpose register
0x4002C044 C   FIELD 00w32 GPDATA (rw): Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied.
0x4002C048 B  REGISTER GPREG[2] (rw): General Purpose register
0x4002C048 C   FIELD 00w32 GPDATA (rw): Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied.
0x4002C04C B  REGISTER GPREG[3] (rw): General Purpose register
0x4002C04C C   FIELD 00w32 GPDATA (rw): Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied.
0x4002C050 B  REGISTER GPREG[4] (rw): General Purpose register
0x4002C050 C   FIELD 00w32 GPDATA (rw): Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied.
0x4002C054 B  REGISTER GPREG[5] (rw): General Purpose register
0x4002C054 C   FIELD 00w32 GPDATA (rw): Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied.
0x4002C058 B  REGISTER GPREG[6] (rw): General Purpose register
0x4002C058 C   FIELD 00w32 GPDATA (rw): Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied.
0x4002C05C B  REGISTER GPREG[7] (rw): General Purpose register
0x4002C05C C   FIELD 00w32 GPDATA (rw): Data retained during Deep power-down mode or loss of main power as long as VBAT is supplied.
0x4002D000 A PERIPHERAL RIT
0x4002D000 B  REGISTER COMPVAL (rw): Compare value LSB register
0x4002D000 C   FIELD 00w32 RICOMP (rw): .
0x4002D004 B  REGISTER MASK (rw): Mask LSB register
0x4002D004 C   FIELD 00w32 RIMASK (rw): Mask register.
0x4002D008 B  REGISTER CTRL (rw): Control register
0x4002D008 C   FIELD 00w01 RITINT (rw): Interrupt flag.
0x4002D008 C   FIELD 01w01 RITENCLR (rw): Timer enable clear.
0x4002D008 C   FIELD 02w01 RITENBR (rw): Timer enable for debug.
0x4002D008 C   FIELD 03w01 RITEN (rw): Timer enable.
0x4002D00C B  REGISTER COUNTER (rw): Counter LSB register
0x4002D00C C   FIELD 00w32 RICOUNTER (rw): 32 LSBs of the up counter.
0x4002D010 B  REGISTER COMPVAL_H (rw): Compare value MSB register
0x4002D010 C   FIELD 00w16 RICOMP (rw): Compare value MSB register.
0x4002D014 B  REGISTER MASK_H (rw): Mask MSB register
0x4002D014 C   FIELD 00w16 RIMASK (rw): Mask register.
0x4002D01C B  REGISTER COUNTER_H (rw): Counter MSB register
0x4002D01C C   FIELD 00w16 RICOUNTER (rw): 16 LSBs of the up counter.
0x40034000 A PERIPHERAL FMC
0x40034000 B  REGISTER FCTR (rw): Control register
0x40034000 C   FIELD 03w01 FS_RD0 (rw): Value must be 0 for signature generation.
0x40034000 C   FIELD 04w01 FS_RD1 (rw): Value must be 1 for signature generation.
0x40034010 B  REGISTER FBWST (rw): Wait state register
0x40034010 C   FIELD 00w08 WAITSTATES (rw): Wait states for signature generation.
0x40034020 B  REGISTER FMSSTART (rw): Signature start address register
0x40034020 C   FIELD 00w17 START (rw): Signature generation start address (corresponds to AHB byte address bits[20:4]).
0x40034024 B  REGISTER FMSSTOP (rw): Signature stop-address register
0x40034024 C   FIELD 00w17 STOP (rw): Stop address for signature generation (the word specified by STOP is included in the address range).
0x40034024 C   FIELD 17w01 SIG_START (rw): When this bit is written to 1, signature generation starts.
0x4003402C B  REGISTER FMSW[0] (ro): Words of 128-bit signature word
0x4003402C C   FIELD 00w32 SW (ro): Words of 128-bit signature (bits).
0x40034030 B  REGISTER FMSW[1] (ro): Words of 128-bit signature word
0x40034030 C   FIELD 00w32 SW (ro): Words of 128-bit signature (bits).
0x40034034 B  REGISTER FMSW[2] (ro): Words of 128-bit signature word
0x40034034 C   FIELD 00w32 SW (ro): Words of 128-bit signature (bits).
0x40034038 B  REGISTER FMSW[3] (ro): Words of 128-bit signature word
0x40034038 C   FIELD 00w32 SW (ro): Words of 128-bit signature (bits).
0x40034FE0 B  REGISTER FMSTAT (ro): Signature generation status register
0x40034FE0 C   FIELD 02w01 SIG_DONE (ro): When 1, a previously started signature generation has completed.
0x40034FE8 B  REGISTER FMSTATCLR (wo): Signature generation status clear register
0x40034FE8 C   FIELD 02w01 SIG_DONE_CLR (wo): Writing a 1 to this bits clears the signature generation completion flag (SIG_DONE) in the FMSTAT register.
0x40036000 A PERIPHERAL SMARTCARD0
0x40036000 B  REGISTER DLL (rw): Divisor Latch LSB
0x40036000 B  REGISTER RBR (ro): Receiver Buffer Register
0x40036000 B  REGISTER THR (wo): Transmit Holding Register
0x40036000 C   FIELD 00w08 DLLSB (rw): The SCIn Divisor Latch LSB Register, along with the SCInDLM register, determines the baud rate of the SCIn.
0x40036000 C   FIELD 00w08 RBR (ro): The SCIn Receiver Buffer Register contains the oldest received byte in the SCIn Rx FIFO.
0x40036000 C   FIELD 00w08 THR (wo): Writing to the SCIn Transmit Holding Register causes the data to be stored in the SCIn transmit FIFO.
0x40036004 B  REGISTER DLM (rw): Divisor Latch MSB
0x40036004 B  REGISTER IER (rw): Interrupt Enable Register
0x40036004 C   FIELD 00w01 RBRIE (rw): RBR Interrupt Enable.
0x40036004 C   FIELD 00w08 DLMSB (rw): The SCIn Divisor Latch MSB Register, along with the DLL register, determines the baud rate of the SCIn.
0x40036004 C   FIELD 01w01 THREIE (rw): THRE Interrupt Enable.
0x40036004 C   FIELD 02w01 RXIE (rw): RX Line Status Interrupt Enable.
0x40036008 B  REGISTER FCR (wo): FIFO Control Register
0x40036008 B  REGISTER IIR (ro): Interrupt ID Register
0x40036008 C   FIELD 00w01 FIFOEN (wo): FIFO Enable.
0x40036008 C   FIELD 00w01 INTSTATUS (ro): Interrupt status.
0x40036008 C   FIELD 01w01 RXFIFORES (wo): RX FIFO Reset.
0x40036008 C   FIELD 01w03 INTID (ro): Interrupt identification.
0x40036008 C   FIELD 02w01 TXFIFORES (wo): TX FIFO Reset.
0x40036008 C   FIELD 03w01 DMAMODE (wo): DMA Mode Select.
0x40036008 C   FIELD 06w02 FIFOENABLE (ro): Copies of SCInFCR[0].
0x40036008 C   FIELD 06w02 RXTRIGLVL (wo): RX Trigger Level.
0x4003600C B  REGISTER LCR (rw): Line Control Register
0x4003600C C   FIELD 00w02 WLS (rw): Word Length Select.
0x4003600C C   FIELD 02w01 SBS (rw): Stop Bit Select.
0x4003600C C   FIELD 03w01 PE (rw): Parity Enable.
0x4003600C C   FIELD 04w02 PS (rw): Parity Select.
0x4003600C C   FIELD 07w01 DLAB (rw): Divisor Latch Access Bit.
0x40036014 B  REGISTER LSR (ro): Line Status Register
0x40036014 C   FIELD 00w01 RDR (ro): Receiver Data Ready.
0x40036014 C   FIELD 01w01 OE (ro): Overrun Error.
0x40036014 C   FIELD 02w01 PE (ro): Parity Error.
0x40036014 C   FIELD 03w01 FE (ro): Framing Error.
0x40036014 C   FIELD 05w01 THRE (ro): Transmitter Holding Register Empty.
0x40036014 C   FIELD 06w01 TEMT (ro): Transmitter Empty.
0x40036014 C   FIELD 07w01 RXFE (ro): Error in RX FIFO.
0x4003601C B  REGISTER SCR (rw): Scratch Pad Register
0x4003601C C   FIELD 00w08 PAD (rw): A readable, writable byte.
0x4003602C B  REGISTER OSR (rw): Oversampling register
0x4003602C C   FIELD 01w03 OSFRAC (rw): Fractional part of the oversampling ratio, in units of 1/8th of an input clock period.
0x4003602C C   FIELD 04w04 OSINT (rw): Integer part of the oversampling ratio, minus 1.
0x4003602C C   FIELD 08w07 FDINT (rw): These bits act as a more-significant extension of the OSint field, allowing an oversampling ratio up to 2048 as required by ISO7816-3.
0x40036048 B  REGISTER SCICTRL (rw): Smart Card Interface control register
0x40036048 C   FIELD 00w01 SCIEN (rw): Smart Card Interface Enable.
0x40036048 C   FIELD 01w01 NACKDIS (rw): NACK response disable.
0x40036048 C   FIELD 02w01 PROTSEL (rw): Protocol selection as defined in the ISO7816-3 standard.
0x40036048 C   FIELD 05w03 TXRETRY (rw): Maximum number of retransmissions in case of a negative acknowledge (protocol T=0).
0x40036048 C   FIELD 08w08 GUARDTIME (rw): Extra guard time.
0x40037000 A PERIPHERAL SMARTCARD1
0x40037000 B  REGISTER DLL (rw): Divisor Latch LSB
0x40037000 B  REGISTER RBR (ro): Receiver Buffer Register
0x40037000 B  REGISTER THR (wo): Transmit Holding Register
0x40037000 C   FIELD 00w08 DLLSB (rw): The SCIn Divisor Latch LSB Register, along with the SCInDLM register, determines the baud rate of the SCIn.
0x40037000 C   FIELD 00w08 RBR (ro): The SCIn Receiver Buffer Register contains the oldest received byte in the SCIn Rx FIFO.
0x40037000 C   FIELD 00w08 THR (wo): Writing to the SCIn Transmit Holding Register causes the data to be stored in the SCIn transmit FIFO.
0x40037004 B  REGISTER DLM (rw): Divisor Latch MSB
0x40037004 B  REGISTER IER (rw): Interrupt Enable Register
0x40037004 C   FIELD 00w01 RBRIE (rw): RBR Interrupt Enable.
0x40037004 C   FIELD 00w08 DLMSB (rw): The SCIn Divisor Latch MSB Register, along with the DLL register, determines the baud rate of the SCIn.
0x40037004 C   FIELD 01w01 THREIE (rw): THRE Interrupt Enable.
0x40037004 C   FIELD 02w01 RXIE (rw): RX Line Status Interrupt Enable.
0x40037008 B  REGISTER FCR (wo): FIFO Control Register
0x40037008 B  REGISTER IIR (ro): Interrupt ID Register
0x40037008 C   FIELD 00w01 FIFOEN (wo): FIFO Enable.
0x40037008 C   FIELD 00w01 INTSTATUS (ro): Interrupt status.
0x40037008 C   FIELD 01w01 RXFIFORES (wo): RX FIFO Reset.
0x40037008 C   FIELD 01w03 INTID (ro): Interrupt identification.
0x40037008 C   FIELD 02w01 TXFIFORES (wo): TX FIFO Reset.
0x40037008 C   FIELD 03w01 DMAMODE (wo): DMA Mode Select.
0x40037008 C   FIELD 06w02 FIFOENABLE (ro): Copies of SCInFCR[0].
0x40037008 C   FIELD 06w02 RXTRIGLVL (wo): RX Trigger Level.
0x4003700C B  REGISTER LCR (rw): Line Control Register
0x4003700C C   FIELD 00w02 WLS (rw): Word Length Select.
0x4003700C C   FIELD 02w01 SBS (rw): Stop Bit Select.
0x4003700C C   FIELD 03w01 PE (rw): Parity Enable.
0x4003700C C   FIELD 04w02 PS (rw): Parity Select.
0x4003700C C   FIELD 07w01 DLAB (rw): Divisor Latch Access Bit.
0x40037014 B  REGISTER LSR (ro): Line Status Register
0x40037014 C   FIELD 00w01 RDR (ro): Receiver Data Ready.
0x40037014 C   FIELD 01w01 OE (ro): Overrun Error.
0x40037014 C   FIELD 02w01 PE (ro): Parity Error.
0x40037014 C   FIELD 03w01 FE (ro): Framing Error.
0x40037014 C   FIELD 05w01 THRE (ro): Transmitter Holding Register Empty.
0x40037014 C   FIELD 06w01 TEMT (ro): Transmitter Empty.
0x40037014 C   FIELD 07w01 RXFE (ro): Error in RX FIFO.
0x4003701C B  REGISTER SCR (rw): Scratch Pad Register
0x4003701C C   FIELD 00w08 PAD (rw): A readable, writable byte.
0x4003702C B  REGISTER OSR (rw): Oversampling register
0x4003702C C   FIELD 01w03 OSFRAC (rw): Fractional part of the oversampling ratio, in units of 1/8th of an input clock period.
0x4003702C C   FIELD 04w04 OSINT (rw): Integer part of the oversampling ratio, minus 1.
0x4003702C C   FIELD 08w07 FDINT (rw): These bits act as a more-significant extension of the OSint field, allowing an oversampling ratio up to 2048 as required by ISO7816-3.
0x40037048 B  REGISTER SCICTRL (rw): Smart Card Interface control register
0x40037048 C   FIELD 00w01 SCIEN (rw): Smart Card Interface Enable.
0x40037048 C   FIELD 01w01 NACKDIS (rw): NACK response disable.
0x40037048 C   FIELD 02w01 PROTSEL (rw): Protocol selection as defined in the ISO7816-3 standard.
0x40037048 C   FIELD 05w03 TXRETRY (rw): Maximum number of retransmissions in case of a negative acknowledge (protocol T=0).
0x40037048 C   FIELD 08w08 GUARDTIME (rw): Extra guard time.
0x40040000 A PERIPHERAL ASYNC_SYSCON
0x40040000 B  REGISTER ASYNCPRESETCTRL (rw): Async peripheral reset control
0x40040000 C   FIELD 13w01 CTIMER3 (rw): Standard counter/timer CTIMER3 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40040000 C   FIELD 14w01 CTIMER4 (rw): Standard counter/timer CTIMER4 reset control. 0 = Clear reset to this function. 1 = Assert reset to this function.
0x40040004 B  REGISTER ASYNCPRESETCTRLSET (wo): Set bits in ASYNCPRESETCTRL
0x40040004 C   FIELD 00w32 ARST_SET (wo): Writing ones to this register sets the corresponding bit or bits in the ASYNCPRESETCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCPRESETCTRL are reserved and only zeroes should be written to them.
0x40040008 B  REGISTER ASYNCPRESETCTRLCLR (wo): Clear bits in ASYNCPRESETCTRL
0x40040008 C   FIELD 00w32 ARST_CLR (wo): Writing ones to this register clears the corresponding bit or bits in the ASYNCPRESETCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCPRESETCTRL are reserved and only zeroes should be written to them.
0x40040010 B  REGISTER ASYNCAPBCLKCTRL (rw): Async peripheral clock control
0x40040010 C   FIELD 13w01 CTIMER3 (rw): Controls the clock for CTIMER3. 0 = Disable; 1 = Enable.
0x40040010 C   FIELD 14w01 CTIMER4 (rw): Controls the clock for CTIMER4. 0 = Disable; 1 = Enable.
0x40040014 B  REGISTER ASYNCAPBCLKCTRLSET (wo): Set bits in ASYNCAPBCLKCTRL
0x40040014 C   FIELD 00w32 ACLK_SET (wo): Writing ones to this register sets the corresponding bit or bits in the ASYNCAPBCLKCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCPRESETCTRL are reserved and only zeroes should be written to them.
0x40040018 B  REGISTER ASYNCAPBCLKCTRLCLR (wo): Clear bits in ASYNCAPBCLKCTRL
0x40040018 C   FIELD 00w32 ACLK_CLR (wo): Writing ones to this register clears the corresponding bit or bits in the ASYNCAPBCLKCTRL register, if they are implemented. Bits that do not correspond to defined bits in ASYNCAPBCLKCTRL are reserved and only zeroes should be written to them.
0x40040020 B  REGISTER ASYNCAPBCLKSELA (rw): Async APB clock source select A
0x40040020 C   FIELD 00w02 SEL (rw): Clock source for asynchronous clock source selector A
0x40048000 A PERIPHERAL CTIMER3
0x40048000 B  REGISTER IR (rw): Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending.
0x40048000 C   FIELD 00w01 MR0INT (rw): Interrupt flag for match channel 0.
0x40048000 C   FIELD 01w01 MR1INT (rw): Interrupt flag for match channel 1.
0x40048000 C   FIELD 02w01 MR2INT (rw): Interrupt flag for match channel 2.
0x40048000 C   FIELD 03w01 MR3INT (rw): Interrupt flag for match channel 3.
0x40048000 C   FIELD 04w01 CR0INT (rw): Interrupt flag for capture channel 0 event.
0x40048000 C   FIELD 05w01 CR1INT (rw): Interrupt flag for capture channel 1 event.
0x40048000 C   FIELD 06w01 CR2INT (rw): Interrupt flag for capture channel 2 event.
0x40048000 C   FIELD 07w01 CR3INT (rw): Interrupt flag for capture channel 3 event.
0x40048004 B  REGISTER TCR (rw): Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.
0x40048004 C   FIELD 00w01 CEN (rw): Counter enable.
0x40048004 C   FIELD 01w01 CRST (rw): Counter reset.
0x40048008 B  REGISTER TC (rw): Timer Counter
0x40048008 C   FIELD 00w32 TCVAL (rw): Timer counter value.
0x4004800C B  REGISTER PR (rw): Prescale Register
0x4004800C C   FIELD 00w32 PRVAL (rw): Prescale counter value.
0x40048010 B  REGISTER PC (rw): Prescale Counter
0x40048010 C   FIELD 00w32 PCVAL (rw): Prescale counter value.
0x40048014 B  REGISTER MCR (rw): Match Control Register
0x40048014 C   FIELD 00w01 MR0I (rw): Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC.
0x40048014 C   FIELD 01w01 MR0R (rw): Reset on MR0: the TC will be reset if MR0 matches it.
0x40048014 C   FIELD 02w01 MR0S (rw): Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC.
0x40048014 C   FIELD 03w01 MR1I (rw): Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC.
0x40048014 C   FIELD 04w01 MR1R (rw): Reset on MR1: the TC will be reset if MR1 matches it.
0x40048014 C   FIELD 05w01 MR1S (rw): Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC.
0x40048014 C   FIELD 06w01 MR2I (rw): Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC.
0x40048014 C   FIELD 07w01 MR2R (rw): Reset on MR2: the TC will be reset if MR2 matches it.
0x40048014 C   FIELD 08w01 MR2S (rw): Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC.
0x40048014 C   FIELD 09w01 MR3I (rw): Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC.
0x40048014 C   FIELD 10w01 MR3R (rw): Reset on MR3: the TC will be reset if MR3 matches it.
0x40048014 C   FIELD 11w01 MR3S (rw): Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC.
0x40048014 C   FIELD 24w01 MR0RL (rw): Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40048014 C   FIELD 25w01 MR1RL (rw): Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40048014 C   FIELD 26w01 MR2RL (rw): Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40048014 C   FIELD 27w01 MR3RL (rw): Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40048018 B  REGISTER MR[0] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40048018 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x4004801C B  REGISTER MR[1] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x4004801C C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40048020 B  REGISTER MR[2] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40048020 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40048024 B  REGISTER MR[3] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40048024 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40048028 B  REGISTER CCR (rw): Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.
0x40048028 C   FIELD 00w01 CAP0RE (rw): Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40048028 C   FIELD 01w01 CAP0FE (rw): Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40048028 C   FIELD 02w01 CAP0I (rw): Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt.
0x40048028 C   FIELD 03w01 CAP1RE (rw): Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40048028 C   FIELD 04w01 CAP1FE (rw): Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40048028 C   FIELD 05w01 CAP1I (rw): Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt.
0x40048028 C   FIELD 06w01 CAP2RE (rw): Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40048028 C   FIELD 07w01 CAP2FE (rw): Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40048028 C   FIELD 08w01 CAP2I (rw): Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt.
0x40048028 C   FIELD 09w01 CAP3RE (rw): Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40048028 C   FIELD 10w01 CAP3FE (rw): Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40048028 C   FIELD 11w01 CAP3I (rw): Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt.
0x4004802C B  REGISTER CR[0] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x4004802C C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40048030 B  REGISTER CR[1] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40048030 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40048034 B  REGISTER CR[2] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40048034 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40048038 B  REGISTER CR[3] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40048038 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x4004803C B  REGISTER EMR (rw): External Match Register. The EMR controls the match function and the external match pins.
0x4004803C C   FIELD 00w01 EM0 (rw): External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4004803C C   FIELD 01w01 EM1 (rw): External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4004803C C   FIELD 02w01 EM2 (rw): External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4004803C C   FIELD 03w01 EM3 (rw): External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4004803C C   FIELD 04w02 EMC0 (rw): External Match Control 0. Determines the functionality of External Match 0.
0x4004803C C   FIELD 06w02 EMC1 (rw): External Match Control 1. Determines the functionality of External Match 1.
0x4004803C C   FIELD 08w02 EMC2 (rw): External Match Control 2. Determines the functionality of External Match 2.
0x4004803C C   FIELD 10w02 EMC3 (rw): External Match Control 3. Determines the functionality of External Match 3.
0x40048070 B  REGISTER CTCR (rw): Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.
0x40048070 C   FIELD 00w02 CTMODE (rw): Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register.
0x40048070 C   FIELD 02w02 CINSEL (rw): Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer.
0x40048070 C   FIELD 04w01 ENCC (rw): Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs.
0x40048070 C   FIELD 05w03 SELCC (rw): Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.
0x40048074 B  REGISTER PWMC (rw): PWM Control Register. The PWMCON enables PWM mode for the external match pins.
0x40048074 C   FIELD 00w01 PWMEN0 (rw): PWM mode enable for channel0.
0x40048074 C   FIELD 01w01 PWMEN1 (rw): PWM mode enable for channel1.
0x40048074 C   FIELD 02w01 PWMEN2 (rw): PWM mode enable for channel2.
0x40048074 C   FIELD 03w01 PWMEN3 (rw): PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle.
0x40048078 B  REGISTER MSR[0] (rw): Match Shadow Register
0x40048078 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x4004807C B  REGISTER MSR[1] (rw): Match Shadow Register
0x4004807C C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40048080 B  REGISTER MSR[2] (rw): Match Shadow Register
0x40048080 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40048084 B  REGISTER MSR[3] (rw): Match Shadow Register
0x40048084 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40049000 A PERIPHERAL CTIMER4
0x40049000 B  REGISTER IR (rw): Interrupt Register. The IR can be written to clear interrupts. The IR can be read to identify which of eight possible interrupt sources are pending.
0x40049000 C   FIELD 00w01 MR0INT (rw): Interrupt flag for match channel 0.
0x40049000 C   FIELD 01w01 MR1INT (rw): Interrupt flag for match channel 1.
0x40049000 C   FIELD 02w01 MR2INT (rw): Interrupt flag for match channel 2.
0x40049000 C   FIELD 03w01 MR3INT (rw): Interrupt flag for match channel 3.
0x40049000 C   FIELD 04w01 CR0INT (rw): Interrupt flag for capture channel 0 event.
0x40049000 C   FIELD 05w01 CR1INT (rw): Interrupt flag for capture channel 1 event.
0x40049000 C   FIELD 06w01 CR2INT (rw): Interrupt flag for capture channel 2 event.
0x40049000 C   FIELD 07w01 CR3INT (rw): Interrupt flag for capture channel 3 event.
0x40049004 B  REGISTER TCR (rw): Timer Control Register. The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.
0x40049004 C   FIELD 00w01 CEN (rw): Counter enable.
0x40049004 C   FIELD 01w01 CRST (rw): Counter reset.
0x40049008 B  REGISTER TC (rw): Timer Counter
0x40049008 C   FIELD 00w32 TCVAL (rw): Timer counter value.
0x4004900C B  REGISTER PR (rw): Prescale Register
0x4004900C C   FIELD 00w32 PRVAL (rw): Prescale counter value.
0x40049010 B  REGISTER PC (rw): Prescale Counter
0x40049010 C   FIELD 00w32 PCVAL (rw): Prescale counter value.
0x40049014 B  REGISTER MCR (rw): Match Control Register
0x40049014 C   FIELD 00w01 MR0I (rw): Interrupt on MR0: an interrupt is generated when MR0 matches the value in the TC.
0x40049014 C   FIELD 01w01 MR0R (rw): Reset on MR0: the TC will be reset if MR0 matches it.
0x40049014 C   FIELD 02w01 MR0S (rw): Stop on MR0: the TC and PC will be stopped and TCR[0] will be set to 0 if MR0 matches the TC.
0x40049014 C   FIELD 03w01 MR1I (rw): Interrupt on MR1: an interrupt is generated when MR1 matches the value in the TC.
0x40049014 C   FIELD 04w01 MR1R (rw): Reset on MR1: the TC will be reset if MR1 matches it.
0x40049014 C   FIELD 05w01 MR1S (rw): Stop on MR1: the TC and PC will be stopped and TCR[0] will be set to 0 if MR1 matches the TC.
0x40049014 C   FIELD 06w01 MR2I (rw): Interrupt on MR2: an interrupt is generated when MR2 matches the value in the TC.
0x40049014 C   FIELD 07w01 MR2R (rw): Reset on MR2: the TC will be reset if MR2 matches it.
0x40049014 C   FIELD 08w01 MR2S (rw): Stop on MR2: the TC and PC will be stopped and TCR[0] will be set to 0 if MR2 matches the TC.
0x40049014 C   FIELD 09w01 MR3I (rw): Interrupt on MR3: an interrupt is generated when MR3 matches the value in the TC.
0x40049014 C   FIELD 10w01 MR3R (rw): Reset on MR3: the TC will be reset if MR3 matches it.
0x40049014 C   FIELD 11w01 MR3S (rw): Stop on MR3: the TC and PC will be stopped and TCR[0] will be set to 0 if MR3 matches the TC.
0x40049014 C   FIELD 24w01 MR0RL (rw): Reload MR0 with the contents of the Match 0 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40049014 C   FIELD 25w01 MR1RL (rw): Reload MR1 with the contents of the Match 1 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40049014 C   FIELD 26w01 MR2RL (rw): Reload MR2 with the contents of the Match 2 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40049014 C   FIELD 27w01 MR3RL (rw): Reload MR3 with the contents of the Match 3 Shadow Register when the TC is reset to zero (either via a match event or a write to bit 1 of the TCR).
0x40049018 B  REGISTER MR[0] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40049018 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x4004901C B  REGISTER MR[1] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x4004901C C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40049020 B  REGISTER MR[2] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40049020 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40049024 B  REGISTER MR[3] (rw): Match Register . MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR matches the TC.
0x40049024 C   FIELD 00w32 MATCH (rw): Timer counter match value.
0x40049028 B  REGISTER CCR (rw): Capture Control Register. The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.
0x40049028 C   FIELD 00w01 CAP0RE (rw): Rising edge of capture channel 0: a sequence of 0 then 1 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40049028 C   FIELD 01w01 CAP0FE (rw): Falling edge of capture channel 0: a sequence of 1 then 0 causes CR0 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40049028 C   FIELD 02w01 CAP0I (rw): Generate interrupt on channel 0 capture event: a CR0 load generates an interrupt.
0x40049028 C   FIELD 03w01 CAP1RE (rw): Rising edge of capture channel 1: a sequence of 0 then 1 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40049028 C   FIELD 04w01 CAP1FE (rw): Falling edge of capture channel 1: a sequence of 1 then 0 causes CR1 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40049028 C   FIELD 05w01 CAP1I (rw): Generate interrupt on channel 1 capture event: a CR1 load generates an interrupt.
0x40049028 C   FIELD 06w01 CAP2RE (rw): Rising edge of capture channel 2: a sequence of 0 then 1 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40049028 C   FIELD 07w01 CAP2FE (rw): Falling edge of capture channel 2: a sequence of 1 then 0 causes CR2 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40049028 C   FIELD 08w01 CAP2I (rw): Generate interrupt on channel 2 capture event: a CR2 load generates an interrupt.
0x40049028 C   FIELD 09w01 CAP3RE (rw): Rising edge of capture channel 3: a sequence of 0 then 1 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40049028 C   FIELD 10w01 CAP3FE (rw): Falling edge of capture channel 3: a sequence of 1 then 0 causes CR3 to be loaded with the contents of TC. 0 = disabled. 1 = enabled.
0x40049028 C   FIELD 11w01 CAP3I (rw): Generate interrupt on channel 3 capture event: a CR3 load generates an interrupt.
0x4004902C B  REGISTER CR[0] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x4004902C C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40049030 B  REGISTER CR[1] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40049030 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40049034 B  REGISTER CR[2] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40049034 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x40049038 B  REGISTER CR[3] (ro): Capture Register . CR is loaded with the value of TC when there is an event on the CAPn. input.
0x40049038 C   FIELD 00w32 CAP (ro): Timer counter capture value.
0x4004903C B  REGISTER EMR (rw): External Match Register. The EMR controls the match function and the external match pins.
0x4004903C C   FIELD 00w01 EM0 (rw): External Match 0. This bit reflects the state of output MAT0, whether or not this output is connected to a pin. When a match occurs between the TC and MR0, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[5:4]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4004903C C   FIELD 01w01 EM1 (rw): External Match 1. This bit reflects the state of output MAT1, whether or not this output is connected to a pin. When a match occurs between the TC and MR1, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[7:6]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4004903C C   FIELD 02w01 EM2 (rw): External Match 2. This bit reflects the state of output MAT2, whether or not this output is connected to a pin. When a match occurs between the TC and MR2, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by EMR[9:8]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4004903C C   FIELD 03w01 EM3 (rw): External Match 3. This bit reflects the state of output MAT3, whether or not this output is connected to a pin. When a match occurs between the TC and MR3, this bit can either toggle, go LOW, go HIGH, or do nothing, as selected by MR[11:10]. This bit is driven to the MAT pins if the match function is selected via IOCON. 0 = LOW. 1 = HIGH.
0x4004903C C   FIELD 04w02 EMC0 (rw): External Match Control 0. Determines the functionality of External Match 0.
0x4004903C C   FIELD 06w02 EMC1 (rw): External Match Control 1. Determines the functionality of External Match 1.
0x4004903C C   FIELD 08w02 EMC2 (rw): External Match Control 2. Determines the functionality of External Match 2.
0x4004903C C   FIELD 10w02 EMC3 (rw): External Match Control 3. Determines the functionality of External Match 3.
0x40049070 B  REGISTER CTCR (rw): Count Control Register. The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.
0x40049070 C   FIELD 00w02 CTMODE (rw): Counter/Timer Mode This field selects which rising APB bus clock edges can increment Timer's Prescale Counter (PC), or clear PC and increment Timer Counter (TC). Timer Mode: the TC is incremented when the Prescale Counter matches the Prescale Register.
0x40049070 C   FIELD 02w02 CINSEL (rw): Count Input Select When bits 1:0 in this register are not 00, these bits select which CAP pin is sampled for clocking. Note: If Counter mode is selected for a particular CAPn input in the CTCR, the 3 bits for that input in the Capture Control Register (CCR) must be programmed as 000. However, capture and/or interrupt can be selected for the other 3 CAPn inputs in the same timer.
0x40049070 C   FIELD 04w01 ENCC (rw): Setting this bit to 1 enables clearing of the timer and the prescaler when the capture-edge event specified in bits 7:5 occurs.
0x40049070 C   FIELD 05w03 SELCC (rw): Edge select. When bit 4 is 1, these bits select which capture input edge will cause the timer and prescaler to be cleared. These bits have no effect when bit 4 is low. Values 0x2 to 0x3 and 0x6 to 0x7 are reserved.
0x40049074 B  REGISTER PWMC (rw): PWM Control Register. The PWMCON enables PWM mode for the external match pins.
0x40049074 C   FIELD 00w01 PWMEN0 (rw): PWM mode enable for channel0.
0x40049074 C   FIELD 01w01 PWMEN1 (rw): PWM mode enable for channel1.
0x40049074 C   FIELD 02w01 PWMEN2 (rw): PWM mode enable for channel2.
0x40049074 C   FIELD 03w01 PWMEN3 (rw): PWM mode enable for channel3. Note: It is recommended to use match channel 3 to set the PWM cycle.
0x40049078 B  REGISTER MSR[0] (rw): Match Shadow Register
0x40049078 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x4004907C B  REGISTER MSR[1] (rw): Match Shadow Register
0x4004907C C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40049080 B  REGISTER MSR[2] (rw): Match Shadow Register
0x40049080 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40049084 B  REGISTER MSR[3] (rw): Match Shadow Register
0x40049084 C   FIELD 00w32 SHADOWW (rw): Timer counter match shadow value.
0x40080000 A PERIPHERAL SPIFI0
0x40080000 B  REGISTER CTRL (rw): SPIFI control register
0x40080000 C   FIELD 00w16 TIMEOUT (rw): This field contains the number of serial clock periods without the processor reading data in memory mode, which will cause the SPIFI hardware to terminate the command by driving the CS pin high and negating the CMD bit in the Status register. (This allows the flash memory to enter a lower-power state.) If the processor reads data from the flash region after a time-out, the command in the Memory Command Register is issued again.
0x40080000 C   FIELD 16w04 CSHIGH (rw): This field controls the minimum CS high time, expressed as a number of serial clock periods minus one.
0x40080000 C   FIELD 21w01 D_PRFTCH_DIS (rw): This bit allows conditioning of memory mode prefetches based on the AHB HPROT (instruction/data) access information. A 1 in this register means that the SPIFI will not attempt a speculative prefetch when it encounters data accesses.
0x40080000 C   FIELD 22w01 INTEN (rw): If this bit is 1 when a command ends, the SPIFI will assert its interrupt request output. See INTRQ in the status register for further details.
0x40080000 C   FIELD 23w01 MODE3 (rw): SPI Mode 3 select.
0x40080000 C   FIELD 27w01 PRFTCH_DIS (rw): Cache prefetching enable. The SPIFI includes an internal cache. A 1 in this bit disables prefetching of cache lines.
0x40080000 C   FIELD 28w01 DUAL (rw): Select dual protocol.
0x40080000 C   FIELD 29w01 RFCLK (rw): Select active clock edge for input data.
0x40080000 C   FIELD 30w01 FBCLK (rw): Feedback clock select.
0x40080000 C   FIELD 31w01 DMAEN (rw): A 1 in this bit enables the DMA Request output from the SPIFI. Set this bit only when a DMA channel is used to transfer data in peripheral mode. Do not set this bit when a DMA channel is used for memory-to-memory transfers from the SPIFI memory area. DMAEN should only be used in Command mode.
0x40080004 B  REGISTER CMD (rw): SPIFI command register
0x40080004 C   FIELD 00w14 DATALEN (rw): Except when the POLL bit in this register is 1, this field controls how many data bytes are in the command. 0 indicates that the command does not contain a data field.
0x40080004 C   FIELD 14w01 POLL (rw): This bit should be written as 1 only with an opcode that a) contains an input data field, and b) causes the serial flash device to return byte status repetitively (e.g., a Read Status command). When this bit is 1, the SPIFI hardware continues to read bytes until the test specified by the DATALEN field is met. The hardware tests the bit in each status byte selected by DATALEN bits 2:0, until a bit is found that is equal to DATALEN bit 3. When the test succeeds, the SPIFI captures the byte that meets this test so that it can be read from the Data Register, and terminates the command by raising CS. The end-of-command interrupt can be enabled to inform software when this occurs
0x40080004 C   FIELD 15w01 DOUT (rw): If the DATALEN field is not zero, this bit controls the direction of the data:
0x40080004 C   FIELD 16w03 INTLEN (rw): This field controls how many intermediate bytes precede the data. (Each such byte may require 8 or 2 SCK cycles, depending on whether the intermediate field is in serial, 2-bit, or 4-bit format.) Intermediate bytes are output by the SPIFI, and include post-address control information, dummy and delay bytes. See the description of the Intermediate Data register for the contents of such bytes.
0x40080004 C   FIELD 19w02 FIELDFORM (rw): This field controls how the fields of the command are sent.
0x40080004 C   FIELD 21w03 FRAMEFORM (rw): This field controls the opcode and address fields.
0x40080004 C   FIELD 24w08 OPCODE (rw): The opcode of the command (not used for some FRAMEFORM values).
0x40080008 B  REGISTER ADDR (rw): SPIFI address register
0x40080008 C   FIELD 00w32 ADDRESS (rw): Address.
0x4008000C B  REGISTER IDATA (rw): SPIFI intermediate data register
0x4008000C C   FIELD 00w32 IDATA (rw): Value of intermediate bytes.
0x40080010 B  REGISTER CLIMIT (rw): SPIFI limit register
0x40080010 C   FIELD 00w32 CLIMIT (rw): Zero-based upper limit of cacheable memory
0x40080014 B  REGISTER DATA (rw): SPIFI data register
0x40080014 C   FIELD 00w32 DATA (rw): Input or output data
0x40080018 B  REGISTER MCMD (rw): SPIFI memory command register
0x40080018 C   FIELD 14w01 POLL (rw): This bit should be written as 0.
0x40080018 C   FIELD 15w01 DOUT (rw): This bit should be written as 0.
0x40080018 C   FIELD 16w03 INTLEN (rw): This field controls how many intermediate bytes precede the data. (Each such byte may require 8 or 2 SCK cycles, depending on whether the intermediate field is in serial, 2-bit, or 4-bit format.) Intermediate bytes are output by the SPIFI, and include post-address control information, dummy and delay bytes. See the description of the Intermediate Data register for the contents of such bytes.
0x40080018 C   FIELD 19w02 FIELDFORM (rw): This field controls how the fields of the command are sent.
0x40080018 C   FIELD 21w03 FRAMEFORM (rw): This field controls the opcode and address fields.
0x40080018 C   FIELD 24w08 OPCODE (rw): The opcode of the command (not used for some FRAMEFORM values).
0x4008001C B  REGISTER STAT (rw): SPIFI status register
0x4008001C C   FIELD 00w01 MCINIT (rw): This bit is set when software successfully writes the Memory Command register, and is cleared by Reset or by writing a 1 to the RESET bit in this register.
0x4008001C C   FIELD 01w01 CMD (rw): This bit is 1 when the Command register is written. It is cleared by a hardware reset, a write to the RESET bit in this register, or the deassertion of CS which indicates that the command has completed communication with the SPI Flash.
0x4008001C C   FIELD 04w01 RESET (rw): Write a 1 to this bit to abort a current command or memory mode. This bit is cleared when the hardware is ready for a new command to be written to the Command register.
0x4008001C C   FIELD 05w01 INTRQ (rw): This bit reflects the SPIFI interrupt request. Write a 1 to this bit to clear it. This bit is set when a CMD was previously 1 and has been cleared due to the deassertion of CS.
0x40081000 A PERIPHERAL EMC
0x40081000 B  REGISTER CONTROL (rw): Controls operation of the memory controller
0x40081000 C   FIELD 00w01 E (rw): EMC Enable.
0x40081000 C   FIELD 01w01 M (rw): Address mirror.
0x40081000 C   FIELD 02w01 L (rw): Low-power mode.
0x40081004 B  REGISTER STATUS (ro): Provides EMC status information
0x40081004 C   FIELD 00w01 B (ro): Busy.
0x40081004 C   FIELD 01w01 S (ro): Write buffer status.
0x40081004 C   FIELD 02w01 SA (ro): Self-refresh acknowledge.
0x40081008 B  REGISTER CONFIG (rw): Configures operation of the memory controller
0x40081008 C   FIELD 00w01 EM (rw): Endian mode.
0x40081008 C   FIELD 08w01 CLKR (rw): This bit must contain 0 for proper operation of the EMC.
0x40081020 B  REGISTER DYNAMICCONTROL (rw): Controls dynamic memory operation
0x40081020 C   FIELD 00w01 CE (rw): Dynamic memory clock enable.
0x40081020 C   FIELD 01w01 CS (rw): Dynamic memory clock control.
0x40081020 C   FIELD 02w01 SR (rw): Self-refresh request, EMCSREFREQ.
0x40081020 C   FIELD 05w01 MMC (rw): Memory clock control.
0x40081020 C   FIELD 07w02 I (rw): SDRAM initialization.
0x40081024 B  REGISTER DYNAMICREFRESH (rw): Configures dynamic memory refresh
0x40081024 C   FIELD 00w11 REFRESH (rw): Refresh timer.
0x40081028 B  REGISTER DYNAMICREADCONFIG (rw): Configures dynamic memory read strategy
0x40081028 C   FIELD 00w02 RD (rw): Read data strategy.
0x40081030 B  REGISTER DYNAMICRP (rw): Precharge command period
0x40081030 C   FIELD 00w04 TRP (rw): Precharge command period.
0x40081034 B  REGISTER DYNAMICRAS (rw): Active to precharge command period
0x40081034 C   FIELD 00w04 TRAS (rw): Active to precharge command period.
0x40081038 B  REGISTER DYNAMICSREX (rw): Self-refresh exit time
0x40081038 C   FIELD 00w04 TSREX (rw): Self-refresh exit time.
0x4008103C B  REGISTER DYNAMICAPR (rw): Last-data-out to active command time
0x4008103C C   FIELD 00w04 TAPR (rw): Last-data-out to active command time.
0x40081040 B  REGISTER DYNAMICDAL (rw): Data-in to active command time
0x40081040 C   FIELD 00w04 TDAL (rw): Data-in to active command.
0x40081044 B  REGISTER DYNAMICWR (rw): Write recovery time
0x40081044 C   FIELD 00w04 TWR (rw): Write recovery time.
0x40081048 B  REGISTER DYNAMICRC (rw): Selects the active to active command period
0x40081048 C   FIELD 00w05 TRC (rw): Active to active command period.
0x4008104C B  REGISTER DYNAMICRFC (rw): Selects the auto-refresh period
0x4008104C C   FIELD 00w05 TRFC (rw): Auto-refresh period and auto-refresh to active command period.
0x40081050 B  REGISTER DYNAMICXSR (rw): Time for exit self-refresh to active command
0x40081050 C   FIELD 00w05 TXSR (rw): Exit self-refresh to active command time.
0x40081054 B  REGISTER DYNAMICRRD (rw): Latency for active bank A to active bank B
0x40081054 C   FIELD 00w04 TRRD (rw): Active bank A to active bank B latency 0x0 - 0xE = n + 1 clock cycles.
0x40081058 B  REGISTER DYNAMICMRD (rw): Time for load mode register to active command
0x40081058 C   FIELD 00w04 TMRD (rw): Load mode register to active command time.
0x40081080 B  REGISTER STATICEXTENDEDWAIT (rw): Time for long static memory read and write transfers
0x40081080 C   FIELD 00w10 EXTENDEDWAIT (rw): Extended wait time out.
0x40081100 B  CLUSTER DYNAMIC[0]: no description available
0x40081100 B  REGISTER DYNAMICCONFIG0 (rw): Configuration information for EMC_DYCSx
0x40081100 C   FIELD 03w02 MD (rw): Memory device.
0x40081100 C   FIELD 07w06 AM0 (rw): See Table 933.
0x40081100 C   FIELD 14w01 AM1 (rw): See Table 933.
0x40081100 C   FIELD 19w01 B (rw): Buffer enable.
0x40081100 C   FIELD 20w01 P (rw): Write protect.
0x40081104 B  REGISTER DYNAMICRASCAS0 (rw): RAS and CAS latencies for EMC_DYCSx
0x40081104 C   FIELD 00w02 RAS (rw): RAS latency (active to read/write delay).
0x40081104 C   FIELD 08w02 CAS (rw): CAS latency.
0x40081120 B  CLUSTER DYNAMIC[1]: no description available
0x40081120 B  REGISTER DYNAMICCONFIG1 (rw): Configuration information for EMC_DYCSx
0x40081120 C   FIELD 03w02 MD (rw): Memory device.
0x40081120 C   FIELD 07w06 AM0 (rw): See Table 933.
0x40081120 C   FIELD 14w01 AM1 (rw): See Table 933.
0x40081120 C   FIELD 19w01 B (rw): Buffer enable.
0x40081120 C   FIELD 20w01 P (rw): Write protect.
0x40081124 B  REGISTER DYNAMICRASCAS1 (rw): RAS and CAS latencies for EMC_DYCSx
0x40081124 C   FIELD 00w02 RAS (rw): RAS latency (active to read/write delay).
0x40081124 C   FIELD 08w02 CAS (rw): CAS latency.
0x40081140 B  CLUSTER DYNAMIC[2]: no description available
0x40081140 B  REGISTER DYNAMICCONFIG2 (rw): Configuration information for EMC_DYCSx
0x40081140 C   FIELD 03w02 MD (rw): Memory device.
0x40081140 C   FIELD 07w06 AM0 (rw): See Table 933.
0x40081140 C   FIELD 14w01 AM1 (rw): See Table 933.
0x40081140 C   FIELD 19w01 B (rw): Buffer enable.
0x40081140 C   FIELD 20w01 P (rw): Write protect.
0x40081144 B  REGISTER DYNAMICRASCAS2 (rw): RAS and CAS latencies for EMC_DYCSx
0x40081144 C   FIELD 00w02 RAS (rw): RAS latency (active to read/write delay).
0x40081144 C   FIELD 08w02 CAS (rw): CAS latency.
0x40081160 B  CLUSTER DYNAMIC[3]: no description available
0x40081160 B  REGISTER DYNAMICCONFIG3 (rw): Configuration information for EMC_DYCSx
0x40081160 C   FIELD 03w02 MD (rw): Memory device.
0x40081160 C   FIELD 07w06 AM0 (rw): See Table 933.
0x40081160 C   FIELD 14w01 AM1 (rw): See Table 933.
0x40081160 C   FIELD 19w01 B (rw): Buffer enable.
0x40081160 C   FIELD 20w01 P (rw): Write protect.
0x40081164 B  REGISTER DYNAMICRASCAS3 (rw): RAS and CAS latencies for EMC_DYCSx
0x40081164 C   FIELD 00w02 RAS (rw): RAS latency (active to read/write delay).
0x40081164 C   FIELD 08w02 CAS (rw): CAS latency.
0x40081200 B  CLUSTER STATIC[0]: no description available
0x40081200 B  REGISTER STATICCONFIG0 (rw): Configuration for EMC_CSx
0x40081200 C   FIELD 00w02 MW (rw): Memory width.
0x40081200 C   FIELD 03w01 PM (rw): Page mode.
0x40081200 C   FIELD 06w01 PC (rw): Chip select polarity.
0x40081200 C   FIELD 07w01 PB (rw): Byte lane state.
0x40081200 C   FIELD 08w01 EW (rw): Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers.
0x40081200 C   FIELD 19w01 B (rw): Buffer enable [2].
0x40081200 C   FIELD 20w01 P (rw): Write protect.
0x40081204 B  REGISTER STATICWAITWEN0 (rw): Delay from EMC_CSx to write enable
0x40081204 C   FIELD 00w04 WAITWEN (rw): Wait write enable.
0x40081208 B  REGISTER STATICWAITOEN0 (rw): Delay from EMC_CSx or address change, whichever is later, to output enable
0x40081208 C   FIELD 00w04 WAITOEN (rw): Wait output enable.
0x4008120C B  REGISTER STATICWAITRD0 (rw): Delay from EMC_CSx to a read access
0x4008120C C   FIELD 00w05 WAITRD (rw): .
0x40081210 B  REGISTER STATICWAITPAGE0 (rw): Delay for asynchronous page mode sequential accesses for EMC_CSx
0x40081210 C   FIELD 00w05 WAITPAGE (rw): Asynchronous page mode read after the first read wait states.
0x40081214 B  REGISTER STATICWAITWR0 (rw): Delay from EMC_CSx to a write access
0x40081214 C   FIELD 00w05 WAITWR (rw): Write wait states.
0x40081218 B  REGISTER STATICWAITTURN0 (rw): Number of bus turnaround cycles EMC_CSx
0x40081218 C   FIELD 00w04 WAITTURN (rw): Bus turn-around cycles.
0x40081220 B  CLUSTER STATIC[1]: no description available
0x40081220 B  REGISTER STATICCONFIG1 (rw): Configuration for EMC_CSx
0x40081220 C   FIELD 00w02 MW (rw): Memory width.
0x40081220 C   FIELD 03w01 PM (rw): Page mode.
0x40081220 C   FIELD 06w01 PC (rw): Chip select polarity.
0x40081220 C   FIELD 07w01 PB (rw): Byte lane state.
0x40081220 C   FIELD 08w01 EW (rw): Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers.
0x40081220 C   FIELD 19w01 B (rw): Buffer enable [2].
0x40081220 C   FIELD 20w01 P (rw): Write protect.
0x40081224 B  REGISTER STATICWAITWEN1 (rw): Delay from EMC_CSx to write enable
0x40081224 C   FIELD 00w04 WAITWEN (rw): Wait write enable.
0x40081228 B  REGISTER STATICWAITOEN1 (rw): Delay from EMC_CSx or address change, whichever is later, to output enable
0x40081228 C   FIELD 00w04 WAITOEN (rw): Wait output enable.
0x4008122C B  REGISTER STATICWAITRD1 (rw): Delay from EMC_CSx to a read access
0x4008122C C   FIELD 00w05 WAITRD (rw): .
0x40081230 B  REGISTER STATICWAITPAGE1 (rw): Delay for asynchronous page mode sequential accesses for EMC_CSx
0x40081230 C   FIELD 00w05 WAITPAGE (rw): Asynchronous page mode read after the first read wait states.
0x40081234 B  REGISTER STATICWAITWR1 (rw): Delay from EMC_CSx to a write access
0x40081234 C   FIELD 00w05 WAITWR (rw): Write wait states.
0x40081238 B  REGISTER STATICWAITTURN1 (rw): Number of bus turnaround cycles EMC_CSx
0x40081238 C   FIELD 00w04 WAITTURN (rw): Bus turn-around cycles.
0x40081240 B  CLUSTER STATIC[2]: no description available
0x40081240 B  REGISTER STATICCONFIG2 (rw): Configuration for EMC_CSx
0x40081240 C   FIELD 00w02 MW (rw): Memory width.
0x40081240 C   FIELD 03w01 PM (rw): Page mode.
0x40081240 C   FIELD 06w01 PC (rw): Chip select polarity.
0x40081240 C   FIELD 07w01 PB (rw): Byte lane state.
0x40081240 C   FIELD 08w01 EW (rw): Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers.
0x40081240 C   FIELD 19w01 B (rw): Buffer enable [2].
0x40081240 C   FIELD 20w01 P (rw): Write protect.
0x40081244 B  REGISTER STATICWAITWEN2 (rw): Delay from EMC_CSx to write enable
0x40081244 C   FIELD 00w04 WAITWEN (rw): Wait write enable.
0x40081248 B  REGISTER STATICWAITOEN2 (rw): Delay from EMC_CSx or address change, whichever is later, to output enable
0x40081248 C   FIELD 00w04 WAITOEN (rw): Wait output enable.
0x4008124C B  REGISTER STATICWAITRD2 (rw): Delay from EMC_CSx to a read access
0x4008124C C   FIELD 00w05 WAITRD (rw): .
0x40081250 B  REGISTER STATICWAITPAGE2 (rw): Delay for asynchronous page mode sequential accesses for EMC_CSx
0x40081250 C   FIELD 00w05 WAITPAGE (rw): Asynchronous page mode read after the first read wait states.
0x40081254 B  REGISTER STATICWAITWR2 (rw): Delay from EMC_CSx to a write access
0x40081254 C   FIELD 00w05 WAITWR (rw): Write wait states.
0x40081258 B  REGISTER STATICWAITTURN2 (rw): Number of bus turnaround cycles EMC_CSx
0x40081258 C   FIELD 00w04 WAITTURN (rw): Bus turn-around cycles.
0x40081260 B  CLUSTER STATIC[3]: no description available
0x40081260 B  REGISTER STATICCONFIG3 (rw): Configuration for EMC_CSx
0x40081260 C   FIELD 00w02 MW (rw): Memory width.
0x40081260 C   FIELD 03w01 PM (rw): Page mode.
0x40081260 C   FIELD 06w01 PC (rw): Chip select polarity.
0x40081260 C   FIELD 07w01 PB (rw): Byte lane state.
0x40081260 C   FIELD 08w01 EW (rw): Extended wait (EW) uses the EMCStaticExtendedWait register to time both the read and write transfers rather than the EMCStaticWaitRd and EMCStaticWaitWr registers.
0x40081260 C   FIELD 19w01 B (rw): Buffer enable [2].
0x40081260 C   FIELD 20w01 P (rw): Write protect.
0x40081264 B  REGISTER STATICWAITWEN3 (rw): Delay from EMC_CSx to write enable
0x40081264 C   FIELD 00w04 WAITWEN (rw): Wait write enable.
0x40081268 B  REGISTER STATICWAITOEN3 (rw): Delay from EMC_CSx or address change, whichever is later, to output enable
0x40081268 C   FIELD 00w04 WAITOEN (rw): Wait output enable.
0x4008126C B  REGISTER STATICWAITRD3 (rw): Delay from EMC_CSx to a read access
0x4008126C C   FIELD 00w05 WAITRD (rw): .
0x40081270 B  REGISTER STATICWAITPAGE3 (rw): Delay for asynchronous page mode sequential accesses for EMC_CSx
0x40081270 C   FIELD 00w05 WAITPAGE (rw): Asynchronous page mode read after the first read wait states.
0x40081274 B  REGISTER STATICWAITWR3 (rw): Delay from EMC_CSx to a write access
0x40081274 C   FIELD 00w05 WAITWR (rw): Write wait states.
0x40081278 B  REGISTER STATICWAITTURN3 (rw): Number of bus turnaround cycles EMC_CSx
0x40081278 C   FIELD 00w04 WAITTURN (rw): Bus turn-around cycles.
0x40082000 A PERIPHERAL DMA0
0x40082000 B  REGISTER CTRL (rw): DMA control.
0x40082000 C   FIELD 00w01 ENABLE (rw): DMA controller master enable.
0x40082004 B  REGISTER INTSTAT (ro): Interrupt status.
0x40082004 C   FIELD 01w01 ACTIVEINT (ro): Summarizes whether any enabled interrupts (other than error interrupts) are pending.
0x40082004 C   FIELD 02w01 ACTIVEERRINT (ro): Summarizes whether any error interrupts are pending.
0x40082008 B  REGISTER SRAMBASE (rw): SRAM address of the channel configuration table.
0x40082008 C   FIELD 09w23 OFFSET (rw): Address bits 31:9 of the beginning of the DMA descriptor table. For 18 channels, the table must begin on a 512 byte boundary.
0x40082020 B  REGISTER ENABLESET0 (rw): Channel Enable read and Set for all DMA channels.
0x40082020 C   FIELD 00w32 ENA (rw): Enable for DMA channels. Bit n enables or disables DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = disabled. 1 = enabled.
0x40082028 B  REGISTER ENABLECLR0 (wo): Channel Enable Clear for all DMA channels.
0x40082028 C   FIELD 00w32 CLR (wo): Writing ones to this register clears the corresponding bits in ENABLESET0. Bit n clears the channel enable bit n. The number of bits = number of DMA channels in this device. Other bits are reserved.
0x40082030 B  REGISTER ACTIVE0 (ro): Channel Active status for all DMA channels.
0x40082030 C   FIELD 00w32 ACT (ro): Active flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = not active. 1 = active.
0x40082038 B  REGISTER BUSY0 (ro): Channel Busy status for all DMA channels.
0x40082038 C   FIELD 00w32 BSY (ro): Busy flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = not busy. 1 = busy.
0x40082040 B  REGISTER ERRINT0 (rw): Error Interrupt status for all DMA channels.
0x40082040 C   FIELD 00w32 ERR (rw): Error Interrupt flag for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = error interrupt is not active. 1 = error interrupt is active.
0x40082048 B  REGISTER INTENSET0 (rw): Interrupt Enable read and Set for all DMA channels.
0x40082048 C   FIELD 00w32 INTEN (rw): Interrupt Enable read and set for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = interrupt for DMA channel is disabled. 1 = interrupt for DMA channel is enabled.
0x40082050 B  REGISTER INTENCLR0 (wo): Interrupt Enable Clear for all DMA channels.
0x40082050 C   FIELD 00w32 CLR (wo): Writing ones to this register clears corresponding bits in the INTENSET0. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved.
0x40082058 B  REGISTER INTA0 (rw): Interrupt A status for all DMA channels.
0x40082058 C   FIELD 00w32 IA (rw): Interrupt A status for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = the DMA channel interrupt A is not active. 1 = the DMA channel interrupt A is active.
0x40082060 B  REGISTER INTB0 (rw): Interrupt B status for all DMA channels.
0x40082060 C   FIELD 00w32 IB (rw): Interrupt B status for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = the DMA channel interrupt B is not active. 1 = the DMA channel interrupt B is active.
0x40082068 B  REGISTER SETVALID0 (wo): Set ValidPending control bits for all DMA channels.
0x40082068 C   FIELD 00w32 SV (wo): SETVALID control for DMA channel n. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = no effect. 1 = sets the VALIDPENDING control bit for DMA channel n
0x40082070 B  REGISTER SETTRIG0 (wo): Set Trigger control bits for all DMA channels.
0x40082070 C   FIELD 00w32 TRIG (wo): Set Trigger control bit for DMA channel 0. Bit n corresponds to DMA channel n. The number of bits = number of DMA channels in this device. Other bits are reserved. 0 = no effect. 1 = sets the TRIG bit for DMA channel n.
0x40082078 B  REGISTER ABORT0 (wo): Channel Abort control for all DMA channels.
0x40082078 C   FIELD 00w32 ABORTCTRL (wo): Abort control for DMA channel 0. Bit n corresponds to DMA channel n. 0 = no effect. 1 = aborts DMA operations on channel n.
0x40082400 B  CLUSTER CHANNEL[0]: no description available
0x40082400 B  REGISTER CFG0 (rw): Configuration register for DMA channel .
0x40082400 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082400 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082400 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082400 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082400 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082400 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082400 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082400 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082400 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082404 B  REGISTER CTLSTAT0 (ro): Control and status register for DMA channel .
0x40082404 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082404 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082408 B  REGISTER XFERCFG0 (rw): Transfer configuration register for DMA channel .
0x40082408 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082408 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082408 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082408 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082408 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082408 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082408 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082408 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082408 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082408 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082410 B  CLUSTER CHANNEL[1]: no description available
0x40082410 B  REGISTER CFG1 (rw): Configuration register for DMA channel .
0x40082410 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082410 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082410 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082410 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082410 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082410 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082410 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082410 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082410 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082414 B  REGISTER CTLSTAT1 (ro): Control and status register for DMA channel .
0x40082414 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082414 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082418 B  REGISTER XFERCFG1 (rw): Transfer configuration register for DMA channel .
0x40082418 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082418 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082418 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082418 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082418 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082418 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082418 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082418 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082418 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082418 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082420 B  CLUSTER CHANNEL[2]: no description available
0x40082420 B  REGISTER CFG2 (rw): Configuration register for DMA channel .
0x40082420 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082420 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082420 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082420 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082420 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082420 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082420 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082420 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082420 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082424 B  REGISTER CTLSTAT2 (ro): Control and status register for DMA channel .
0x40082424 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082424 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082428 B  REGISTER XFERCFG2 (rw): Transfer configuration register for DMA channel .
0x40082428 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082428 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082428 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082428 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082428 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082428 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082428 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082428 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082428 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082428 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082430 B  CLUSTER CHANNEL[3]: no description available
0x40082430 B  REGISTER CFG3 (rw): Configuration register for DMA channel .
0x40082430 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082430 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082430 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082430 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082430 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082430 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082430 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082430 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082430 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082434 B  REGISTER CTLSTAT3 (ro): Control and status register for DMA channel .
0x40082434 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082434 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082438 B  REGISTER XFERCFG3 (rw): Transfer configuration register for DMA channel .
0x40082438 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082438 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082438 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082438 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082438 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082438 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082438 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082438 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082438 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082438 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082440 B  CLUSTER CHANNEL[4]: no description available
0x40082440 B  REGISTER CFG4 (rw): Configuration register for DMA channel .
0x40082440 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082440 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082440 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082440 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082440 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082440 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082440 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082440 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082440 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082444 B  REGISTER CTLSTAT4 (ro): Control and status register for DMA channel .
0x40082444 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082444 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082448 B  REGISTER XFERCFG4 (rw): Transfer configuration register for DMA channel .
0x40082448 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082448 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082448 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082448 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082448 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082448 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082448 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082448 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082448 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082448 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082450 B  CLUSTER CHANNEL[5]: no description available
0x40082450 B  REGISTER CFG5 (rw): Configuration register for DMA channel .
0x40082450 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082450 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082450 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082450 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082450 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082450 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082450 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082450 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082450 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082454 B  REGISTER CTLSTAT5 (ro): Control and status register for DMA channel .
0x40082454 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082454 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082458 B  REGISTER XFERCFG5 (rw): Transfer configuration register for DMA channel .
0x40082458 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082458 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082458 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082458 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082458 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082458 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082458 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082458 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082458 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082458 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082460 B  CLUSTER CHANNEL[6]: no description available
0x40082460 B  REGISTER CFG6 (rw): Configuration register for DMA channel .
0x40082460 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082460 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082460 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082460 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082460 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082460 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082460 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082460 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082460 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082464 B  REGISTER CTLSTAT6 (ro): Control and status register for DMA channel .
0x40082464 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082464 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082468 B  REGISTER XFERCFG6 (rw): Transfer configuration register for DMA channel .
0x40082468 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082468 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082468 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082468 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082468 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082468 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082468 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082468 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082468 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082468 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082470 B  CLUSTER CHANNEL[7]: no description available
0x40082470 B  REGISTER CFG7 (rw): Configuration register for DMA channel .
0x40082470 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082470 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082470 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082470 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082470 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082470 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082470 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082470 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082470 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082474 B  REGISTER CTLSTAT7 (ro): Control and status register for DMA channel .
0x40082474 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082474 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082478 B  REGISTER XFERCFG7 (rw): Transfer configuration register for DMA channel .
0x40082478 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082478 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082478 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082478 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082478 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082478 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082478 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082478 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082478 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082478 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082480 B  CLUSTER CHANNEL[8]: no description available
0x40082480 B  REGISTER CFG8 (rw): Configuration register for DMA channel .
0x40082480 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082480 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082480 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082480 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082480 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082480 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082480 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082480 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082480 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082484 B  REGISTER CTLSTAT8 (ro): Control and status register for DMA channel .
0x40082484 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082484 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082488 B  REGISTER XFERCFG8 (rw): Transfer configuration register for DMA channel .
0x40082488 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082488 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082488 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082488 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082488 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082488 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082488 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082488 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082488 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082488 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082490 B  CLUSTER CHANNEL[9]: no description available
0x40082490 B  REGISTER CFG9 (rw): Configuration register for DMA channel .
0x40082490 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082490 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082490 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082490 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082490 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082490 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082490 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082490 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082490 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082494 B  REGISTER CTLSTAT9 (ro): Control and status register for DMA channel .
0x40082494 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082494 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082498 B  REGISTER XFERCFG9 (rw): Transfer configuration register for DMA channel .
0x40082498 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082498 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082498 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082498 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082498 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082498 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082498 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082498 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082498 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082498 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x400824A0 B  CLUSTER CHANNEL[10]: no description available
0x400824A0 B  REGISTER CFG10 (rw): Configuration register for DMA channel .
0x400824A0 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x400824A0 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x400824A0 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x400824A0 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x400824A0 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x400824A0 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x400824A0 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x400824A0 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x400824A0 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x400824A4 B  REGISTER CTLSTAT10 (ro): Control and status register for DMA channel .
0x400824A4 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x400824A4 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x400824A8 B  REGISTER XFERCFG10 (rw): Transfer configuration register for DMA channel .
0x400824A8 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x400824A8 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x400824A8 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x400824A8 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x400824A8 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824A8 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824A8 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x400824A8 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x400824A8 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x400824A8 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x400824B0 B  CLUSTER CHANNEL[11]: no description available
0x400824B0 B  REGISTER CFG11 (rw): Configuration register for DMA channel .
0x400824B0 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x400824B0 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x400824B0 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x400824B0 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x400824B0 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x400824B0 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x400824B0 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x400824B0 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x400824B0 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x400824B4 B  REGISTER CTLSTAT11 (ro): Control and status register for DMA channel .
0x400824B4 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x400824B4 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x400824B8 B  REGISTER XFERCFG11 (rw): Transfer configuration register for DMA channel .
0x400824B8 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x400824B8 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x400824B8 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x400824B8 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x400824B8 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824B8 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824B8 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x400824B8 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x400824B8 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x400824B8 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x400824C0 B  CLUSTER CHANNEL[12]: no description available
0x400824C0 B  REGISTER CFG12 (rw): Configuration register for DMA channel .
0x400824C0 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x400824C0 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x400824C0 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x400824C0 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x400824C0 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x400824C0 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x400824C0 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x400824C0 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x400824C0 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x400824C4 B  REGISTER CTLSTAT12 (ro): Control and status register for DMA channel .
0x400824C4 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x400824C4 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x400824C8 B  REGISTER XFERCFG12 (rw): Transfer configuration register for DMA channel .
0x400824C8 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x400824C8 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x400824C8 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x400824C8 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x400824C8 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824C8 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824C8 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x400824C8 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x400824C8 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x400824C8 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x400824D0 B  CLUSTER CHANNEL[13]: no description available
0x400824D0 B  REGISTER CFG13 (rw): Configuration register for DMA channel .
0x400824D0 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x400824D0 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x400824D0 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x400824D0 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x400824D0 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x400824D0 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x400824D0 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x400824D0 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x400824D0 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x400824D4 B  REGISTER CTLSTAT13 (ro): Control and status register for DMA channel .
0x400824D4 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x400824D4 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x400824D8 B  REGISTER XFERCFG13 (rw): Transfer configuration register for DMA channel .
0x400824D8 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x400824D8 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x400824D8 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x400824D8 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x400824D8 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824D8 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824D8 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x400824D8 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x400824D8 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x400824D8 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x400824E0 B  CLUSTER CHANNEL[14]: no description available
0x400824E0 B  REGISTER CFG14 (rw): Configuration register for DMA channel .
0x400824E0 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x400824E0 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x400824E0 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x400824E0 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x400824E0 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x400824E0 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x400824E0 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x400824E0 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x400824E0 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x400824E4 B  REGISTER CTLSTAT14 (ro): Control and status register for DMA channel .
0x400824E4 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x400824E4 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x400824E8 B  REGISTER XFERCFG14 (rw): Transfer configuration register for DMA channel .
0x400824E8 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x400824E8 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x400824E8 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x400824E8 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x400824E8 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824E8 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824E8 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x400824E8 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x400824E8 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x400824E8 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x400824F0 B  CLUSTER CHANNEL[15]: no description available
0x400824F0 B  REGISTER CFG15 (rw): Configuration register for DMA channel .
0x400824F0 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x400824F0 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x400824F0 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x400824F0 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x400824F0 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x400824F0 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x400824F0 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x400824F0 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x400824F0 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x400824F4 B  REGISTER CTLSTAT15 (ro): Control and status register for DMA channel .
0x400824F4 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x400824F4 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x400824F8 B  REGISTER XFERCFG15 (rw): Transfer configuration register for DMA channel .
0x400824F8 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x400824F8 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x400824F8 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x400824F8 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x400824F8 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824F8 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400824F8 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x400824F8 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x400824F8 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x400824F8 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082500 B  CLUSTER CHANNEL[16]: no description available
0x40082500 B  REGISTER CFG16 (rw): Configuration register for DMA channel .
0x40082500 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082500 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082500 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082500 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082500 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082500 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082500 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082500 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082500 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082504 B  REGISTER CTLSTAT16 (ro): Control and status register for DMA channel .
0x40082504 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082504 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082508 B  REGISTER XFERCFG16 (rw): Transfer configuration register for DMA channel .
0x40082508 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082508 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082508 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082508 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082508 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082508 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082508 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082508 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082508 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082508 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082510 B  CLUSTER CHANNEL[17]: no description available
0x40082510 B  REGISTER CFG17 (rw): Configuration register for DMA channel .
0x40082510 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082510 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082510 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082510 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082510 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082510 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082510 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082510 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082510 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082514 B  REGISTER CTLSTAT17 (ro): Control and status register for DMA channel .
0x40082514 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082514 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082518 B  REGISTER XFERCFG17 (rw): Transfer configuration register for DMA channel .
0x40082518 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082518 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082518 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082518 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082518 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082518 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082518 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082518 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082518 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082518 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082520 B  CLUSTER CHANNEL[18]: no description available
0x40082520 B  REGISTER CFG18 (rw): Configuration register for DMA channel .
0x40082520 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082520 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082520 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082520 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082520 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082520 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082520 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082520 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082520 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082524 B  REGISTER CTLSTAT18 (ro): Control and status register for DMA channel .
0x40082524 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082524 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082528 B  REGISTER XFERCFG18 (rw): Transfer configuration register for DMA channel .
0x40082528 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082528 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082528 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082528 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082528 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082528 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082528 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082528 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082528 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082528 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082530 B  CLUSTER CHANNEL[19]: no description available
0x40082530 B  REGISTER CFG19 (rw): Configuration register for DMA channel .
0x40082530 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082530 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082530 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082530 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082530 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082530 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082530 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082530 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082530 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082534 B  REGISTER CTLSTAT19 (ro): Control and status register for DMA channel .
0x40082534 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082534 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082538 B  REGISTER XFERCFG19 (rw): Transfer configuration register for DMA channel .
0x40082538 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082538 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082538 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082538 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082538 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082538 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082538 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082538 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082538 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082538 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082540 B  CLUSTER CHANNEL[20]: no description available
0x40082540 B  REGISTER CFG20 (rw): Configuration register for DMA channel .
0x40082540 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082540 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082540 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082540 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082540 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082540 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082540 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082540 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082540 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082544 B  REGISTER CTLSTAT20 (ro): Control and status register for DMA channel .
0x40082544 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082544 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082548 B  REGISTER XFERCFG20 (rw): Transfer configuration register for DMA channel .
0x40082548 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082548 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082548 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082548 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082548 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082548 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082548 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082548 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082548 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082548 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082550 B  CLUSTER CHANNEL[21]: no description available
0x40082550 B  REGISTER CFG21 (rw): Configuration register for DMA channel .
0x40082550 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082550 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082550 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082550 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082550 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082550 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082550 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082550 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082550 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082554 B  REGISTER CTLSTAT21 (ro): Control and status register for DMA channel .
0x40082554 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082554 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082558 B  REGISTER XFERCFG21 (rw): Transfer configuration register for DMA channel .
0x40082558 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082558 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082558 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082558 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082558 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082558 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082558 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082558 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082558 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082558 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082560 B  CLUSTER CHANNEL[22]: no description available
0x40082560 B  REGISTER CFG22 (rw): Configuration register for DMA channel .
0x40082560 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082560 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082560 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082560 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082560 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082560 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082560 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082560 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082560 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082564 B  REGISTER CTLSTAT22 (ro): Control and status register for DMA channel .
0x40082564 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082564 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082568 B  REGISTER XFERCFG22 (rw): Transfer configuration register for DMA channel .
0x40082568 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082568 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082568 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082568 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082568 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082568 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082568 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082568 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082568 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082568 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082570 B  CLUSTER CHANNEL[23]: no description available
0x40082570 B  REGISTER CFG23 (rw): Configuration register for DMA channel .
0x40082570 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082570 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082570 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082570 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082570 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082570 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082570 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082570 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082570 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082574 B  REGISTER CTLSTAT23 (ro): Control and status register for DMA channel .
0x40082574 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082574 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082578 B  REGISTER XFERCFG23 (rw): Transfer configuration register for DMA channel .
0x40082578 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082578 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082578 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082578 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082578 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082578 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082578 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082578 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082578 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082578 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082580 B  CLUSTER CHANNEL[24]: no description available
0x40082580 B  REGISTER CFG24 (rw): Configuration register for DMA channel .
0x40082580 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082580 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082580 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082580 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082580 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082580 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082580 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082580 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082580 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082584 B  REGISTER CTLSTAT24 (ro): Control and status register for DMA channel .
0x40082584 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082584 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082588 B  REGISTER XFERCFG24 (rw): Transfer configuration register for DMA channel .
0x40082588 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082588 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082588 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082588 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082588 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082588 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082588 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082588 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082588 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082588 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40082590 B  CLUSTER CHANNEL[25]: no description available
0x40082590 B  REGISTER CFG25 (rw): Configuration register for DMA channel .
0x40082590 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x40082590 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x40082590 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x40082590 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x40082590 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x40082590 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x40082590 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x40082590 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x40082590 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x40082594 B  REGISTER CTLSTAT25 (ro): Control and status register for DMA channel .
0x40082594 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x40082594 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x40082598 B  REGISTER XFERCFG25 (rw): Transfer configuration register for DMA channel .
0x40082598 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x40082598 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x40082598 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x40082598 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x40082598 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082598 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x40082598 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x40082598 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x40082598 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x40082598 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x400825A0 B  CLUSTER CHANNEL[26]: no description available
0x400825A0 B  REGISTER CFG26 (rw): Configuration register for DMA channel .
0x400825A0 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x400825A0 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x400825A0 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x400825A0 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x400825A0 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x400825A0 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x400825A0 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x400825A0 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x400825A0 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x400825A4 B  REGISTER CTLSTAT26 (ro): Control and status register for DMA channel .
0x400825A4 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x400825A4 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x400825A8 B  REGISTER XFERCFG26 (rw): Transfer configuration register for DMA channel .
0x400825A8 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x400825A8 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x400825A8 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x400825A8 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x400825A8 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400825A8 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400825A8 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x400825A8 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x400825A8 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x400825A8 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x400825B0 B  CLUSTER CHANNEL[27]: no description available
0x400825B0 B  REGISTER CFG27 (rw): Configuration register for DMA channel .
0x400825B0 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x400825B0 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x400825B0 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x400825B0 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x400825B0 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x400825B0 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x400825B0 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x400825B0 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x400825B0 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x400825B4 B  REGISTER CTLSTAT27 (ro): Control and status register for DMA channel .
0x400825B4 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x400825B4 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x400825B8 B  REGISTER XFERCFG27 (rw): Transfer configuration register for DMA channel .
0x400825B8 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x400825B8 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x400825B8 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x400825B8 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x400825B8 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400825B8 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400825B8 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x400825B8 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x400825B8 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x400825B8 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x400825C0 B  CLUSTER CHANNEL[28]: no description available
0x400825C0 B  REGISTER CFG28 (rw): Configuration register for DMA channel .
0x400825C0 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x400825C0 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x400825C0 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x400825C0 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x400825C0 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x400825C0 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x400825C0 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x400825C0 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x400825C0 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x400825C4 B  REGISTER CTLSTAT28 (ro): Control and status register for DMA channel .
0x400825C4 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x400825C4 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x400825C8 B  REGISTER XFERCFG28 (rw): Transfer configuration register for DMA channel .
0x400825C8 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x400825C8 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x400825C8 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x400825C8 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x400825C8 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400825C8 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400825C8 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x400825C8 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x400825C8 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x400825C8 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x400825D0 B  CLUSTER CHANNEL[29]: no description available
0x400825D0 B  REGISTER CFG29 (rw): Configuration register for DMA channel .
0x400825D0 C   FIELD 00w01 PERIPHREQEN (rw): Peripheral request Enable. If a DMA channel is used to perform a memory-to-memory move, any peripheral DMA request associated with that channel can be disabled to prevent any interaction between the peripheral and the DMA controller.
0x400825D0 C   FIELD 01w01 HWTRIGEN (rw): Hardware Triggering Enable for this channel.
0x400825D0 C   FIELD 04w01 TRIGPOL (rw): Trigger Polarity. Selects the polarity of a hardware trigger for this channel.
0x400825D0 C   FIELD 05w01 TRIGTYPE (rw): Trigger Type. Selects hardware trigger as edge triggered or level triggered.
0x400825D0 C   FIELD 06w01 TRIGBURST (rw): Trigger Burst. Selects whether hardware triggers cause a single or burst transfer.
0x400825D0 C   FIELD 08w04 BURSTPOWER (rw): Burst Power is used in two ways. It always selects the address wrap size when SRCBURSTWRAP and/or DSTBURSTWRAP modes are selected (see descriptions elsewhere in this register). When the TRIGBURST field elsewhere in this register = 1, Burst Power selects how many transfers are performed for each DMA trigger. This can be used, for example, with peripherals that contain a FIFO that can initiate a DMA operation when the FIFO reaches a certain level. 0000: Burst size = 1 (20). 0001: Burst size = 2 (21). 0010: Burst size = 4 (22). 1010: Burst size = 1024 (210). This corresponds to the maximum supported transfer count. others: not supported. The total transfer length as defined in the XFERCOUNT bits in the XFERCFG register must be an even multiple of the burst size.
0x400825D0 C   FIELD 14w01 SRCBURSTWRAP (rw): Source Burst Wrap. When enabled, the source data address for the DMA is 'wrapped', meaning that the source address range for each burst will be the same. As an example, this could be used to read several sequential registers from a peripheral for each DMA burst, reading the same registers again for each burst.
0x400825D0 C   FIELD 15w01 DSTBURSTWRAP (rw): Destination Burst Wrap. When enabled, the destination data address for the DMA is 'wrapped', meaning that the destination address range for each burst will be the same. As an example, this could be used to write several sequential registers to a peripheral for each DMA burst, writing the same registers again for each burst.
0x400825D0 C   FIELD 16w03 CHPRIORITY (rw): Priority of this channel when multiple DMA requests are pending. Eight priority levels are supported: 0x0 = highest priority. 0x7 = lowest priority.
0x400825D4 B  REGISTER CTLSTAT29 (ro): Control and status register for DMA channel .
0x400825D4 C   FIELD 00w01 VALIDPENDING (ro): Valid pending flag for this channel. This bit is set when a 1 is written to the corresponding bit in the related SETVALID register when CFGVALID = 1 for the same channel.
0x400825D4 C   FIELD 02w01 TRIG (ro): Trigger flag. Indicates that the trigger for this channel is currently set. This bit is cleared at the end of an entire transfer or upon reload when CLRTRIG = 1.
0x400825D8 B  REGISTER XFERCFG29 (rw): Transfer configuration register for DMA channel .
0x400825D8 C   FIELD 00w01 CFGVALID (rw): Configuration Valid flag. This bit indicates whether the current channel descriptor is valid and can potentially be acted upon, if all other activation criteria are fulfilled.
0x400825D8 C   FIELD 01w01 RELOAD (rw): Indicates whether the channel's control structure will be reloaded when the current descriptor is exhausted. Reloading allows ping-pong and linked transfers.
0x400825D8 C   FIELD 02w01 SWTRIG (rw): Software Trigger.
0x400825D8 C   FIELD 03w01 CLRTRIG (rw): Clear Trigger.
0x400825D8 C   FIELD 04w01 SETINTA (rw): Set Interrupt flag A for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400825D8 C   FIELD 05w01 SETINTB (rw): Set Interrupt flag B for this channel. There is no hardware distinction between interrupt A and B. They can be used by software to assist with more complex descriptor usage. By convention, interrupt A may be used when only one interrupt flag is needed.
0x400825D8 C   FIELD 08w02 WIDTH (rw): Transfer width used for this DMA channel.
0x400825D8 C   FIELD 12w02 SRCINC (rw): Determines whether the source address is incremented for each DMA transfer.
0x400825D8 C   FIELD 14w02 DSTINC (rw): Determines whether the destination address is incremented for each DMA transfer.
0x400825D8 C   FIELD 16w10 XFERCOUNT (rw): Total number of transfers to be performed, minus 1 encoded. The number of bytes transferred is: (XFERCOUNT + 1) x data width (as defined by the WIDTH field). The DMA controller uses this bit field during transfer to count down. Hence, it cannot be used by software to read back the size of the transfer, for instance, in an interrupt handler. 0x0 = a total of 1 transfer will be performed. 0x1 = a total of 2 transfers will be performed. 0x3FF = a total of 1,024 transfers will be performed.
0x40084000 A PERIPHERAL USB0
0x40084000 B  REGISTER DEVCMDSTAT (rw): USB Device Command/Status register
0x40084000 C   FIELD 00w07 DEV_ADDR (rw): USB device address. After bus reset, the address is reset to 0x00. If the enable bit is set, the device will respond on packets for function address DEV_ADDR. When receiving a SetAddress Control Request from the USB host, software must program the new address before completing the status phase of the SetAddress Control Request.
0x40084000 C   FIELD 07w01 DEV_EN (rw): USB device enable. If this bit is set, the HW will start responding on packets for function address DEV_ADDR.
0x40084000 C   FIELD 08w01 SETUP (rw): SETUP token received. If a SETUP token is received and acknowledged by the device, this bit is set. As long as this bit is set all received IN and OUT tokens will be NAKed by HW. SW must clear this bit by writing a one. If this bit is zero, HW will handle the tokens to the CTRL EP0 as indicated by the CTRL EP0 IN and OUT data information programmed by SW.
0x40084000 C   FIELD 09w01 FORCE_NEEDCLK (rw): Forces the NEEDCLK output to always be on:
0x40084000 C   FIELD 11w01 LPM_SUP (rw): LPM Supported:
0x40084000 C   FIELD 12w01 INTONNAK_AO (rw): Interrupt on NAK for interrupt and bulk OUT EP
0x40084000 C   FIELD 13w01 INTONNAK_AI (rw): Interrupt on NAK for interrupt and bulk IN EP
0x40084000 C   FIELD 14w01 INTONNAK_CO (rw): Interrupt on NAK for control OUT EP
0x40084000 C   FIELD 15w01 INTONNAK_CI (rw): Interrupt on NAK for control IN EP
0x40084000 C   FIELD 16w01 DCON (rw): Device status - connect. The connect bit must be set by SW to indicate that the device must signal a connect. The pull-up resistor on USB_DP will be enabled when this bit is set and the VBUSDEBOUNCED bit is one.
0x40084000 C   FIELD 17w01 DSUS (rw): Device status - suspend. The suspend bit indicates the current suspend state. It is set to 1 when the device hasn't seen any activity on its upstream port for more than 3 milliseconds. It is reset to 0 on any activity. When the device is suspended (Suspend bit DSUS = 1) and the software writes a 0 to it, the device will generate a remote wake-up. This will only happen when the device is connected (Connect bit = 1). When the device is not connected or not suspended, a writing a 0 has no effect. Writing a 1 never has an effect.
0x40084000 C   FIELD 19w01 LPM_SUS (rw): Device status - LPM Suspend. This bit represents the current LPM suspend state. It is set to 1 by HW when the device has acknowledged the LPM request from the USB host and the Token Retry Time of 10 ms has elapsed. When the device is in the LPM suspended state (LPM suspend bit = 1) and the software writes a zero to this bit, the device will generate a remote walk-up. Software can only write a zero to this bit when the LPM_REWP bit is set to 1. HW resets this bit when it receives a host initiated resume. HW only updates the LPM_SUS bit when the LPM_SUPP bit is equal to one.
0x40084000 C   FIELD 20w01 LPM_REWP (ro): LPM Remote Wake-up Enabled by USB host. HW sets this bit to one when the bRemoteWake bit in the LPM extended token is set to 1. HW will reset this bit to 0 when it receives the host initiated LPM resume, when a remote wake-up is sent by the device or when a USB bus reset is received. Software can use this bit to check if the remote wake-up feature is enabled by the host for the LPM transaction.
0x40084000 C   FIELD 24w01 DCON_C (rw): Device status - connect change. The Connect Change bit is set when the device's pull-up resistor is disconnected because VBus disappeared. The bit is reset by writing a one to it.
0x40084000 C   FIELD 25w01 DSUS_C (rw): Device status - suspend change. The suspend change bit is set to 1 when the suspend bit toggles. The suspend bit can toggle because: - The device goes in the suspended state - The device is disconnected - The device receives resume signaling on its upstream port. The bit is reset by writing a one to it.
0x40084000 C   FIELD 26w01 DRES_C (rw): Device status - reset change. This bit is set when the device received a bus reset. On a bus reset the device will automatically go to the default state (unconfigured and responding to address 0). The bit is reset by writing a one to it.
0x40084000 C   FIELD 28w01 VBUSDEBOUNCED (ro): This bit indicates if Vbus is detected or not. The bit raises immediately when Vbus becomes high. It drops to zero if Vbus is low for at least 3 ms. If this bit is high and the DCon bit is set, the HW will enable the pull-up resistor to signal a connect.
0x40084004 B  REGISTER INFO (rw): USB Info register
0x40084004 C   FIELD 00w11 FRAME_NR (ro): Frame number. This contains the frame number of the last successfully received SOF. In case no SOF was received by the device at the beginning of a frame, the frame number returned is that of the last successfully received SOF. In case the SOF frame number contained a CRC error, the frame number returned will be the corrupted frame number as received by the device.
0x40084004 C   FIELD 11w04 ERR_CODE (rw): The error code which last occurred:
0x40084004 C   FIELD 16w08 MINREV (ro): Minor Revision.
0x40084004 C   FIELD 24w08 MAJREV (ro): Major Revision.
0x40084008 B  REGISTER EPLISTSTART (rw): USB EP Command/Status List start address
0x40084008 C   FIELD 08w24 EP_LIST (rw): Start address of the USB EP Command/Status List.
0x4008400C B  REGISTER DATABUFSTART (rw): USB Data buffer start address
0x4008400C C   FIELD 22w10 DA_BUF (rw): Start address of the buffer pointer page where all endpoint data buffers are located.
0x40084010 B  REGISTER LPM (rw): USB Link Power Management register
0x40084010 C   FIELD 00w04 HIRD_HW (ro): Host Initiated Resume Duration - HW. This is the HIRD value from the last received LPM token
0x40084010 C   FIELD 04w04 HIRD_SW (rw): Host Initiated Resume Duration - SW. This is the time duration required by the USB device system to come out of LPM initiated suspend after receiving the host initiated LPM resume.
0x40084010 C   FIELD 08w01 DATA_PENDING (rw): As long as this bit is set to one and LPM supported bit is set to one, HW will return a NYET handshake on every LPM token it receives. If LPM supported bit is set to one and this bit is zero, HW will return an ACK handshake on every LPM token it receives. If SW has still data pending and LPM is supported, it must set this bit to 1.
0x40084014 B  REGISTER EPSKIP (rw): USB Endpoint skip
0x40084014 C   FIELD 00w10 SKIP (rw): Endpoint skip: Writing 1 to one of these bits, will indicate to HW that it must deactivate the buffer assigned to this endpoint and return control back to software. When HW has deactivated the endpoint, it will clear this bit, but it will not modify the EPINUSE bit. An interrupt will be generated when the Active bit goes from 1 to 0. Note: In case of double-buffering, HW will only clear the Active bit of the buffer indicated by the EPINUSE bit.
0x40084018 B  REGISTER EPINUSE (rw): USB Endpoint Buffer in use
0x40084018 C   FIELD 02w08 BUF (rw): Buffer in use: This register has one bit per physical endpoint. 0: HW is accessing buffer 0. 1: HW is accessing buffer 1.
0x4008401C B  REGISTER EPBUFCFG (rw): USB Endpoint Buffer Configuration register
0x4008401C C   FIELD 02w08 BUF_SB (rw): Buffer usage: This register has one bit per physical endpoint. 0: Single-buffer. 1: Double-buffer. If the bit is set to single-buffer (0), it will not toggle the corresponding EPINUSE bit when it clears the active bit. If the bit is set to double-buffer (1), HW will toggle the EPINUSE bit when it clears the Active bit for the buffer.
0x40084020 B  REGISTER INTSTAT (rw): USB interrupt status register
0x40084020 C   FIELD 00w01 EP0OUT (rw): Interrupt status register bit for the Control EP0 OUT direction. This bit will be set if NBytes transitions to zero or the skip bit is set by software or a SETUP packet is successfully received for the control EP0. If the IntOnNAK_CO is set, this bit will also be set when a NAK is transmitted for the Control EP0 OUT direction. Software can clear this bit by writing a one to it.
0x40084020 C   FIELD 01w01 EP0IN (rw): Interrupt status register bit for the Control EP0 IN direction. This bit will be set if NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_CI is set, this bit will also be set when a NAK is transmitted for the Control EP0 IN direction. Software can clear this bit by writing a one to it.
0x40084020 C   FIELD 02w01 EP1OUT (rw): Interrupt status register bit for the EP1 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP1 OUT direction. Software can clear this bit by writing a one to it.
0x40084020 C   FIELD 03w01 EP1IN (rw): Interrupt status register bit for the EP1 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP1 IN direction. Software can clear this bit by writing a one to it.
0x40084020 C   FIELD 04w01 EP2OUT (rw): Interrupt status register bit for the EP2 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP2 OUT direction. Software can clear this bit by writing a one to it.
0x40084020 C   FIELD 05w01 EP2IN (rw): Interrupt status register bit for the EP2 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP2 IN direction. Software can clear this bit by writing a one to it.
0x40084020 C   FIELD 06w01 EP3OUT (rw): Interrupt status register bit for the EP3 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP3 OUT direction. Software can clear this bit by writing a one to it.
0x40084020 C   FIELD 07w01 EP3IN (rw): Interrupt status register bit for the EP3 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP3 IN direction. Software can clear this bit by writing a one to it.
0x40084020 C   FIELD 08w01 EP4OUT (rw): Interrupt status register bit for the EP4 OUT direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AO is set, this bit will also be set when a NAK is transmitted for the EP4 OUT direction. Software can clear this bit by writing a one to it.
0x40084020 C   FIELD 09w01 EP4IN (rw): Interrupt status register bit for the EP4 IN direction. This bit will be set if the corresponding Active bit is cleared by HW. This is done in case the programmed NBytes transitions to zero or the skip bit is set by software. If the IntOnNAK_AI is set, this bit will also be set when a NAK is transmitted for the EP4 IN direction. Software can clear this bit by writing a one to it.
0x40084020 C   FIELD 30w01 FRAME_INT (rw): Frame interrupt. This bit is set to one every millisecond when the VbusDebounced bit and the DCON bit are set. This bit can be used by software when handling isochronous endpoints. Software can clear this bit by writing a one to it.
0x40084020 C   FIELD 31w01 DEV_INT (rw): Device status interrupt. This bit is set by HW when one of the bits in the Device Status Change register are set. Software can clear this bit by writing a one to it.
0x40084024 B  REGISTER INTEN (rw): USB interrupt enable register
0x40084024 C   FIELD 00w10 EP_INT_EN (rw): If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit.
0x40084024 C   FIELD 30w01 FRAME_INT_EN (rw): If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit.
0x40084024 C   FIELD 31w01 DEV_INT_EN (rw): If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line indicated by the corresponding USB interrupt routing bit.
0x40084028 B  REGISTER INTSETSTAT (rw): USB set interrupt status register
0x40084028 C   FIELD 00w10 EP_SET_INT (rw): If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned.
0x40084028 C   FIELD 30w01 FRAME_SET_INT (rw): If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned.
0x40084028 C   FIELD 31w01 DEV_SET_INT (rw): If software writes a one to one of these bits, the corresponding USB interrupt status bit is set. When this register is read, the same value as the USB interrupt status register is returned.
0x40084034 B  REGISTER EPTOGGLE (rw): USB Endpoint toggle register
0x40084034 C   FIELD 00w10 TOGGLE (rw): Endpoint data toggle: This field indicates the current value of the data toggle for the corresponding endpoint.
0x40085000 A PERIPHERAL SCT0
0x40085000 B  REGISTER CONFIG (rw): SCT configuration register
0x40085000 C   FIELD 00w01 UNIFY (rw): SCT operation
0x40085000 C   FIELD 01w02 CLKMODE (rw): SCT clock mode
0x40085000 C   FIELD 03w04 CKSEL (rw): SCT clock select. The specific functionality of the designated input/edge is dependent on the CLKMODE bit selection in this register.
0x40085000 C   FIELD 07w01 NORELOAD_L (rw): A 1 in this bit prevents the lower match registers from being reloaded from their respective reload registers. Setting this bit eliminates the need to write to the reload registers MATCHREL if the match values are fixed. Software can write to set or clear this bit at any time. This bit applies to both the higher and lower registers when the UNIFY bit is set.
0x40085000 C   FIELD 08w01 NORELOAD_H (rw): A 1 in this bit prevents the higher match registers from being reloaded from their respective reload registers. Setting this bit eliminates the need to write to the reload registers MATCHREL if the match values are fixed. Software can write to set or clear this bit at any time. This bit is not used when the UNIFY bit is set.
0x40085000 C   FIELD 09w04 INSYNC (rw): Synchronization for input N (bit 9 = input 0, bit 10 = input 1,, bit 12 = input 3); all other bits are reserved. A 1 in one of these bits subjects the corresponding input to synchronization to the SCT clock, before it is used to create an event. If an input is known to already be synchronous to the SCT clock, this bit may be set to 0 for faster input response. (Note: The SCT clock is the system clock for CKMODEs 0-2. It is the selected, asynchronous SCT input clock for CKMODE3). Note that the INSYNC field only affects inputs used for event generation. It does not apply to the clock input specified in the CKSEL field.
0x40085000 C   FIELD 17w01 AUTOLIMIT_L (rw): A one in this bit causes a match on match register 0 to be treated as a de-facto LIMIT condition without the need to define an associated event. As with any LIMIT event, this automatic limit causes the counter to be cleared to zero in unidirectional mode or to change the direction of count in bi-directional mode. Software can write to set or clear this bit at any time. This bit applies to both the higher and lower registers when the UNIFY bit is set.
0x40085000 C   FIELD 18w01 AUTOLIMIT_H (rw): A one in this bit will cause a match on match register 0 to be treated as a de-facto LIMIT condition without the need to define an associated event. As with any LIMIT event, this automatic limit causes the counter to be cleared to zero in unidirectional mode or to change the direction of count in bi-directional mode. Software can write to set or clear this bit at any time. This bit is not used when the UNIFY bit is set.
0x40085004 B  REGISTER CTRL (rw): SCT control register
0x40085004 C   FIELD 00w01 DOWN_L (rw): This bit is 1 when the L or unified counter is counting down. Hardware sets this bit when the counter is counting up, counter limit occurs, and BIDIR = 1.Hardware clears this bit when the counter is counting down and a limit condition occurs or when the counter reaches 0.
0x40085004 C   FIELD 01w01 STOP_L (rw): When this bit is 1 and HALT is 0, the L or unified counter does not run, but I/O events related to the counter can occur. If a designated start event occurs, this bit is cleared and counting resumes.
0x40085004 C   FIELD 02w01 HALT_L (rw): When this bit is 1, the L or unified counter does not run and no events can occur. A reset sets this bit. When the HALT_L bit is one, the STOP_L bit is cleared. It is possible to remove the halt condition while keeping the SCT in the stop condition (not running) with a single write to this register to simultaneously clear the HALT bit and set the STOP bit. Once set, only software can clear this bit to restore counter operation. This bit is set on reset.
0x40085004 C   FIELD 03w01 CLRCTR_L (rw): Writing a 1 to this bit clears the L or unified counter. This bit always reads as 0.
0x40085004 C   FIELD 04w01 BIDIR_L (rw): L or unified counter direction select
0x40085004 C   FIELD 05w08 PRE_L (rw): Specifies the factor by which the SCT clock is prescaled to produce the L or unified counter clock. The counter clock is clocked at the rate of the SCT clock divided by PRE_L+1. Clear the counter (by writing a 1 to the CLRCTR bit) whenever changing the PRE value.
0x40085004 C   FIELD 16w01 DOWN_H (rw): This bit is 1 when the H counter is counting down. Hardware sets this bit when the counter is counting, a counter limit condition occurs, and BIDIR is 1. Hardware clears this bit when the counter is counting down and a limit condition occurs or when the counter reaches 0.
0x40085004 C   FIELD 17w01 STOP_H (rw): When this bit is 1 and HALT is 0, the H counter does not, run but I/O events related to the counter can occur. If such an event matches the mask in the Start register, this bit is cleared and counting resumes.
0x40085004 C   FIELD 18w01 HALT_H (rw): When this bit is 1, the H counter does not run and no events can occur. A reset sets this bit. When the HALT_H bit is one, the STOP_H bit is cleared. It is possible to remove the halt condition while keeping the SCT in the stop condition (not running) with a single write to this register to simultaneously clear the HALT bit and set the STOP bit. Once set, this bit can only be cleared by software to restore counter operation. This bit is set on reset.
0x40085004 C   FIELD 19w01 CLRCTR_H (rw): Writing a 1 to this bit clears the H counter. This bit always reads as 0.
0x40085004 C   FIELD 20w01 BIDIR_H (rw): Direction select
0x40085004 C   FIELD 21w08 PRE_H (rw): Specifies the factor by which the SCT clock is prescaled to produce the H counter clock. The counter clock is clocked at the rate of the SCT clock divided by PRELH+1. Clear the counter (by writing a 1 to the CLRCTR bit) whenever changing the PRE value.
0x40085008 B  REGISTER LIMIT (rw): SCT limit event select register
0x40085008 C   FIELD 00w16 LIMMSK_L (rw): If bit n is one, event n is used as a counter limit for the L or unified counter (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.
0x40085008 C   FIELD 16w16 LIMMSK_H (rw): If bit n is one, event n is used as a counter limit for the H counter (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT.
0x4008500C B  REGISTER HALT (rw): SCT halt event select register
0x4008500C C   FIELD 00w16 HALTMSK_L (rw): If bit n is one, event n sets the HALT_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.
0x4008500C C   FIELD 16w16 HALTMSK_H (rw): If bit n is one, event n sets the HALT_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT.
0x40085010 B  REGISTER STOP (rw): SCT stop event select register
0x40085010 C   FIELD 00w16 STOPMSK_L (rw): If bit n is one, event n sets the STOP_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.
0x40085010 C   FIELD 16w16 STOPMSK_H (rw): If bit n is one, event n sets the STOP_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT.
0x40085014 B  REGISTER START (rw): SCT start event select register
0x40085014 C   FIELD 00w16 STARTMSK_L (rw): If bit n is one, event n clears the STOP_L bit in the CTRL register (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.
0x40085014 C   FIELD 16w16 STARTMSK_H (rw): If bit n is one, event n clears the STOP_H bit in the CTRL register (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of events in this SCT.
0x40085040 B  REGISTER COUNT (rw): SCT counter register
0x40085040 C   FIELD 00w16 CTR_L (rw): When UNIFY = 0, read or write the 16-bit L counter value. When UNIFY = 1, read or write the lower 16 bits of the 32-bit unified counter.
0x40085040 C   FIELD 16w16 CTR_H (rw): When UNIFY = 0, read or write the 16-bit H counter value. When UNIFY = 1, read or write the upper 16 bits of the 32-bit unified counter.
0x40085044 B  REGISTER STATE (rw): SCT state register
0x40085044 C   FIELD 00w05 STATE_L (rw): State variable.
0x40085044 C   FIELD 16w05 STATE_H (rw): State variable.
0x40085048 B  REGISTER INPUT (ro): SCT input register
0x40085048 C   FIELD 00w01 AIN0 (ro): Input 0 state. Input 0 state on the last SCT clock edge.
0x40085048 C   FIELD 01w01 AIN1 (ro): Input 1 state. Input 1 state on the last SCT clock edge.
0x40085048 C   FIELD 02w01 AIN2 (ro): Input 2 state. Input 2 state on the last SCT clock edge.
0x40085048 C   FIELD 03w01 AIN3 (ro): Input 3 state. Input 3 state on the last SCT clock edge.
0x40085048 C   FIELD 04w01 AIN4 (ro): Input 4 state. Input 4 state on the last SCT clock edge.
0x40085048 C   FIELD 05w01 AIN5 (ro): Input 5 state. Input 5 state on the last SCT clock edge.
0x40085048 C   FIELD 06w01 AIN6 (ro): Input 6 state. Input 6 state on the last SCT clock edge.
0x40085048 C   FIELD 07w01 AIN7 (ro): Input 7 state. Input 7 state on the last SCT clock edge.
0x40085048 C   FIELD 08w01 AIN8 (ro): Input 8 state. Input 8 state on the last SCT clock edge.
0x40085048 C   FIELD 09w01 AIN9 (ro): Input 9 state. Input 9 state on the last SCT clock edge.
0x40085048 C   FIELD 10w01 AIN10 (ro): Input 10 state. Input 10 state on the last SCT clock edge.
0x40085048 C   FIELD 11w01 AIN11 (ro): Input 11 state. Input 11 state on the last SCT clock edge.
0x40085048 C   FIELD 12w01 AIN12 (ro): Input 12 state. Input 12 state on the last SCT clock edge.
0x40085048 C   FIELD 13w01 AIN13 (ro): Input 13 state. Input 13 state on the last SCT clock edge.
0x40085048 C   FIELD 14w01 AIN14 (ro): Input 14 state. Input 14 state on the last SCT clock edge.
0x40085048 C   FIELD 15w01 AIN15 (ro): Input 15 state. Input 15 state on the last SCT clock edge.
0x40085048 C   FIELD 16w01 SIN0 (ro): Input 0 state. Input 0 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 17w01 SIN1 (ro): Input 1 state. Input 1 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 18w01 SIN2 (ro): Input 2 state. Input 2 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 19w01 SIN3 (ro): Input 3 state. Input 3 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 20w01 SIN4 (ro): Input 4 state. Input 4 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 21w01 SIN5 (ro): Input 5 state. Input 5 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 22w01 SIN6 (ro): Input 6 state. Input 6 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 23w01 SIN7 (ro): Input 7 state. Input 7 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 24w01 SIN8 (ro): Input 8 state. Input 8 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 25w01 SIN9 (ro): Input 9 state. Input 9 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 26w01 SIN10 (ro): Input 10 state. Input 10 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 27w01 SIN11 (ro): Input 11 state. Input 11 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 28w01 SIN12 (ro): Input 12 state. Input 12 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 29w01 SIN13 (ro): Input 13 state. Input 13 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 30w01 SIN14 (ro): Input 14 state. Input 14 state following the synchronization specified by INSYNC.
0x40085048 C   FIELD 31w01 SIN15 (ro): Input 15 state. Input 15 state following the synchronization specified by INSYNC.
0x4008504C B  REGISTER REGMODE (rw): SCT match/capture mode register
0x4008504C C   FIELD 00w16 REGMOD_L (rw): Each bit controls one match/capture register (register 0 = bit 0, register 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT. 0 = register operates as match register. 1 = register operates as capture register.
0x4008504C C   FIELD 16w16 REGMOD_H (rw): Each bit controls one match/capture register (register 0 = bit 16, register 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT. 0 = register operates as match registers. 1 = register operates as capture registers.
0x40085050 B  REGISTER OUTPUT (rw): SCT output register
0x40085050 C   FIELD 00w16 OUT (rw): Writing a 1 to bit n forces the corresponding output HIGH. Writing a 0 forces the corresponding output LOW (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT.
0x40085054 B  REGISTER OUTPUTDIRCTRL (rw): SCT output counter direction control register
0x40085054 C   FIELD 00w02 SETCLR0 (rw): Set/clear operation on output 0. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 02w02 SETCLR1 (rw): Set/clear operation on output 1. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 04w02 SETCLR2 (rw): Set/clear operation on output 2. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 06w02 SETCLR3 (rw): Set/clear operation on output 3. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 08w02 SETCLR4 (rw): Set/clear operation on output 4. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 10w02 SETCLR5 (rw): Set/clear operation on output 5. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 12w02 SETCLR6 (rw): Set/clear operation on output 6. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 14w02 SETCLR7 (rw): Set/clear operation on output 7. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 16w02 SETCLR8 (rw): Set/clear operation on output 8. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 18w02 SETCLR9 (rw): Set/clear operation on output 9. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 20w02 SETCLR10 (rw): Set/clear operation on output 10. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 22w02 SETCLR11 (rw): Set/clear operation on output 11. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 24w02 SETCLR12 (rw): Set/clear operation on output 12. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 26w02 SETCLR13 (rw): Set/clear operation on output 13. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 28w02 SETCLR14 (rw): Set/clear operation on output 14. Value 0x3 is reserved. Do not program this value.
0x40085054 C   FIELD 30w02 SETCLR15 (rw): Set/clear operation on output 15. Value 0x3 is reserved. Do not program this value.
0x40085058 B  REGISTER RES (rw): SCT conflict resolution register
0x40085058 C   FIELD 00w02 O0RES (rw): Effect of simultaneous set and clear on output 0.
0x40085058 C   FIELD 02w02 O1RES (rw): Effect of simultaneous set and clear on output 1.
0x40085058 C   FIELD 04w02 O2RES (rw): Effect of simultaneous set and clear on output 2.
0x40085058 C   FIELD 06w02 O3RES (rw): Effect of simultaneous set and clear on output 3.
0x40085058 C   FIELD 08w02 O4RES (rw): Effect of simultaneous set and clear on output 4.
0x40085058 C   FIELD 10w02 O5RES (rw): Effect of simultaneous set and clear on output 5.
0x40085058 C   FIELD 12w02 O6RES (rw): Effect of simultaneous set and clear on output 6.
0x40085058 C   FIELD 14w02 O7RES (rw): Effect of simultaneous set and clear on output 7.
0x40085058 C   FIELD 16w02 O8RES (rw): Effect of simultaneous set and clear on output 8.
0x40085058 C   FIELD 18w02 O9RES (rw): Effect of simultaneous set and clear on output 9.
0x40085058 C   FIELD 20w02 O10RES (rw): Effect of simultaneous set and clear on output 10.
0x40085058 C   FIELD 22w02 O11RES (rw): Effect of simultaneous set and clear on output 11.
0x40085058 C   FIELD 24w02 O12RES (rw): Effect of simultaneous set and clear on output 12.
0x40085058 C   FIELD 26w02 O13RES (rw): Effect of simultaneous set and clear on output 13.
0x40085058 C   FIELD 28w02 O14RES (rw): Effect of simultaneous set and clear on output 14.
0x40085058 C   FIELD 30w02 O15RES (rw): Effect of simultaneous set and clear on output 15.
0x4008505C B  REGISTER DMAREQ0 (rw): SCT DMA request 0 register
0x4008505C C   FIELD 00w16 DEV_0 (rw): If bit n is one, event n triggers DMA request 0 (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.
0x4008505C C   FIELD 30w01 DRL0 (rw): A 1 in this bit triggers DMA request 0 when it loads the MATCH_L/Unified registers from the RELOAD_L/Unified registers.
0x4008505C C   FIELD 31w01 DRQ0 (rw): This read-only bit indicates the state of DMA Request 0. Note that if the related DMA channel is enabled and properly set up, it is unlikely that software will see this flag, it will be cleared rapidly by the DMA service. The flag remaining set could point to an issue with DMA setup.
0x40085060 B  REGISTER DMAREQ1 (rw): SCT DMA request 1 register
0x40085060 C   FIELD 00w16 DEV_1 (rw): If bit n is one, event n triggers DMA request 1 (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.
0x40085060 C   FIELD 30w01 DRL1 (rw): A 1 in this bit triggers DMA request 1 when it loads the Match L/Unified registers from the Reload L/Unified registers.
0x40085060 C   FIELD 31w01 DRQ1 (rw): This read-only bit indicates the state of DMA Request 1. Note that if the related DMA channel is enabled and properly set up, it is unlikely that software will see this flag, it will be cleared rapidly by the DMA service. The flag remaining set could point to an issue with DMA setup.
0x400850F0 B  REGISTER EVEN (rw): SCT event interrupt enable register
0x400850F0 C   FIELD 00w16 IEN (rw): The SCT requests an interrupt when bit n of this register and the event flag register are both one (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.
0x400850F4 B  REGISTER EVFLAG (rw): SCT event flag register
0x400850F4 C   FIELD 00w16 FLAG (rw): Bit n is one if event n has occurred since reset or a 1 was last written to this bit (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of events in this SCT.
0x400850F8 B  REGISTER CONEN (rw): SCT conflict interrupt enable register
0x400850F8 C   FIELD 00w16 NCEN (rw): The SCT requests an interrupt when bit n of this register and the SCT conflict flag register are both one (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT.
0x400850FC B  REGISTER CONFLAG (rw): SCT conflict flag register
0x400850FC C   FIELD 00w16 NCFLAG (rw): Bit n is one if a no-change conflict event occurred on output n since reset or a 1 was last written to this bit (output 0 = bit 0, output 1 = bit 1, etc.). The number of bits = number of outputs in this SCT.
0x400850FC C   FIELD 30w01 BUSERRL (rw): The most recent bus error from this SCT involved writing CTR L/Unified, STATE L/Unified, MATCH L/Unified, or the Output register when the L/U counter was not halted. A word write to certain L and H registers can be half successful and half unsuccessful.
0x400850FC C   FIELD 31w01 BUSERRH (rw): The most recent bus error from this SCT involved writing CTR H, STATE H, MATCH H, or the Output register when the H counter was not halted.
0x40085100 B  REGISTER CAP0 (rw): SCT capture register of capture channel
0x40085100 B  REGISTER MATCH0 (rw): SCT match value register of match channels
0x40085100 C   FIELD 00w16 CAPn_L (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.
0x40085100 C   FIELD 00w16 MATCHn_L (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.
0x40085100 C   FIELD 16w16 CAPn_H (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.
0x40085100 C   FIELD 16w16 MATCHn_H (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.
0x40085104 B  REGISTER CAP1 (rw): SCT capture register of capture channel
0x40085104 B  REGISTER MATCH1 (rw): SCT match value register of match channels
0x40085104 C   FIELD 00w16 CAPn_L (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.
0x40085104 C   FIELD 00w16 MATCHn_L (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.
0x40085104 C   FIELD 16w16 CAPn_H (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.
0x40085104 C   FIELD 16w16 MATCHn_H (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.
0x40085108 B  REGISTER CAP2 (rw): SCT capture register of capture channel
0x40085108 B  REGISTER MATCH2 (rw): SCT match value register of match channels
0x40085108 C   FIELD 00w16 CAPn_L (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.
0x40085108 C   FIELD 00w16 MATCHn_L (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.
0x40085108 C   FIELD 16w16 CAPn_H (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.
0x40085108 C   FIELD 16w16 MATCHn_H (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.
0x4008510C B  REGISTER CAP3 (rw): SCT capture register of capture channel
0x4008510C B  REGISTER MATCH3 (rw): SCT match value register of match channels
0x4008510C C   FIELD 00w16 CAPn_L (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.
0x4008510C C   FIELD 00w16 MATCHn_L (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.
0x4008510C C   FIELD 16w16 CAPn_H (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.
0x4008510C C   FIELD 16w16 MATCHn_H (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.
0x40085110 B  REGISTER CAP4 (rw): SCT capture register of capture channel
0x40085110 B  REGISTER MATCH4 (rw): SCT match value register of match channels
0x40085110 C   FIELD 00w16 CAPn_L (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.
0x40085110 C   FIELD 00w16 MATCHn_L (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.
0x40085110 C   FIELD 16w16 CAPn_H (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.
0x40085110 C   FIELD 16w16 MATCHn_H (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.
0x40085114 B  REGISTER CAP5 (rw): SCT capture register of capture channel
0x40085114 B  REGISTER MATCH5 (rw): SCT match value register of match channels
0x40085114 C   FIELD 00w16 CAPn_L (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.
0x40085114 C   FIELD 00w16 MATCHn_L (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.
0x40085114 C   FIELD 16w16 CAPn_H (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.
0x40085114 C   FIELD 16w16 MATCHn_H (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.
0x40085118 B  REGISTER CAP6 (rw): SCT capture register of capture channel
0x40085118 B  REGISTER MATCH6 (rw): SCT match value register of match channels
0x40085118 C   FIELD 00w16 CAPn_L (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.
0x40085118 C   FIELD 00w16 MATCHn_L (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.
0x40085118 C   FIELD 16w16 CAPn_H (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.
0x40085118 C   FIELD 16w16 MATCHn_H (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.
0x4008511C B  REGISTER CAP7 (rw): SCT capture register of capture channel
0x4008511C B  REGISTER MATCH7 (rw): SCT match value register of match channels
0x4008511C C   FIELD 00w16 CAPn_L (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.
0x4008511C C   FIELD 00w16 MATCHn_L (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.
0x4008511C C   FIELD 16w16 CAPn_H (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.
0x4008511C C   FIELD 16w16 MATCHn_H (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.
0x40085120 B  REGISTER CAP8 (rw): SCT capture register of capture channel
0x40085120 B  REGISTER MATCH8 (rw): SCT match value register of match channels
0x40085120 C   FIELD 00w16 CAPn_L (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.
0x40085120 C   FIELD 00w16 MATCHn_L (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.
0x40085120 C   FIELD 16w16 CAPn_H (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.
0x40085120 C   FIELD 16w16 MATCHn_H (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.
0x40085124 B  REGISTER CAP9 (rw): SCT capture register of capture channel
0x40085124 B  REGISTER MATCH9 (rw): SCT match value register of match channels
0x40085124 C   FIELD 00w16 CAPn_L (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the lower 16 bits of the 32-bit value at which this register was last captured.
0x40085124 C   FIELD 00w16 MATCHn_L (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the L counter. When UNIFY = 1, read or write the lower 16 bits of the 32-bit value to be compared to the unified counter.
0x40085124 C   FIELD 16w16 CAPn_H (rw): When UNIFY = 0, read the 16-bit counter value at which this register was last captured. When UNIFY = 1, read the upper 16 bits of the 32-bit value at which this register was last captured.
0x40085124 C   FIELD 16w16 MATCHn_H (rw): When UNIFY = 0, read or write the 16-bit value to be compared to the H counter. When UNIFY = 1, read or write the upper 16 bits of the 32-bit value to be compared to the unified counter.
0x40085200 B  REGISTER CAPCTRL0 (rw): SCT capture control register
0x40085200 B  REGISTER MATCHREL0 (rw): SCT match reload value register
0x40085200 C   FIELD 00w16 CAPCONn_L (rw): If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.
0x40085200 C   FIELD 00w16 RELOADn_L (rw): When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085200 C   FIELD 16w16 CAPCONn_H (rw): If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.
0x40085200 C   FIELD 16w16 RELOADn_H (rw): When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085204 B  REGISTER CAPCTRL1 (rw): SCT capture control register
0x40085204 B  REGISTER MATCHREL1 (rw): SCT match reload value register
0x40085204 C   FIELD 00w16 CAPCONn_L (rw): If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.
0x40085204 C   FIELD 00w16 RELOADn_L (rw): When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085204 C   FIELD 16w16 CAPCONn_H (rw): If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.
0x40085204 C   FIELD 16w16 RELOADn_H (rw): When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085208 B  REGISTER CAPCTRL2 (rw): SCT capture control register
0x40085208 B  REGISTER MATCHREL2 (rw): SCT match reload value register
0x40085208 C   FIELD 00w16 CAPCONn_L (rw): If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.
0x40085208 C   FIELD 00w16 RELOADn_L (rw): When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085208 C   FIELD 16w16 CAPCONn_H (rw): If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.
0x40085208 C   FIELD 16w16 RELOADn_H (rw): When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x4008520C B  REGISTER CAPCTRL3 (rw): SCT capture control register
0x4008520C B  REGISTER MATCHREL3 (rw): SCT match reload value register
0x4008520C C   FIELD 00w16 CAPCONn_L (rw): If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.
0x4008520C C   FIELD 00w16 RELOADn_L (rw): When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x4008520C C   FIELD 16w16 CAPCONn_H (rw): If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.
0x4008520C C   FIELD 16w16 RELOADn_H (rw): When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085210 B  REGISTER CAPCTRL4 (rw): SCT capture control register
0x40085210 B  REGISTER MATCHREL4 (rw): SCT match reload value register
0x40085210 C   FIELD 00w16 CAPCONn_L (rw): If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.
0x40085210 C   FIELD 00w16 RELOADn_L (rw): When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085210 C   FIELD 16w16 CAPCONn_H (rw): If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.
0x40085210 C   FIELD 16w16 RELOADn_H (rw): When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085214 B  REGISTER CAPCTRL5 (rw): SCT capture control register
0x40085214 B  REGISTER MATCHREL5 (rw): SCT match reload value register
0x40085214 C   FIELD 00w16 CAPCONn_L (rw): If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.
0x40085214 C   FIELD 00w16 RELOADn_L (rw): When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085214 C   FIELD 16w16 CAPCONn_H (rw): If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.
0x40085214 C   FIELD 16w16 RELOADn_H (rw): When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085218 B  REGISTER CAPCTRL6 (rw): SCT capture control register
0x40085218 B  REGISTER MATCHREL6 (rw): SCT match reload value register
0x40085218 C   FIELD 00w16 CAPCONn_L (rw): If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.
0x40085218 C   FIELD 00w16 RELOADn_L (rw): When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085218 C   FIELD 16w16 CAPCONn_H (rw): If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.
0x40085218 C   FIELD 16w16 RELOADn_H (rw): When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x4008521C B  REGISTER CAPCTRL7 (rw): SCT capture control register
0x4008521C B  REGISTER MATCHREL7 (rw): SCT match reload value register
0x4008521C C   FIELD 00w16 CAPCONn_L (rw): If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.
0x4008521C C   FIELD 00w16 RELOADn_L (rw): When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x4008521C C   FIELD 16w16 CAPCONn_H (rw): If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.
0x4008521C C   FIELD 16w16 RELOADn_H (rw): When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085220 B  REGISTER CAPCTRL8 (rw): SCT capture control register
0x40085220 B  REGISTER MATCHREL8 (rw): SCT match reload value register
0x40085220 C   FIELD 00w16 CAPCONn_L (rw): If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.
0x40085220 C   FIELD 00w16 RELOADn_L (rw): When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085220 C   FIELD 16w16 CAPCONn_H (rw): If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.
0x40085220 C   FIELD 16w16 RELOADn_H (rw): When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085224 B  REGISTER CAPCTRL9 (rw): SCT capture control register
0x40085224 B  REGISTER MATCHREL9 (rw): SCT match reload value register
0x40085224 C   FIELD 00w16 CAPCONn_L (rw): If bit m is one, event m causes the CAPn_L (UNIFY = 0) or the CAPn (UNIFY = 1) register to be loaded (event 0 = bit 0, event 1 = bit 1, etc.). The number of bits = number of match/captures in this SCT.
0x40085224 C   FIELD 00w16 RELOADn_L (rw): When UNIFY = 0, specifies the 16-bit value to be loaded into the MATCHn_L register. When UNIFY = 1, specifies the lower 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085224 C   FIELD 16w16 CAPCONn_H (rw): If bit m is one, event m causes the CAPn_H (UNIFY = 0) register to be loaded (event 0 = bit 16, event 1 = bit 17, etc.). The number of bits = number of match/captures in this SCT.
0x40085224 C   FIELD 16w16 RELOADn_H (rw): When UNIFY = 0, specifies the 16-bit to be loaded into the MATCHn_H register. When UNIFY = 1, specifies the upper 16 bits of the 32-bit value to be loaded into the MATCHn register.
0x40085300 B  CLUSTER EV[0]: no description available
0x40085300 B  REGISTER EV_STATE0 (rw): SCT event state register 0
0x40085300 C   FIELD 00w16 STATEMSKn (rw): If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT.
0x40085304 B  REGISTER EV_CTRL0 (rw): SCT event control register 0
0x40085304 C   FIELD 00w04 MATCHSEL (rw): Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running.
0x40085304 C   FIELD 04w01 HEVENT (rw): Select L/H counter. Do not set this bit if UNIFY = 1.
0x40085304 C   FIELD 05w01 OUTSEL (rw): Input/output select
0x40085304 C   FIELD 06w04 IOSEL (rw): Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event.
0x40085304 C   FIELD 10w02 IOCOND (rw): Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .
0x40085304 C   FIELD 12w02 COMBMODE (rw): Selects how the specified match and I/O condition are used and combined.
0x40085304 C   FIELD 14w01 STATELD (rw): This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.
0x40085304 C   FIELD 15w05 STATEV (rw): This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value.
0x40085304 C   FIELD 20w01 MATCHMEM (rw): If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value.
0x40085304 C   FIELD 21w02 DIRECTION (rw): Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.
0x40085308 B  CLUSTER EV[1]: no description available
0x40085308 B  REGISTER EV_STATE1 (rw): SCT event state register 0
0x40085308 C   FIELD 00w16 STATEMSKn (rw): If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT.
0x4008530C B  REGISTER EV_CTRL1 (rw): SCT event control register 0
0x4008530C C   FIELD 00w04 MATCHSEL (rw): Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running.
0x4008530C C   FIELD 04w01 HEVENT (rw): Select L/H counter. Do not set this bit if UNIFY = 1.
0x4008530C C   FIELD 05w01 OUTSEL (rw): Input/output select
0x4008530C C   FIELD 06w04 IOSEL (rw): Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event.
0x4008530C C   FIELD 10w02 IOCOND (rw): Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .
0x4008530C C   FIELD 12w02 COMBMODE (rw): Selects how the specified match and I/O condition are used and combined.
0x4008530C C   FIELD 14w01 STATELD (rw): This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.
0x4008530C C   FIELD 15w05 STATEV (rw): This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value.
0x4008530C C   FIELD 20w01 MATCHMEM (rw): If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value.
0x4008530C C   FIELD 21w02 DIRECTION (rw): Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.
0x40085310 B  CLUSTER EV[2]: no description available
0x40085310 B  REGISTER EV_STATE2 (rw): SCT event state register 0
0x40085310 C   FIELD 00w16 STATEMSKn (rw): If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT.
0x40085314 B  REGISTER EV_CTRL2 (rw): SCT event control register 0
0x40085314 C   FIELD 00w04 MATCHSEL (rw): Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running.
0x40085314 C   FIELD 04w01 HEVENT (rw): Select L/H counter. Do not set this bit if UNIFY = 1.
0x40085314 C   FIELD 05w01 OUTSEL (rw): Input/output select
0x40085314 C   FIELD 06w04 IOSEL (rw): Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event.
0x40085314 C   FIELD 10w02 IOCOND (rw): Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .
0x40085314 C   FIELD 12w02 COMBMODE (rw): Selects how the specified match and I/O condition are used and combined.
0x40085314 C   FIELD 14w01 STATELD (rw): This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.
0x40085314 C   FIELD 15w05 STATEV (rw): This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value.
0x40085314 C   FIELD 20w01 MATCHMEM (rw): If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value.
0x40085314 C   FIELD 21w02 DIRECTION (rw): Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.
0x40085318 B  CLUSTER EV[3]: no description available
0x40085318 B  REGISTER EV_STATE3 (rw): SCT event state register 0
0x40085318 C   FIELD 00w16 STATEMSKn (rw): If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT.
0x4008531C B  REGISTER EV_CTRL3 (rw): SCT event control register 0
0x4008531C C   FIELD 00w04 MATCHSEL (rw): Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running.
0x4008531C C   FIELD 04w01 HEVENT (rw): Select L/H counter. Do not set this bit if UNIFY = 1.
0x4008531C C   FIELD 05w01 OUTSEL (rw): Input/output select
0x4008531C C   FIELD 06w04 IOSEL (rw): Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event.
0x4008531C C   FIELD 10w02 IOCOND (rw): Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .
0x4008531C C   FIELD 12w02 COMBMODE (rw): Selects how the specified match and I/O condition are used and combined.
0x4008531C C   FIELD 14w01 STATELD (rw): This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.
0x4008531C C   FIELD 15w05 STATEV (rw): This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value.
0x4008531C C   FIELD 20w01 MATCHMEM (rw): If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value.
0x4008531C C   FIELD 21w02 DIRECTION (rw): Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.
0x40085320 B  CLUSTER EV[4]: no description available
0x40085320 B  REGISTER EV_STATE4 (rw): SCT event state register 0
0x40085320 C   FIELD 00w16 STATEMSKn (rw): If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT.
0x40085324 B  REGISTER EV_CTRL4 (rw): SCT event control register 0
0x40085324 C   FIELD 00w04 MATCHSEL (rw): Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running.
0x40085324 C   FIELD 04w01 HEVENT (rw): Select L/H counter. Do not set this bit if UNIFY = 1.
0x40085324 C   FIELD 05w01 OUTSEL (rw): Input/output select
0x40085324 C   FIELD 06w04 IOSEL (rw): Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event.
0x40085324 C   FIELD 10w02 IOCOND (rw): Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .
0x40085324 C   FIELD 12w02 COMBMODE (rw): Selects how the specified match and I/O condition are used and combined.
0x40085324 C   FIELD 14w01 STATELD (rw): This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.
0x40085324 C   FIELD 15w05 STATEV (rw): This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value.
0x40085324 C   FIELD 20w01 MATCHMEM (rw): If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value.
0x40085324 C   FIELD 21w02 DIRECTION (rw): Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.
0x40085328 B  CLUSTER EV[5]: no description available
0x40085328 B  REGISTER EV_STATE5 (rw): SCT event state register 0
0x40085328 C   FIELD 00w16 STATEMSKn (rw): If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT.
0x4008532C B  REGISTER EV_CTRL5 (rw): SCT event control register 0
0x4008532C C   FIELD 00w04 MATCHSEL (rw): Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running.
0x4008532C C   FIELD 04w01 HEVENT (rw): Select L/H counter. Do not set this bit if UNIFY = 1.
0x4008532C C   FIELD 05w01 OUTSEL (rw): Input/output select
0x4008532C C   FIELD 06w04 IOSEL (rw): Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event.
0x4008532C C   FIELD 10w02 IOCOND (rw): Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .
0x4008532C C   FIELD 12w02 COMBMODE (rw): Selects how the specified match and I/O condition are used and combined.
0x4008532C C   FIELD 14w01 STATELD (rw): This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.
0x4008532C C   FIELD 15w05 STATEV (rw): This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value.
0x4008532C C   FIELD 20w01 MATCHMEM (rw): If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value.
0x4008532C C   FIELD 21w02 DIRECTION (rw): Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.
0x40085330 B  CLUSTER EV[6]: no description available
0x40085330 B  REGISTER EV_STATE6 (rw): SCT event state register 0
0x40085330 C   FIELD 00w16 STATEMSKn (rw): If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT.
0x40085334 B  REGISTER EV_CTRL6 (rw): SCT event control register 0
0x40085334 C   FIELD 00w04 MATCHSEL (rw): Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running.
0x40085334 C   FIELD 04w01 HEVENT (rw): Select L/H counter. Do not set this bit if UNIFY = 1.
0x40085334 C   FIELD 05w01 OUTSEL (rw): Input/output select
0x40085334 C   FIELD 06w04 IOSEL (rw): Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event.
0x40085334 C   FIELD 10w02 IOCOND (rw): Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .
0x40085334 C   FIELD 12w02 COMBMODE (rw): Selects how the specified match and I/O condition are used and combined.
0x40085334 C   FIELD 14w01 STATELD (rw): This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.
0x40085334 C   FIELD 15w05 STATEV (rw): This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value.
0x40085334 C   FIELD 20w01 MATCHMEM (rw): If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value.
0x40085334 C   FIELD 21w02 DIRECTION (rw): Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.
0x40085338 B  CLUSTER EV[7]: no description available
0x40085338 B  REGISTER EV_STATE7 (rw): SCT event state register 0
0x40085338 C   FIELD 00w16 STATEMSKn (rw): If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT.
0x4008533C B  REGISTER EV_CTRL7 (rw): SCT event control register 0
0x4008533C C   FIELD 00w04 MATCHSEL (rw): Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running.
0x4008533C C   FIELD 04w01 HEVENT (rw): Select L/H counter. Do not set this bit if UNIFY = 1.
0x4008533C C   FIELD 05w01 OUTSEL (rw): Input/output select
0x4008533C C   FIELD 06w04 IOSEL (rw): Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event.
0x4008533C C   FIELD 10w02 IOCOND (rw): Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .
0x4008533C C   FIELD 12w02 COMBMODE (rw): Selects how the specified match and I/O condition are used and combined.
0x4008533C C   FIELD 14w01 STATELD (rw): This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.
0x4008533C C   FIELD 15w05 STATEV (rw): This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value.
0x4008533C C   FIELD 20w01 MATCHMEM (rw): If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value.
0x4008533C C   FIELD 21w02 DIRECTION (rw): Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.
0x40085340 B  CLUSTER EV[8]: no description available
0x40085340 B  REGISTER EV_STATE8 (rw): SCT event state register 0
0x40085340 C   FIELD 00w16 STATEMSKn (rw): If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT.
0x40085344 B  REGISTER EV_CTRL8 (rw): SCT event control register 0
0x40085344 C   FIELD 00w04 MATCHSEL (rw): Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running.
0x40085344 C   FIELD 04w01 HEVENT (rw): Select L/H counter. Do not set this bit if UNIFY = 1.
0x40085344 C   FIELD 05w01 OUTSEL (rw): Input/output select
0x40085344 C   FIELD 06w04 IOSEL (rw): Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event.
0x40085344 C   FIELD 10w02 IOCOND (rw): Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .
0x40085344 C   FIELD 12w02 COMBMODE (rw): Selects how the specified match and I/O condition are used and combined.
0x40085344 C   FIELD 14w01 STATELD (rw): This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.
0x40085344 C   FIELD 15w05 STATEV (rw): This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value.
0x40085344 C   FIELD 20w01 MATCHMEM (rw): If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value.
0x40085344 C   FIELD 21w02 DIRECTION (rw): Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.
0x40085348 B  CLUSTER EV[9]: no description available
0x40085348 B  REGISTER EV_STATE9 (rw): SCT event state register 0
0x40085348 C   FIELD 00w16 STATEMSKn (rw): If bit m is one, event n happens in state m of the counter selected by the HEVENT bit (n = event number, m = state number; state 0 = bit 0, state 1= bit 1, etc.). The number of bits = number of states in this SCT.
0x4008534C B  REGISTER EV_CTRL9 (rw): SCT event control register 0
0x4008534C C   FIELD 00w04 MATCHSEL (rw): Selects the Match register associated with this event (if any). A match can occur only when the counter selected by the HEVENT bit is running.
0x4008534C C   FIELD 04w01 HEVENT (rw): Select L/H counter. Do not set this bit if UNIFY = 1.
0x4008534C C   FIELD 05w01 OUTSEL (rw): Input/output select
0x4008534C C   FIELD 06w04 IOSEL (rw): Selects the input or output signal number associated with this event (if any). Do not select an input in this register if CKMODE is 1x. In this case the clock input is an implicit ingredient of every event.
0x4008534C C   FIELD 10w02 IOCOND (rw): Selects the I/O condition for event n. (The detection of edges on outputs lag the conditions that switch the outputs by one SCT clock). In order to guarantee proper edge/state detection, an input must have a minimum pulse width of at least one SCT clock period .
0x4008534C C   FIELD 12w02 COMBMODE (rw): Selects how the specified match and I/O condition are used and combined.
0x4008534C C   FIELD 14w01 STATELD (rw): This bit controls how the STATEV value modifies the state selected by HEVENT when this event is the highest-numbered event occurring for that state.
0x4008534C C   FIELD 15w05 STATEV (rw): This value is loaded into or added to the state selected by HEVENT, depending on STATELD, when this event is the highest-numbered event occurring for that state. If STATELD and STATEV are both zero, there is no change to the STATE value.
0x4008534C C   FIELD 20w01 MATCHMEM (rw): If this bit is one and the COMBMODE field specifies a match component to the triggering of this event, then a match is considered to be active whenever the counter value is GREATER THAN OR EQUAL TO the value specified in the match register when counting up, LESS THEN OR EQUAL TO the match value when counting down. If this bit is zero, a match is only be active during the cycle when the counter is equal to the match value.
0x4008534C C   FIELD 21w02 DIRECTION (rw): Direction qualifier for event generation. This field only applies when the counters are operating in BIDIR mode. If BIDIR = 0, the SCT ignores this field. Value 0x3 is reserved.
0x40085500 B  CLUSTER OUT[0]: no description available
0x40085500 B  REGISTER OUT_SET0 (rw): SCT output 0 set register
0x40085500 C   FIELD 00w16 SET (rw): A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085504 B  REGISTER OUT_CLR0 (rw): SCT output 0 clear register
0x40085504 C   FIELD 00w16 CLR (rw): A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085508 B  CLUSTER OUT[1]: no description available
0x40085508 B  REGISTER OUT_SET1 (rw): SCT output 0 set register
0x40085508 C   FIELD 00w16 SET (rw): A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x4008550C B  REGISTER OUT_CLR1 (rw): SCT output 0 clear register
0x4008550C C   FIELD 00w16 CLR (rw): A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085510 B  CLUSTER OUT[2]: no description available
0x40085510 B  REGISTER OUT_SET2 (rw): SCT output 0 set register
0x40085510 C   FIELD 00w16 SET (rw): A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085514 B  REGISTER OUT_CLR2 (rw): SCT output 0 clear register
0x40085514 C   FIELD 00w16 CLR (rw): A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085518 B  CLUSTER OUT[3]: no description available
0x40085518 B  REGISTER OUT_SET3 (rw): SCT output 0 set register
0x40085518 C   FIELD 00w16 SET (rw): A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x4008551C B  REGISTER OUT_CLR3 (rw): SCT output 0 clear register
0x4008551C C   FIELD 00w16 CLR (rw): A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085520 B  CLUSTER OUT[4]: no description available
0x40085520 B  REGISTER OUT_SET4 (rw): SCT output 0 set register
0x40085520 C   FIELD 00w16 SET (rw): A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085524 B  REGISTER OUT_CLR4 (rw): SCT output 0 clear register
0x40085524 C   FIELD 00w16 CLR (rw): A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085528 B  CLUSTER OUT[5]: no description available
0x40085528 B  REGISTER OUT_SET5 (rw): SCT output 0 set register
0x40085528 C   FIELD 00w16 SET (rw): A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x4008552C B  REGISTER OUT_CLR5 (rw): SCT output 0 clear register
0x4008552C C   FIELD 00w16 CLR (rw): A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085530 B  CLUSTER OUT[6]: no description available
0x40085530 B  REGISTER OUT_SET6 (rw): SCT output 0 set register
0x40085530 C   FIELD 00w16 SET (rw): A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085534 B  REGISTER OUT_CLR6 (rw): SCT output 0 clear register
0x40085534 C   FIELD 00w16 CLR (rw): A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085538 B  CLUSTER OUT[7]: no description available
0x40085538 B  REGISTER OUT_SET7 (rw): SCT output 0 set register
0x40085538 C   FIELD 00w16 SET (rw): A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x4008553C B  REGISTER OUT_CLR7 (rw): SCT output 0 clear register
0x4008553C C   FIELD 00w16 CLR (rw): A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085540 B  CLUSTER OUT[8]: no description available
0x40085540 B  REGISTER OUT_SET8 (rw): SCT output 0 set register
0x40085540 C   FIELD 00w16 SET (rw): A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085544 B  REGISTER OUT_CLR8 (rw): SCT output 0 clear register
0x40085544 C   FIELD 00w16 CLR (rw): A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40085548 B  CLUSTER OUT[9]: no description available
0x40085548 B  REGISTER OUT_SET9 (rw): SCT output 0 set register
0x40085548 C   FIELD 00w16 SET (rw): A 1 in bit m selects event m to set output n (or clear it if SETCLRn = 0x1 or 0x2) output 0 = bit 0, output 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x4008554C B  REGISTER OUT_CLR9 (rw): SCT output 0 clear register
0x4008554C C   FIELD 00w16 CLR (rw): A 1 in bit m selects event m to clear output n (or set it if SETCLRn = 0x1 or 0x2) event 0 = bit 0, event 1 = bit 1, etc. The number of bits = number of events in this SCT. When the counter is used in bi-directional mode, it is possible to reverse the action specified by the output set and clear registers when counting down, See the OUTPUTCTRL register.
0x40086000 A PERIPHERAL FLEXCOMM0
0x40086000 A PERIPHERAL I2C0
0x40086000 A PERIPHERAL SPI0
0x40086000 A PERIPHERAL USART0
0x40086000 B  REGISTER CFG (rw): USART Configuration register. Basic USART configuration settings that typically are not changed during operation.
0x40086000 C   FIELD 00w01 ENABLE (rw): USART Enable.
0x40086000 C   FIELD 02w02 DATALEN (rw): Selects the data size for the USART.
0x40086000 C   FIELD 04w02 PARITYSEL (rw): Selects what type of parity is used by the USART.
0x40086000 C   FIELD 06w01 STOPLEN (rw): Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.
0x40086000 C   FIELD 07w01 MODE32K (rw): Selects standard or 32 kHz clocking mode.
0x40086000 C   FIELD 08w01 LINMODE (rw): LIN break mode enable.
0x40086000 C   FIELD 09w01 CTSEN (rw): CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.
0x40086000 C   FIELD 11w01 SYNCEN (rw): Selects synchronous or asynchronous operation.
0x40086000 C   FIELD 12w01 CLKPOL (rw): Selects the clock polarity and sampling edge of received data in synchronous mode.
0x40086000 C   FIELD 14w01 SYNCMST (rw): Synchronous mode Master select.
0x40086000 C   FIELD 15w01 LOOP (rw): Selects data loopback mode.
0x40086000 C   FIELD 18w01 OETA (rw): Output Enable Turnaround time enable for RS-485 operation.
0x40086000 C   FIELD 19w01 AUTOADDR (rw): Automatic Address matching enable.
0x40086000 C   FIELD 20w01 OESEL (rw): Output Enable Select.
0x40086000 C   FIELD 21w01 OEPOL (rw): Output Enable Polarity.
0x40086000 C   FIELD 22w01 RXPOL (rw): Receive data polarity.
0x40086000 C   FIELD 23w01 TXPOL (rw): Transmit data polarity.
0x40086004 B  REGISTER CTL (rw): USART Control register. USART control settings that are more likely to change during operation.
0x40086004 C   FIELD 01w01 TXBRKEN (rw): Break Enable.
0x40086004 C   FIELD 02w01 ADDRDET (rw): Enable address detect mode.
0x40086004 C   FIELD 06w01 TXDIS (rw): Transmit Disable.
0x40086004 C   FIELD 08w01 CC (rw): Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.
0x40086004 C   FIELD 09w01 CLRCCONRX (rw): Clear Continuous Clock.
0x40086004 C   FIELD 16w01 AUTOBAUD (rw): Autobaud enable.
0x40086008 B  REGISTER STAT (rw): USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them.
0x40086008 C   FIELD 01w01 RXIDLE (ro): Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data.
0x40086008 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data.
0x40086008 C   FIELD 04w01 CTS (ro): This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled.
0x40086008 C   FIELD 05w01 DELTACTS (rw): This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software.
0x40086008 C   FIELD 06w01 TXDISSTAT (ro): Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1).
0x40086008 C   FIELD 10w01 RXBRK (ro): Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high.
0x40086008 C   FIELD 11w01 DELTARXBRK (rw): This bit is set when a change in the state of receiver break detection occurs. Cleared by software.
0x40086008 C   FIELD 12w01 START (rw): This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software.
0x40086008 C   FIELD 13w01 FRAMERRINT (rw): Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40086008 C   FIELD 14w01 PARITYERRINT (rw): Parity Error interrupt flag. This flag is set when a parity error is detected in a received character.
0x40086008 C   FIELD 15w01 RXNOISEINT (rw): Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception.
0x40086008 C   FIELD 16w01 ABERR (rw): Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out.
0x4008600C B  REGISTER INTENSET (rw): Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4008600C C   FIELD 03w01 TXIDLEEN (rw): When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1).
0x4008600C C   FIELD 05w01 DELTACTSEN (rw): When 1, enables an interrupt when there is a change in the state of the CTS input.
0x4008600C C   FIELD 06w01 TXDISEN (rw): When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details.
0x4008600C C   FIELD 11w01 DELTARXBRKEN (rw): When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted).
0x4008600C C   FIELD 12w01 STARTEN (rw): When 1, enables an interrupt when a received start bit has been detected.
0x4008600C C   FIELD 13w01 FRAMERREN (rw): When 1, enables an interrupt when a framing error has been detected.
0x4008600C C   FIELD 14w01 PARITYERREN (rw): When 1, enables an interrupt when a parity error has been detected.
0x4008600C C   FIELD 15w01 RXNOISEEN (rw): When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354.
0x4008600C C   FIELD 16w01 ABERREN (rw): When 1, enables an interrupt when an auto baud error occurs.
0x40086010 B  REGISTER INTENCLR (wo): Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared.
0x40086010 C   FIELD 03w01 TXIDLECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086010 C   FIELD 05w01 DELTACTSCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086010 C   FIELD 06w01 TXDISCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086010 C   FIELD 11w01 DELTARXBRKCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086010 C   FIELD 12w01 STARTCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086010 C   FIELD 13w01 FRAMERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086010 C   FIELD 14w01 PARITYERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086010 C   FIELD 15w01 RXNOISECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086010 C   FIELD 16w01 ABERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086020 B  REGISTER BRG (rw): Baud Rate Generator register. 16-bit integer baud rate divisor value.
0x40086020 C   FIELD 00w16 BRGVAL (rw): This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function.
0x40086024 B  REGISTER INTSTAT (ro): Interrupt status register. Reflects interrupts that are currently enabled.
0x40086024 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle status.
0x40086024 C   FIELD 05w01 DELTACTS (ro): This bit is set when a change in the state of the CTS input is detected.
0x40086024 C   FIELD 06w01 TXDISINT (ro): Transmitter Disabled Interrupt flag.
0x40086024 C   FIELD 11w01 DELTARXBRK (ro): This bit is set when a change in the state of receiver break detection occurs.
0x40086024 C   FIELD 12w01 START (ro): This bit is set when a start is detected on the receiver input.
0x40086024 C   FIELD 13w01 FRAMERRINT (ro): Framing Error interrupt flag.
0x40086024 C   FIELD 14w01 PARITYERRINT (ro): Parity Error interrupt flag.
0x40086024 C   FIELD 15w01 RXNOISEINT (ro): Received Noise interrupt flag.
0x40086024 C   FIELD 16w01 ABERRINT (ro): Auto baud Error Interrupt flag.
0x40086028 B  REGISTER OSR (rw): Oversample selection register for asynchronous communication.
0x40086028 C   FIELD 00w04 OSRVAL (rw): Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit.
0x4008602C B  REGISTER ADDR (rw): Address register for automatic address matching.
0x4008602C C   FIELD 00w08 ADDRESS (rw): 8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1).
0x40086400 B  REGISTER CFG (rw): SPI Configuration register
0x40086400 C   FIELD 00w01 ENABLE (rw): SPI enable.
0x40086400 C   FIELD 02w01 MASTER (rw): Master mode select.
0x40086400 C   FIELD 03w01 LSBF (rw): LSB First mode enable.
0x40086400 C   FIELD 04w01 CPHA (rw): Clock Phase select.
0x40086400 C   FIELD 05w01 CPOL (rw): Clock Polarity select.
0x40086400 C   FIELD 07w01 LOOP (rw): Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.
0x40086400 C   FIELD 08w01 SPOL0 (rw): SSEL0 Polarity select.
0x40086400 C   FIELD 09w01 SPOL1 (rw): SSEL1 Polarity select.
0x40086400 C   FIELD 10w01 SPOL2 (rw): SSEL2 Polarity select.
0x40086400 C   FIELD 11w01 SPOL3 (rw): SSEL3 Polarity select.
0x40086404 B  REGISTER DLY (rw): SPI Delay register
0x40086404 C   FIELD 00w04 PRE_DELAY (rw): Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40086404 C   FIELD 04w04 POST_DELAY (rw): Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40086404 C   FIELD 08w04 FRAME_DELAY (rw): If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40086404 C   FIELD 12w04 TRANSFER_DELAY (rw): Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times.
0x40086408 B  REGISTER STAT (rw): SPI Status. Some status flags can be cleared by writing a 1 to that bit position.
0x40086408 C   FIELD 04w01 SSA (wo): Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software.
0x40086408 C   FIELD 05w01 SSD (wo): Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software.
0x40086408 C   FIELD 06w01 STALLED (ro): Stalled status flag. This indicates whether the SPI is currently in a stall condition.
0x40086408 C   FIELD 07w01 ENDTRANSFER (rw): End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted.
0x40086408 C   FIELD 08w01 MSTIDLE (ro): Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data.
0x4008640C B  REGISTER INTENSET (rw): SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4008640C C   FIELD 04w01 SSAEN (rw): Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.
0x4008640C C   FIELD 05w01 SSDEN (rw): Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.
0x4008640C C   FIELD 08w01 MSTIDLEEN (rw): Master idle interrupt enable.
0x40086410 B  REGISTER INTENCLR (wo): SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared.
0x40086410 C   FIELD 04w01 SSAEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086410 C   FIELD 05w01 SSDEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086410 C   FIELD 08w01 MSTIDLE (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40086424 B  REGISTER DIV (rw): SPI clock Divider
0x40086424 C   FIELD 00w16 DIVVAL (rw): Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
0x40086428 B  REGISTER INTSTAT (ro): SPI Interrupt Status
0x40086428 C   FIELD 04w01 SSA (ro): Slave Select Assert.
0x40086428 C   FIELD 05w01 SSD (ro): Slave Select Deassert.
0x40086428 C   FIELD 08w01 MSTIDLE (ro): Master Idle status flag.
0x40086800 B  REGISTER CFG (rw): Configuration for shared functions.
0x40086800 C   FIELD 00w01 MSTEN (rw): Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.
0x40086800 C   FIELD 01w01 SLVEN (rw): Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.
0x40086800 C   FIELD 02w01 MONEN (rw): Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.
0x40086800 C   FIELD 03w01 TIMEOUTEN (rw): I2C bus Time-out Enable. When disabled, the time-out function is internally reset.
0x40086800 C   FIELD 04w01 MONCLKSTR (rw): Monitor function Clock Stretching.
0x40086800 C   FIELD 05w01 HSCAPABLE (rw): High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.
0x40086804 B  REGISTER STAT (rw): Status register for Master, Slave, and Monitor functions.
0x40086804 C   FIELD 00w01 MSTPENDING (ro): Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.
0x40086804 C   FIELD 01w03 MSTSTATE (ro): Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.
0x40086804 C   FIELD 04w01 MSTARBLOSS (rw): Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40086804 C   FIELD 06w01 MSTSTSTPERR (rw): Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40086804 C   FIELD 08w01 SLVPENDING (ro): Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.
0x40086804 C   FIELD 09w02 SLVSTATE (ro): Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.
0x40086804 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.
0x40086804 C   FIELD 12w02 SLVIDX (ro): Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.
0x40086804 C   FIELD 14w01 SLVSEL (ro): Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.
0x40086804 C   FIELD 15w01 SLVDESEL (rw): Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
0x40086804 C   FIELD 16w01 MONRDY (ro): Monitor Ready. This flag is cleared when the MONRXDAT register is read.
0x40086804 C   FIELD 17w01 MONOV (rw): Monitor Overflow flag.
0x40086804 C   FIELD 18w01 MONACTIVE (ro): Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.
0x40086804 C   FIELD 19w01 MONIDLE (rw): Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.
0x40086804 C   FIELD 24w01 EVENTTIMEOUT (rw): Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.
0x40086804 C   FIELD 25w01 SCLTIMEOUT (rw): SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.
0x40086808 B  REGISTER INTENSET (rw): Interrupt Enable Set and read register.
0x40086808 C   FIELD 00w01 MSTPENDINGEN (rw): Master Pending interrupt Enable.
0x40086808 C   FIELD 04w01 MSTARBLOSSEN (rw): Master Arbitration Loss interrupt Enable.
0x40086808 C   FIELD 06w01 MSTSTSTPERREN (rw): Master Start/Stop Error interrupt Enable.
0x40086808 C   FIELD 08w01 SLVPENDINGEN (rw): Slave Pending interrupt Enable.
0x40086808 C   FIELD 11w01 SLVNOTSTREN (rw): Slave Not Stretching interrupt Enable.
0x40086808 C   FIELD 15w01 SLVDESELEN (rw): Slave Deselect interrupt Enable.
0x40086808 C   FIELD 16w01 MONRDYEN (rw): Monitor data Ready interrupt Enable.
0x40086808 C   FIELD 17w01 MONOVEN (rw): Monitor Overrun interrupt Enable.
0x40086808 C   FIELD 19w01 MONIDLEEN (rw): Monitor Idle interrupt Enable.
0x40086808 C   FIELD 24w01 EVENTTIMEOUTEN (rw): Event time-out interrupt Enable.
0x40086808 C   FIELD 25w01 SCLTIMEOUTEN (rw): SCL time-out interrupt Enable.
0x4008680C B  REGISTER INTENCLR (wo): Interrupt Enable Clear register.
0x4008680C C   FIELD 00w01 MSTPENDINGCLR (wo): Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented.
0x4008680C C   FIELD 04w01 MSTARBLOSSCLR (wo): Master Arbitration Loss interrupt clear.
0x4008680C C   FIELD 06w01 MSTSTSTPERRCLR (wo): Master Start/Stop Error interrupt clear.
0x4008680C C   FIELD 08w01 SLVPENDINGCLR (wo): Slave Pending interrupt clear.
0x4008680C C   FIELD 11w01 SLVNOTSTRCLR (wo): Slave Not Stretching interrupt clear.
0x4008680C C   FIELD 15w01 SLVDESELCLR (wo): Slave Deselect interrupt clear.
0x4008680C C   FIELD 16w01 MONRDYCLR (wo): Monitor data Ready interrupt clear.
0x4008680C C   FIELD 17w01 MONOVCLR (wo): Monitor Overrun interrupt clear.
0x4008680C C   FIELD 19w01 MONIDLECLR (wo): Monitor Idle interrupt clear.
0x4008680C C   FIELD 24w01 EVENTTIMEOUTCLR (wo): Event time-out interrupt clear.
0x4008680C C   FIELD 25w01 SCLTIMEOUTCLR (wo): SCL time-out interrupt clear.
0x40086810 B  REGISTER TIMEOUT (rw): Time-out value register.
0x40086810 C   FIELD 00w04 TOMIN (rw): Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks.
0x40086810 C   FIELD 04w12 TO (rw): Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock.
0x40086814 B  REGISTER CLKDIV (rw): Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function.
0x40086814 C   FIELD 00w16 DIVVAL (rw): This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use.
0x40086818 B  REGISTER INTSTAT (ro): Interrupt Status register for Master, Slave, and Monitor functions.
0x40086818 C   FIELD 00w01 MSTPENDING (ro): Master Pending.
0x40086818 C   FIELD 04w01 MSTARBLOSS (ro): Master Arbitration Loss flag.
0x40086818 C   FIELD 06w01 MSTSTSTPERR (ro): Master Start/Stop Error flag.
0x40086818 C   FIELD 08w01 SLVPENDING (ro): Slave Pending.
0x40086818 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching status.
0x40086818 C   FIELD 15w01 SLVDESEL (ro): Slave Deselected flag.
0x40086818 C   FIELD 16w01 MONRDY (ro): Monitor Ready.
0x40086818 C   FIELD 17w01 MONOV (ro): Monitor Overflow flag.
0x40086818 C   FIELD 19w01 MONIDLE (ro): Monitor Idle flag.
0x40086818 C   FIELD 24w01 EVENTTIMEOUT (ro): Event time-out Interrupt flag.
0x40086818 C   FIELD 25w01 SCLTIMEOUT (ro): SCL time-out Interrupt flag.
0x40086820 B  REGISTER MSTCTL (rw): Master control register.
0x40086820 C   FIELD 00w01 MSTCONTINUE (wo): Master Continue. This bit is write-only.
0x40086820 C   FIELD 01w01 MSTSTART (rw): Master Start control. This bit is write-only.
0x40086820 C   FIELD 02w01 MSTSTOP (rw): Master Stop control. This bit is write-only.
0x40086820 C   FIELD 03w01 MSTDMA (rw): Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.
0x40086824 B  REGISTER MSTTIME (rw): Master timing configuration.
0x40086824 C   FIELD 00w03 MSTSCLLOW (rw): Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.
0x40086824 C   FIELD 04w03 MSTSCLHIGH (rw): Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.
0x40086828 B  REGISTER MSTDAT (rw): Combined Master receiver and transmitter data register.
0x40086828 C   FIELD 00w08 DATA (rw): Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function.
0x40086840 B  REGISTER SLVCTL (rw): Slave control register.
0x40086840 C   FIELD 00w01 SLVCONTINUE (rw): Slave Continue.
0x40086840 C   FIELD 01w01 SLVNACK (rw): Slave NACK.
0x40086840 C   FIELD 03w01 SLVDMA (rw): Slave DMA enable.
0x40086840 C   FIELD 08w01 AUTOACK (rw): Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.
0x40086840 C   FIELD 09w01 AUTOMATCHREAD (rw): When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.
0x40086844 B  REGISTER SLVDAT (rw): Combined Slave receiver and transmitter data register.
0x40086844 C   FIELD 00w08 DATA (rw): Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function.
0x40086848 B  REGISTER SLVADR[0] (rw): Slave address register.
0x40086848 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40086848 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40086848 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4008684C B  REGISTER SLVADR[1] (rw): Slave address register.
0x4008684C C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4008684C C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4008684C C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40086850 B  REGISTER SLVADR[2] (rw): Slave address register.
0x40086850 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40086850 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40086850 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40086854 B  REGISTER SLVADR[3] (rw): Slave address register.
0x40086854 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40086854 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40086854 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40086858 B  REGISTER SLVQUAL0 (rw): Slave Qualification for address 0.
0x40086858 C   FIELD 00w01 QUALMODE0 (rw): Qualify mode for slave address 0.
0x40086858 C   FIELD 01w07 SLVQUAL0 (rw): Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] <= received address <= SLVQUAL0[7:1]).
0x40086880 B  REGISTER MONRXDAT (ro): Monitor receiver data register.
0x40086880 C   FIELD 00w08 MONRXDAT (ro): Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins.
0x40086880 C   FIELD 08w01 MONSTART (ro): Monitor Received Start.
0x40086880 C   FIELD 09w01 MONRESTART (ro): Monitor Received Repeated Start.
0x40086880 C   FIELD 10w01 MONNACK (ro): Monitor Received NACK.
0x40086E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40086E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40086E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40086E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40086E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40086E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40086E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40086E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40086E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40086E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40086E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40086E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40086E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40086E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40086E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40086E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40086E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40086E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40086E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40086E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40086E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40086E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40086E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40086E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40086E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40086E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40086E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40086E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40086E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40086E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40086E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40086E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40086E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40086E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40086E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40086E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40086E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40086E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40086E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40086E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40086E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40086E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40086E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40086E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40086E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40086E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40086E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40086E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40086E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40086E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40086E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40086E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40086E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40086E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40086E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40086E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40086E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40086E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40086E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40086E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40086E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40086E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40086E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40086E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40086E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40086E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40086E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40086E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40086E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40086E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40086E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40086E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40086E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40086E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40086E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40086E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40086E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40086E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40086E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40086E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40086E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40086E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40086E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40086E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40086E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40086E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40086E20 C   FIELD 00w09 TXDATA (rw): Transmit data to the FIFO.
0x40086E20 C   FIELD 00w16 TXDATA (rw): Transmit data to the FIFO.
0x40086E20 C   FIELD 16w01 TXSSEL0_N (wo): Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.
0x40086E20 C   FIELD 17w01 TXSSEL1_N (wo): Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.
0x40086E20 C   FIELD 18w01 TXSSEL2_N (wo): Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.
0x40086E20 C   FIELD 19w01 TXSSEL3_N (wo): Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.
0x40086E20 C   FIELD 20w01 EOT (wo): End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.
0x40086E20 C   FIELD 21w01 EOF (wo): End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.
0x40086E20 C   FIELD 22w01 RXIGNORE (wo): Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.
0x40086E20 C   FIELD 24w04 LEN (wo): Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length.
0x40086E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40086E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40086E30 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40086E30 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40086E30 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40086E30 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40086E30 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40086E30 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40086E30 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40086E30 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40086E30 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40086E30 C   FIELD 20w01 SOT (ro): Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits.
0x40086E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40086E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40086E40 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40086E40 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40086E40 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40086E40 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40086E40 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40086E40 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive.
0x40086E40 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive.
0x40086E40 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive.
0x40086E40 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive.
0x40086E40 C   FIELD 20w01 SOT (ro): Start of transfer flag.
0x40086FF8 B  REGISTER PSELID (rw): Peripheral Select and Flexcomm ID register.
0x40086FF8 C   FIELD 00w03 PERSEL (rw): Peripheral Select. This field is writable by software.
0x40086FF8 C   FIELD 03w01 LOCK (rw): Lock the peripheral select. This field is writable by software.
0x40086FF8 C   FIELD 04w01 USARTPRESENT (ro): USART present indicator. This field is Read-only.
0x40086FF8 C   FIELD 05w01 SPIPRESENT (ro): SPI present indicator. This field is Read-only.
0x40086FF8 C   FIELD 06w01 I2CPRESENT (ro): I2C present indicator. This field is Read-only.
0x40086FF8 C   FIELD 07w01 I2SPRESENT (ro): I 2S present indicator. This field is Read-only.
0x40086FF8 C   FIELD 12w20 ID (ro): Flexcomm ID.
0x40086FFC B  REGISTER ID (ro): Peripheral identification register.
0x40086FFC B  REGISTER ID (ro): Peripheral identification register.
0x40086FFC B  REGISTER ID (ro): Peripheral identification register.
0x40086FFC B  REGISTER PID (rw): Peripheral identification register.
0x40086FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40086FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40086FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40086FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40086FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40086FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40086FFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation.
0x40086FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40086FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40086FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40086FFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation.
0x40086FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40086FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40086FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40086FFC C   FIELD 16w16 ID (rw): Module identifier for the selected function.
0x40087000 A PERIPHERAL FLEXCOMM1
0x40087000 A PERIPHERAL I2C1
0x40087000 A PERIPHERAL SPI1
0x40087000 A PERIPHERAL USART1
0x40087000 B  REGISTER CFG (rw): USART Configuration register. Basic USART configuration settings that typically are not changed during operation.
0x40087000 C   FIELD 00w01 ENABLE (rw): USART Enable.
0x40087000 C   FIELD 02w02 DATALEN (rw): Selects the data size for the USART.
0x40087000 C   FIELD 04w02 PARITYSEL (rw): Selects what type of parity is used by the USART.
0x40087000 C   FIELD 06w01 STOPLEN (rw): Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.
0x40087000 C   FIELD 07w01 MODE32K (rw): Selects standard or 32 kHz clocking mode.
0x40087000 C   FIELD 08w01 LINMODE (rw): LIN break mode enable.
0x40087000 C   FIELD 09w01 CTSEN (rw): CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.
0x40087000 C   FIELD 11w01 SYNCEN (rw): Selects synchronous or asynchronous operation.
0x40087000 C   FIELD 12w01 CLKPOL (rw): Selects the clock polarity and sampling edge of received data in synchronous mode.
0x40087000 C   FIELD 14w01 SYNCMST (rw): Synchronous mode Master select.
0x40087000 C   FIELD 15w01 LOOP (rw): Selects data loopback mode.
0x40087000 C   FIELD 18w01 OETA (rw): Output Enable Turnaround time enable for RS-485 operation.
0x40087000 C   FIELD 19w01 AUTOADDR (rw): Automatic Address matching enable.
0x40087000 C   FIELD 20w01 OESEL (rw): Output Enable Select.
0x40087000 C   FIELD 21w01 OEPOL (rw): Output Enable Polarity.
0x40087000 C   FIELD 22w01 RXPOL (rw): Receive data polarity.
0x40087000 C   FIELD 23w01 TXPOL (rw): Transmit data polarity.
0x40087004 B  REGISTER CTL (rw): USART Control register. USART control settings that are more likely to change during operation.
0x40087004 C   FIELD 01w01 TXBRKEN (rw): Break Enable.
0x40087004 C   FIELD 02w01 ADDRDET (rw): Enable address detect mode.
0x40087004 C   FIELD 06w01 TXDIS (rw): Transmit Disable.
0x40087004 C   FIELD 08w01 CC (rw): Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.
0x40087004 C   FIELD 09w01 CLRCCONRX (rw): Clear Continuous Clock.
0x40087004 C   FIELD 16w01 AUTOBAUD (rw): Autobaud enable.
0x40087008 B  REGISTER STAT (rw): USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them.
0x40087008 C   FIELD 01w01 RXIDLE (ro): Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data.
0x40087008 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data.
0x40087008 C   FIELD 04w01 CTS (ro): This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled.
0x40087008 C   FIELD 05w01 DELTACTS (rw): This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software.
0x40087008 C   FIELD 06w01 TXDISSTAT (ro): Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1).
0x40087008 C   FIELD 10w01 RXBRK (ro): Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high.
0x40087008 C   FIELD 11w01 DELTARXBRK (rw): This bit is set when a change in the state of receiver break detection occurs. Cleared by software.
0x40087008 C   FIELD 12w01 START (rw): This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software.
0x40087008 C   FIELD 13w01 FRAMERRINT (rw): Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40087008 C   FIELD 14w01 PARITYERRINT (rw): Parity Error interrupt flag. This flag is set when a parity error is detected in a received character.
0x40087008 C   FIELD 15w01 RXNOISEINT (rw): Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception.
0x40087008 C   FIELD 16w01 ABERR (rw): Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out.
0x4008700C B  REGISTER INTENSET (rw): Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4008700C C   FIELD 03w01 TXIDLEEN (rw): When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1).
0x4008700C C   FIELD 05w01 DELTACTSEN (rw): When 1, enables an interrupt when there is a change in the state of the CTS input.
0x4008700C C   FIELD 06w01 TXDISEN (rw): When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details.
0x4008700C C   FIELD 11w01 DELTARXBRKEN (rw): When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted).
0x4008700C C   FIELD 12w01 STARTEN (rw): When 1, enables an interrupt when a received start bit has been detected.
0x4008700C C   FIELD 13w01 FRAMERREN (rw): When 1, enables an interrupt when a framing error has been detected.
0x4008700C C   FIELD 14w01 PARITYERREN (rw): When 1, enables an interrupt when a parity error has been detected.
0x4008700C C   FIELD 15w01 RXNOISEEN (rw): When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354.
0x4008700C C   FIELD 16w01 ABERREN (rw): When 1, enables an interrupt when an auto baud error occurs.
0x40087010 B  REGISTER INTENCLR (wo): Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared.
0x40087010 C   FIELD 03w01 TXIDLECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087010 C   FIELD 05w01 DELTACTSCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087010 C   FIELD 06w01 TXDISCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087010 C   FIELD 11w01 DELTARXBRKCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087010 C   FIELD 12w01 STARTCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087010 C   FIELD 13w01 FRAMERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087010 C   FIELD 14w01 PARITYERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087010 C   FIELD 15w01 RXNOISECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087010 C   FIELD 16w01 ABERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087020 B  REGISTER BRG (rw): Baud Rate Generator register. 16-bit integer baud rate divisor value.
0x40087020 C   FIELD 00w16 BRGVAL (rw): This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function.
0x40087024 B  REGISTER INTSTAT (ro): Interrupt status register. Reflects interrupts that are currently enabled.
0x40087024 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle status.
0x40087024 C   FIELD 05w01 DELTACTS (ro): This bit is set when a change in the state of the CTS input is detected.
0x40087024 C   FIELD 06w01 TXDISINT (ro): Transmitter Disabled Interrupt flag.
0x40087024 C   FIELD 11w01 DELTARXBRK (ro): This bit is set when a change in the state of receiver break detection occurs.
0x40087024 C   FIELD 12w01 START (ro): This bit is set when a start is detected on the receiver input.
0x40087024 C   FIELD 13w01 FRAMERRINT (ro): Framing Error interrupt flag.
0x40087024 C   FIELD 14w01 PARITYERRINT (ro): Parity Error interrupt flag.
0x40087024 C   FIELD 15w01 RXNOISEINT (ro): Received Noise interrupt flag.
0x40087024 C   FIELD 16w01 ABERRINT (ro): Auto baud Error Interrupt flag.
0x40087028 B  REGISTER OSR (rw): Oversample selection register for asynchronous communication.
0x40087028 C   FIELD 00w04 OSRVAL (rw): Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit.
0x4008702C B  REGISTER ADDR (rw): Address register for automatic address matching.
0x4008702C C   FIELD 00w08 ADDRESS (rw): 8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1).
0x40087400 B  REGISTER CFG (rw): SPI Configuration register
0x40087400 C   FIELD 00w01 ENABLE (rw): SPI enable.
0x40087400 C   FIELD 02w01 MASTER (rw): Master mode select.
0x40087400 C   FIELD 03w01 LSBF (rw): LSB First mode enable.
0x40087400 C   FIELD 04w01 CPHA (rw): Clock Phase select.
0x40087400 C   FIELD 05w01 CPOL (rw): Clock Polarity select.
0x40087400 C   FIELD 07w01 LOOP (rw): Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.
0x40087400 C   FIELD 08w01 SPOL0 (rw): SSEL0 Polarity select.
0x40087400 C   FIELD 09w01 SPOL1 (rw): SSEL1 Polarity select.
0x40087400 C   FIELD 10w01 SPOL2 (rw): SSEL2 Polarity select.
0x40087400 C   FIELD 11w01 SPOL3 (rw): SSEL3 Polarity select.
0x40087404 B  REGISTER DLY (rw): SPI Delay register
0x40087404 C   FIELD 00w04 PRE_DELAY (rw): Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40087404 C   FIELD 04w04 POST_DELAY (rw): Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40087404 C   FIELD 08w04 FRAME_DELAY (rw): If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40087404 C   FIELD 12w04 TRANSFER_DELAY (rw): Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times.
0x40087408 B  REGISTER STAT (rw): SPI Status. Some status flags can be cleared by writing a 1 to that bit position.
0x40087408 C   FIELD 04w01 SSA (wo): Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software.
0x40087408 C   FIELD 05w01 SSD (wo): Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software.
0x40087408 C   FIELD 06w01 STALLED (ro): Stalled status flag. This indicates whether the SPI is currently in a stall condition.
0x40087408 C   FIELD 07w01 ENDTRANSFER (rw): End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted.
0x40087408 C   FIELD 08w01 MSTIDLE (ro): Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data.
0x4008740C B  REGISTER INTENSET (rw): SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4008740C C   FIELD 04w01 SSAEN (rw): Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.
0x4008740C C   FIELD 05w01 SSDEN (rw): Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.
0x4008740C C   FIELD 08w01 MSTIDLEEN (rw): Master idle interrupt enable.
0x40087410 B  REGISTER INTENCLR (wo): SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared.
0x40087410 C   FIELD 04w01 SSAEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087410 C   FIELD 05w01 SSDEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087410 C   FIELD 08w01 MSTIDLE (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40087424 B  REGISTER DIV (rw): SPI clock Divider
0x40087424 C   FIELD 00w16 DIVVAL (rw): Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
0x40087428 B  REGISTER INTSTAT (ro): SPI Interrupt Status
0x40087428 C   FIELD 04w01 SSA (ro): Slave Select Assert.
0x40087428 C   FIELD 05w01 SSD (ro): Slave Select Deassert.
0x40087428 C   FIELD 08w01 MSTIDLE (ro): Master Idle status flag.
0x40087800 B  REGISTER CFG (rw): Configuration for shared functions.
0x40087800 C   FIELD 00w01 MSTEN (rw): Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.
0x40087800 C   FIELD 01w01 SLVEN (rw): Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.
0x40087800 C   FIELD 02w01 MONEN (rw): Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.
0x40087800 C   FIELD 03w01 TIMEOUTEN (rw): I2C bus Time-out Enable. When disabled, the time-out function is internally reset.
0x40087800 C   FIELD 04w01 MONCLKSTR (rw): Monitor function Clock Stretching.
0x40087800 C   FIELD 05w01 HSCAPABLE (rw): High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.
0x40087804 B  REGISTER STAT (rw): Status register for Master, Slave, and Monitor functions.
0x40087804 C   FIELD 00w01 MSTPENDING (ro): Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.
0x40087804 C   FIELD 01w03 MSTSTATE (ro): Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.
0x40087804 C   FIELD 04w01 MSTARBLOSS (rw): Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40087804 C   FIELD 06w01 MSTSTSTPERR (rw): Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40087804 C   FIELD 08w01 SLVPENDING (ro): Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.
0x40087804 C   FIELD 09w02 SLVSTATE (ro): Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.
0x40087804 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.
0x40087804 C   FIELD 12w02 SLVIDX (ro): Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.
0x40087804 C   FIELD 14w01 SLVSEL (ro): Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.
0x40087804 C   FIELD 15w01 SLVDESEL (rw): Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
0x40087804 C   FIELD 16w01 MONRDY (ro): Monitor Ready. This flag is cleared when the MONRXDAT register is read.
0x40087804 C   FIELD 17w01 MONOV (rw): Monitor Overflow flag.
0x40087804 C   FIELD 18w01 MONACTIVE (ro): Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.
0x40087804 C   FIELD 19w01 MONIDLE (rw): Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.
0x40087804 C   FIELD 24w01 EVENTTIMEOUT (rw): Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.
0x40087804 C   FIELD 25w01 SCLTIMEOUT (rw): SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.
0x40087808 B  REGISTER INTENSET (rw): Interrupt Enable Set and read register.
0x40087808 C   FIELD 00w01 MSTPENDINGEN (rw): Master Pending interrupt Enable.
0x40087808 C   FIELD 04w01 MSTARBLOSSEN (rw): Master Arbitration Loss interrupt Enable.
0x40087808 C   FIELD 06w01 MSTSTSTPERREN (rw): Master Start/Stop Error interrupt Enable.
0x40087808 C   FIELD 08w01 SLVPENDINGEN (rw): Slave Pending interrupt Enable.
0x40087808 C   FIELD 11w01 SLVNOTSTREN (rw): Slave Not Stretching interrupt Enable.
0x40087808 C   FIELD 15w01 SLVDESELEN (rw): Slave Deselect interrupt Enable.
0x40087808 C   FIELD 16w01 MONRDYEN (rw): Monitor data Ready interrupt Enable.
0x40087808 C   FIELD 17w01 MONOVEN (rw): Monitor Overrun interrupt Enable.
0x40087808 C   FIELD 19w01 MONIDLEEN (rw): Monitor Idle interrupt Enable.
0x40087808 C   FIELD 24w01 EVENTTIMEOUTEN (rw): Event time-out interrupt Enable.
0x40087808 C   FIELD 25w01 SCLTIMEOUTEN (rw): SCL time-out interrupt Enable.
0x4008780C B  REGISTER INTENCLR (wo): Interrupt Enable Clear register.
0x4008780C C   FIELD 00w01 MSTPENDINGCLR (wo): Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented.
0x4008780C C   FIELD 04w01 MSTARBLOSSCLR (wo): Master Arbitration Loss interrupt clear.
0x4008780C C   FIELD 06w01 MSTSTSTPERRCLR (wo): Master Start/Stop Error interrupt clear.
0x4008780C C   FIELD 08w01 SLVPENDINGCLR (wo): Slave Pending interrupt clear.
0x4008780C C   FIELD 11w01 SLVNOTSTRCLR (wo): Slave Not Stretching interrupt clear.
0x4008780C C   FIELD 15w01 SLVDESELCLR (wo): Slave Deselect interrupt clear.
0x4008780C C   FIELD 16w01 MONRDYCLR (wo): Monitor data Ready interrupt clear.
0x4008780C C   FIELD 17w01 MONOVCLR (wo): Monitor Overrun interrupt clear.
0x4008780C C   FIELD 19w01 MONIDLECLR (wo): Monitor Idle interrupt clear.
0x4008780C C   FIELD 24w01 EVENTTIMEOUTCLR (wo): Event time-out interrupt clear.
0x4008780C C   FIELD 25w01 SCLTIMEOUTCLR (wo): SCL time-out interrupt clear.
0x40087810 B  REGISTER TIMEOUT (rw): Time-out value register.
0x40087810 C   FIELD 00w04 TOMIN (rw): Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks.
0x40087810 C   FIELD 04w12 TO (rw): Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock.
0x40087814 B  REGISTER CLKDIV (rw): Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function.
0x40087814 C   FIELD 00w16 DIVVAL (rw): This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use.
0x40087818 B  REGISTER INTSTAT (ro): Interrupt Status register for Master, Slave, and Monitor functions.
0x40087818 C   FIELD 00w01 MSTPENDING (ro): Master Pending.
0x40087818 C   FIELD 04w01 MSTARBLOSS (ro): Master Arbitration Loss flag.
0x40087818 C   FIELD 06w01 MSTSTSTPERR (ro): Master Start/Stop Error flag.
0x40087818 C   FIELD 08w01 SLVPENDING (ro): Slave Pending.
0x40087818 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching status.
0x40087818 C   FIELD 15w01 SLVDESEL (ro): Slave Deselected flag.
0x40087818 C   FIELD 16w01 MONRDY (ro): Monitor Ready.
0x40087818 C   FIELD 17w01 MONOV (ro): Monitor Overflow flag.
0x40087818 C   FIELD 19w01 MONIDLE (ro): Monitor Idle flag.
0x40087818 C   FIELD 24w01 EVENTTIMEOUT (ro): Event time-out Interrupt flag.
0x40087818 C   FIELD 25w01 SCLTIMEOUT (ro): SCL time-out Interrupt flag.
0x40087820 B  REGISTER MSTCTL (rw): Master control register.
0x40087820 C   FIELD 00w01 MSTCONTINUE (wo): Master Continue. This bit is write-only.
0x40087820 C   FIELD 01w01 MSTSTART (rw): Master Start control. This bit is write-only.
0x40087820 C   FIELD 02w01 MSTSTOP (rw): Master Stop control. This bit is write-only.
0x40087820 C   FIELD 03w01 MSTDMA (rw): Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.
0x40087824 B  REGISTER MSTTIME (rw): Master timing configuration.
0x40087824 C   FIELD 00w03 MSTSCLLOW (rw): Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.
0x40087824 C   FIELD 04w03 MSTSCLHIGH (rw): Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.
0x40087828 B  REGISTER MSTDAT (rw): Combined Master receiver and transmitter data register.
0x40087828 C   FIELD 00w08 DATA (rw): Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function.
0x40087840 B  REGISTER SLVCTL (rw): Slave control register.
0x40087840 C   FIELD 00w01 SLVCONTINUE (rw): Slave Continue.
0x40087840 C   FIELD 01w01 SLVNACK (rw): Slave NACK.
0x40087840 C   FIELD 03w01 SLVDMA (rw): Slave DMA enable.
0x40087840 C   FIELD 08w01 AUTOACK (rw): Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.
0x40087840 C   FIELD 09w01 AUTOMATCHREAD (rw): When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.
0x40087844 B  REGISTER SLVDAT (rw): Combined Slave receiver and transmitter data register.
0x40087844 C   FIELD 00w08 DATA (rw): Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function.
0x40087848 B  REGISTER SLVADR[0] (rw): Slave address register.
0x40087848 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40087848 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40087848 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4008784C B  REGISTER SLVADR[1] (rw): Slave address register.
0x4008784C C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4008784C C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4008784C C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40087850 B  REGISTER SLVADR[2] (rw): Slave address register.
0x40087850 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40087850 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40087850 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40087854 B  REGISTER SLVADR[3] (rw): Slave address register.
0x40087854 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40087854 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40087854 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40087858 B  REGISTER SLVQUAL0 (rw): Slave Qualification for address 0.
0x40087858 C   FIELD 00w01 QUALMODE0 (rw): Qualify mode for slave address 0.
0x40087858 C   FIELD 01w07 SLVQUAL0 (rw): Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] <= received address <= SLVQUAL0[7:1]).
0x40087880 B  REGISTER MONRXDAT (ro): Monitor receiver data register.
0x40087880 C   FIELD 00w08 MONRXDAT (ro): Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins.
0x40087880 C   FIELD 08w01 MONSTART (ro): Monitor Received Start.
0x40087880 C   FIELD 09w01 MONRESTART (ro): Monitor Received Repeated Start.
0x40087880 C   FIELD 10w01 MONNACK (ro): Monitor Received NACK.
0x40087E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40087E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40087E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40087E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40087E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40087E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40087E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40087E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40087E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40087E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40087E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40087E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40087E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40087E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40087E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40087E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40087E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40087E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40087E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40087E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40087E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40087E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40087E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40087E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40087E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40087E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40087E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40087E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40087E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40087E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40087E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40087E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40087E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40087E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40087E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40087E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40087E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40087E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40087E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40087E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40087E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40087E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40087E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40087E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40087E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40087E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40087E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40087E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40087E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40087E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40087E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40087E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40087E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40087E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40087E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40087E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40087E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40087E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40087E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40087E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40087E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40087E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40087E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40087E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40087E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40087E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40087E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40087E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40087E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40087E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40087E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40087E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40087E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40087E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40087E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40087E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40087E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40087E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40087E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40087E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40087E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40087E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40087E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40087E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40087E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40087E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40087E20 C   FIELD 00w09 TXDATA (rw): Transmit data to the FIFO.
0x40087E20 C   FIELD 00w16 TXDATA (rw): Transmit data to the FIFO.
0x40087E20 C   FIELD 16w01 TXSSEL0_N (wo): Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.
0x40087E20 C   FIELD 17w01 TXSSEL1_N (wo): Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.
0x40087E20 C   FIELD 18w01 TXSSEL2_N (wo): Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.
0x40087E20 C   FIELD 19w01 TXSSEL3_N (wo): Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.
0x40087E20 C   FIELD 20w01 EOT (wo): End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.
0x40087E20 C   FIELD 21w01 EOF (wo): End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.
0x40087E20 C   FIELD 22w01 RXIGNORE (wo): Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.
0x40087E20 C   FIELD 24w04 LEN (wo): Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length.
0x40087E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40087E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40087E30 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40087E30 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40087E30 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40087E30 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40087E30 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40087E30 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40087E30 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40087E30 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40087E30 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40087E30 C   FIELD 20w01 SOT (ro): Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits.
0x40087E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40087E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40087E40 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40087E40 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40087E40 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40087E40 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40087E40 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40087E40 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive.
0x40087E40 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive.
0x40087E40 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive.
0x40087E40 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive.
0x40087E40 C   FIELD 20w01 SOT (ro): Start of transfer flag.
0x40087FF8 B  REGISTER PSELID (rw): Peripheral Select and Flexcomm ID register.
0x40087FF8 C   FIELD 00w03 PERSEL (rw): Peripheral Select. This field is writable by software.
0x40087FF8 C   FIELD 03w01 LOCK (rw): Lock the peripheral select. This field is writable by software.
0x40087FF8 C   FIELD 04w01 USARTPRESENT (ro): USART present indicator. This field is Read-only.
0x40087FF8 C   FIELD 05w01 SPIPRESENT (ro): SPI present indicator. This field is Read-only.
0x40087FF8 C   FIELD 06w01 I2CPRESENT (ro): I2C present indicator. This field is Read-only.
0x40087FF8 C   FIELD 07w01 I2SPRESENT (ro): I 2S present indicator. This field is Read-only.
0x40087FF8 C   FIELD 12w20 ID (ro): Flexcomm ID.
0x40087FFC B  REGISTER ID (ro): Peripheral identification register.
0x40087FFC B  REGISTER ID (ro): Peripheral identification register.
0x40087FFC B  REGISTER ID (ro): Peripheral identification register.
0x40087FFC B  REGISTER PID (rw): Peripheral identification register.
0x40087FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40087FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40087FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40087FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40087FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40087FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40087FFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation.
0x40087FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40087FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40087FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40087FFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation.
0x40087FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40087FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40087FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40087FFC C   FIELD 16w16 ID (rw): Module identifier for the selected function.
0x40088000 A PERIPHERAL FLEXCOMM2
0x40088000 A PERIPHERAL I2C2
0x40088000 A PERIPHERAL SPI2
0x40088000 A PERIPHERAL USART2
0x40088000 B  REGISTER CFG (rw): USART Configuration register. Basic USART configuration settings that typically are not changed during operation.
0x40088000 C   FIELD 00w01 ENABLE (rw): USART Enable.
0x40088000 C   FIELD 02w02 DATALEN (rw): Selects the data size for the USART.
0x40088000 C   FIELD 04w02 PARITYSEL (rw): Selects what type of parity is used by the USART.
0x40088000 C   FIELD 06w01 STOPLEN (rw): Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.
0x40088000 C   FIELD 07w01 MODE32K (rw): Selects standard or 32 kHz clocking mode.
0x40088000 C   FIELD 08w01 LINMODE (rw): LIN break mode enable.
0x40088000 C   FIELD 09w01 CTSEN (rw): CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.
0x40088000 C   FIELD 11w01 SYNCEN (rw): Selects synchronous or asynchronous operation.
0x40088000 C   FIELD 12w01 CLKPOL (rw): Selects the clock polarity and sampling edge of received data in synchronous mode.
0x40088000 C   FIELD 14w01 SYNCMST (rw): Synchronous mode Master select.
0x40088000 C   FIELD 15w01 LOOP (rw): Selects data loopback mode.
0x40088000 C   FIELD 18w01 OETA (rw): Output Enable Turnaround time enable for RS-485 operation.
0x40088000 C   FIELD 19w01 AUTOADDR (rw): Automatic Address matching enable.
0x40088000 C   FIELD 20w01 OESEL (rw): Output Enable Select.
0x40088000 C   FIELD 21w01 OEPOL (rw): Output Enable Polarity.
0x40088000 C   FIELD 22w01 RXPOL (rw): Receive data polarity.
0x40088000 C   FIELD 23w01 TXPOL (rw): Transmit data polarity.
0x40088004 B  REGISTER CTL (rw): USART Control register. USART control settings that are more likely to change during operation.
0x40088004 C   FIELD 01w01 TXBRKEN (rw): Break Enable.
0x40088004 C   FIELD 02w01 ADDRDET (rw): Enable address detect mode.
0x40088004 C   FIELD 06w01 TXDIS (rw): Transmit Disable.
0x40088004 C   FIELD 08w01 CC (rw): Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.
0x40088004 C   FIELD 09w01 CLRCCONRX (rw): Clear Continuous Clock.
0x40088004 C   FIELD 16w01 AUTOBAUD (rw): Autobaud enable.
0x40088008 B  REGISTER STAT (rw): USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them.
0x40088008 C   FIELD 01w01 RXIDLE (ro): Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data.
0x40088008 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data.
0x40088008 C   FIELD 04w01 CTS (ro): This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled.
0x40088008 C   FIELD 05w01 DELTACTS (rw): This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software.
0x40088008 C   FIELD 06w01 TXDISSTAT (ro): Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1).
0x40088008 C   FIELD 10w01 RXBRK (ro): Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high.
0x40088008 C   FIELD 11w01 DELTARXBRK (rw): This bit is set when a change in the state of receiver break detection occurs. Cleared by software.
0x40088008 C   FIELD 12w01 START (rw): This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software.
0x40088008 C   FIELD 13w01 FRAMERRINT (rw): Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40088008 C   FIELD 14w01 PARITYERRINT (rw): Parity Error interrupt flag. This flag is set when a parity error is detected in a received character.
0x40088008 C   FIELD 15w01 RXNOISEINT (rw): Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception.
0x40088008 C   FIELD 16w01 ABERR (rw): Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out.
0x4008800C B  REGISTER INTENSET (rw): Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4008800C C   FIELD 03w01 TXIDLEEN (rw): When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1).
0x4008800C C   FIELD 05w01 DELTACTSEN (rw): When 1, enables an interrupt when there is a change in the state of the CTS input.
0x4008800C C   FIELD 06w01 TXDISEN (rw): When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details.
0x4008800C C   FIELD 11w01 DELTARXBRKEN (rw): When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted).
0x4008800C C   FIELD 12w01 STARTEN (rw): When 1, enables an interrupt when a received start bit has been detected.
0x4008800C C   FIELD 13w01 FRAMERREN (rw): When 1, enables an interrupt when a framing error has been detected.
0x4008800C C   FIELD 14w01 PARITYERREN (rw): When 1, enables an interrupt when a parity error has been detected.
0x4008800C C   FIELD 15w01 RXNOISEEN (rw): When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354.
0x4008800C C   FIELD 16w01 ABERREN (rw): When 1, enables an interrupt when an auto baud error occurs.
0x40088010 B  REGISTER INTENCLR (wo): Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared.
0x40088010 C   FIELD 03w01 TXIDLECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088010 C   FIELD 05w01 DELTACTSCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088010 C   FIELD 06w01 TXDISCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088010 C   FIELD 11w01 DELTARXBRKCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088010 C   FIELD 12w01 STARTCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088010 C   FIELD 13w01 FRAMERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088010 C   FIELD 14w01 PARITYERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088010 C   FIELD 15w01 RXNOISECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088010 C   FIELD 16w01 ABERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088020 B  REGISTER BRG (rw): Baud Rate Generator register. 16-bit integer baud rate divisor value.
0x40088020 C   FIELD 00w16 BRGVAL (rw): This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function.
0x40088024 B  REGISTER INTSTAT (ro): Interrupt status register. Reflects interrupts that are currently enabled.
0x40088024 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle status.
0x40088024 C   FIELD 05w01 DELTACTS (ro): This bit is set when a change in the state of the CTS input is detected.
0x40088024 C   FIELD 06w01 TXDISINT (ro): Transmitter Disabled Interrupt flag.
0x40088024 C   FIELD 11w01 DELTARXBRK (ro): This bit is set when a change in the state of receiver break detection occurs.
0x40088024 C   FIELD 12w01 START (ro): This bit is set when a start is detected on the receiver input.
0x40088024 C   FIELD 13w01 FRAMERRINT (ro): Framing Error interrupt flag.
0x40088024 C   FIELD 14w01 PARITYERRINT (ro): Parity Error interrupt flag.
0x40088024 C   FIELD 15w01 RXNOISEINT (ro): Received Noise interrupt flag.
0x40088024 C   FIELD 16w01 ABERRINT (ro): Auto baud Error Interrupt flag.
0x40088028 B  REGISTER OSR (rw): Oversample selection register for asynchronous communication.
0x40088028 C   FIELD 00w04 OSRVAL (rw): Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit.
0x4008802C B  REGISTER ADDR (rw): Address register for automatic address matching.
0x4008802C C   FIELD 00w08 ADDRESS (rw): 8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1).
0x40088400 B  REGISTER CFG (rw): SPI Configuration register
0x40088400 C   FIELD 00w01 ENABLE (rw): SPI enable.
0x40088400 C   FIELD 02w01 MASTER (rw): Master mode select.
0x40088400 C   FIELD 03w01 LSBF (rw): LSB First mode enable.
0x40088400 C   FIELD 04w01 CPHA (rw): Clock Phase select.
0x40088400 C   FIELD 05w01 CPOL (rw): Clock Polarity select.
0x40088400 C   FIELD 07w01 LOOP (rw): Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.
0x40088400 C   FIELD 08w01 SPOL0 (rw): SSEL0 Polarity select.
0x40088400 C   FIELD 09w01 SPOL1 (rw): SSEL1 Polarity select.
0x40088400 C   FIELD 10w01 SPOL2 (rw): SSEL2 Polarity select.
0x40088400 C   FIELD 11w01 SPOL3 (rw): SSEL3 Polarity select.
0x40088404 B  REGISTER DLY (rw): SPI Delay register
0x40088404 C   FIELD 00w04 PRE_DELAY (rw): Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40088404 C   FIELD 04w04 POST_DELAY (rw): Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40088404 C   FIELD 08w04 FRAME_DELAY (rw): If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40088404 C   FIELD 12w04 TRANSFER_DELAY (rw): Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times.
0x40088408 B  REGISTER STAT (rw): SPI Status. Some status flags can be cleared by writing a 1 to that bit position.
0x40088408 C   FIELD 04w01 SSA (wo): Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software.
0x40088408 C   FIELD 05w01 SSD (wo): Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software.
0x40088408 C   FIELD 06w01 STALLED (ro): Stalled status flag. This indicates whether the SPI is currently in a stall condition.
0x40088408 C   FIELD 07w01 ENDTRANSFER (rw): End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted.
0x40088408 C   FIELD 08w01 MSTIDLE (ro): Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data.
0x4008840C B  REGISTER INTENSET (rw): SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4008840C C   FIELD 04w01 SSAEN (rw): Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.
0x4008840C C   FIELD 05w01 SSDEN (rw): Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.
0x4008840C C   FIELD 08w01 MSTIDLEEN (rw): Master idle interrupt enable.
0x40088410 B  REGISTER INTENCLR (wo): SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared.
0x40088410 C   FIELD 04w01 SSAEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088410 C   FIELD 05w01 SSDEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088410 C   FIELD 08w01 MSTIDLE (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40088424 B  REGISTER DIV (rw): SPI clock Divider
0x40088424 C   FIELD 00w16 DIVVAL (rw): Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
0x40088428 B  REGISTER INTSTAT (ro): SPI Interrupt Status
0x40088428 C   FIELD 04w01 SSA (ro): Slave Select Assert.
0x40088428 C   FIELD 05w01 SSD (ro): Slave Select Deassert.
0x40088428 C   FIELD 08w01 MSTIDLE (ro): Master Idle status flag.
0x40088800 B  REGISTER CFG (rw): Configuration for shared functions.
0x40088800 C   FIELD 00w01 MSTEN (rw): Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.
0x40088800 C   FIELD 01w01 SLVEN (rw): Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.
0x40088800 C   FIELD 02w01 MONEN (rw): Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.
0x40088800 C   FIELD 03w01 TIMEOUTEN (rw): I2C bus Time-out Enable. When disabled, the time-out function is internally reset.
0x40088800 C   FIELD 04w01 MONCLKSTR (rw): Monitor function Clock Stretching.
0x40088800 C   FIELD 05w01 HSCAPABLE (rw): High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.
0x40088804 B  REGISTER STAT (rw): Status register for Master, Slave, and Monitor functions.
0x40088804 C   FIELD 00w01 MSTPENDING (ro): Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.
0x40088804 C   FIELD 01w03 MSTSTATE (ro): Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.
0x40088804 C   FIELD 04w01 MSTARBLOSS (rw): Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40088804 C   FIELD 06w01 MSTSTSTPERR (rw): Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40088804 C   FIELD 08w01 SLVPENDING (ro): Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.
0x40088804 C   FIELD 09w02 SLVSTATE (ro): Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.
0x40088804 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.
0x40088804 C   FIELD 12w02 SLVIDX (ro): Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.
0x40088804 C   FIELD 14w01 SLVSEL (ro): Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.
0x40088804 C   FIELD 15w01 SLVDESEL (rw): Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
0x40088804 C   FIELD 16w01 MONRDY (ro): Monitor Ready. This flag is cleared when the MONRXDAT register is read.
0x40088804 C   FIELD 17w01 MONOV (rw): Monitor Overflow flag.
0x40088804 C   FIELD 18w01 MONACTIVE (ro): Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.
0x40088804 C   FIELD 19w01 MONIDLE (rw): Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.
0x40088804 C   FIELD 24w01 EVENTTIMEOUT (rw): Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.
0x40088804 C   FIELD 25w01 SCLTIMEOUT (rw): SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.
0x40088808 B  REGISTER INTENSET (rw): Interrupt Enable Set and read register.
0x40088808 C   FIELD 00w01 MSTPENDINGEN (rw): Master Pending interrupt Enable.
0x40088808 C   FIELD 04w01 MSTARBLOSSEN (rw): Master Arbitration Loss interrupt Enable.
0x40088808 C   FIELD 06w01 MSTSTSTPERREN (rw): Master Start/Stop Error interrupt Enable.
0x40088808 C   FIELD 08w01 SLVPENDINGEN (rw): Slave Pending interrupt Enable.
0x40088808 C   FIELD 11w01 SLVNOTSTREN (rw): Slave Not Stretching interrupt Enable.
0x40088808 C   FIELD 15w01 SLVDESELEN (rw): Slave Deselect interrupt Enable.
0x40088808 C   FIELD 16w01 MONRDYEN (rw): Monitor data Ready interrupt Enable.
0x40088808 C   FIELD 17w01 MONOVEN (rw): Monitor Overrun interrupt Enable.
0x40088808 C   FIELD 19w01 MONIDLEEN (rw): Monitor Idle interrupt Enable.
0x40088808 C   FIELD 24w01 EVENTTIMEOUTEN (rw): Event time-out interrupt Enable.
0x40088808 C   FIELD 25w01 SCLTIMEOUTEN (rw): SCL time-out interrupt Enable.
0x4008880C B  REGISTER INTENCLR (wo): Interrupt Enable Clear register.
0x4008880C C   FIELD 00w01 MSTPENDINGCLR (wo): Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented.
0x4008880C C   FIELD 04w01 MSTARBLOSSCLR (wo): Master Arbitration Loss interrupt clear.
0x4008880C C   FIELD 06w01 MSTSTSTPERRCLR (wo): Master Start/Stop Error interrupt clear.
0x4008880C C   FIELD 08w01 SLVPENDINGCLR (wo): Slave Pending interrupt clear.
0x4008880C C   FIELD 11w01 SLVNOTSTRCLR (wo): Slave Not Stretching interrupt clear.
0x4008880C C   FIELD 15w01 SLVDESELCLR (wo): Slave Deselect interrupt clear.
0x4008880C C   FIELD 16w01 MONRDYCLR (wo): Monitor data Ready interrupt clear.
0x4008880C C   FIELD 17w01 MONOVCLR (wo): Monitor Overrun interrupt clear.
0x4008880C C   FIELD 19w01 MONIDLECLR (wo): Monitor Idle interrupt clear.
0x4008880C C   FIELD 24w01 EVENTTIMEOUTCLR (wo): Event time-out interrupt clear.
0x4008880C C   FIELD 25w01 SCLTIMEOUTCLR (wo): SCL time-out interrupt clear.
0x40088810 B  REGISTER TIMEOUT (rw): Time-out value register.
0x40088810 C   FIELD 00w04 TOMIN (rw): Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks.
0x40088810 C   FIELD 04w12 TO (rw): Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock.
0x40088814 B  REGISTER CLKDIV (rw): Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function.
0x40088814 C   FIELD 00w16 DIVVAL (rw): This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use.
0x40088818 B  REGISTER INTSTAT (ro): Interrupt Status register for Master, Slave, and Monitor functions.
0x40088818 C   FIELD 00w01 MSTPENDING (ro): Master Pending.
0x40088818 C   FIELD 04w01 MSTARBLOSS (ro): Master Arbitration Loss flag.
0x40088818 C   FIELD 06w01 MSTSTSTPERR (ro): Master Start/Stop Error flag.
0x40088818 C   FIELD 08w01 SLVPENDING (ro): Slave Pending.
0x40088818 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching status.
0x40088818 C   FIELD 15w01 SLVDESEL (ro): Slave Deselected flag.
0x40088818 C   FIELD 16w01 MONRDY (ro): Monitor Ready.
0x40088818 C   FIELD 17w01 MONOV (ro): Monitor Overflow flag.
0x40088818 C   FIELD 19w01 MONIDLE (ro): Monitor Idle flag.
0x40088818 C   FIELD 24w01 EVENTTIMEOUT (ro): Event time-out Interrupt flag.
0x40088818 C   FIELD 25w01 SCLTIMEOUT (ro): SCL time-out Interrupt flag.
0x40088820 B  REGISTER MSTCTL (rw): Master control register.
0x40088820 C   FIELD 00w01 MSTCONTINUE (wo): Master Continue. This bit is write-only.
0x40088820 C   FIELD 01w01 MSTSTART (rw): Master Start control. This bit is write-only.
0x40088820 C   FIELD 02w01 MSTSTOP (rw): Master Stop control. This bit is write-only.
0x40088820 C   FIELD 03w01 MSTDMA (rw): Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.
0x40088824 B  REGISTER MSTTIME (rw): Master timing configuration.
0x40088824 C   FIELD 00w03 MSTSCLLOW (rw): Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.
0x40088824 C   FIELD 04w03 MSTSCLHIGH (rw): Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.
0x40088828 B  REGISTER MSTDAT (rw): Combined Master receiver and transmitter data register.
0x40088828 C   FIELD 00w08 DATA (rw): Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function.
0x40088840 B  REGISTER SLVCTL (rw): Slave control register.
0x40088840 C   FIELD 00w01 SLVCONTINUE (rw): Slave Continue.
0x40088840 C   FIELD 01w01 SLVNACK (rw): Slave NACK.
0x40088840 C   FIELD 03w01 SLVDMA (rw): Slave DMA enable.
0x40088840 C   FIELD 08w01 AUTOACK (rw): Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.
0x40088840 C   FIELD 09w01 AUTOMATCHREAD (rw): When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.
0x40088844 B  REGISTER SLVDAT (rw): Combined Slave receiver and transmitter data register.
0x40088844 C   FIELD 00w08 DATA (rw): Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function.
0x40088848 B  REGISTER SLVADR[0] (rw): Slave address register.
0x40088848 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40088848 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40088848 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4008884C B  REGISTER SLVADR[1] (rw): Slave address register.
0x4008884C C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4008884C C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4008884C C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40088850 B  REGISTER SLVADR[2] (rw): Slave address register.
0x40088850 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40088850 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40088850 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40088854 B  REGISTER SLVADR[3] (rw): Slave address register.
0x40088854 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40088854 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40088854 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40088858 B  REGISTER SLVQUAL0 (rw): Slave Qualification for address 0.
0x40088858 C   FIELD 00w01 QUALMODE0 (rw): Qualify mode for slave address 0.
0x40088858 C   FIELD 01w07 SLVQUAL0 (rw): Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] <= received address <= SLVQUAL0[7:1]).
0x40088880 B  REGISTER MONRXDAT (ro): Monitor receiver data register.
0x40088880 C   FIELD 00w08 MONRXDAT (ro): Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins.
0x40088880 C   FIELD 08w01 MONSTART (ro): Monitor Received Start.
0x40088880 C   FIELD 09w01 MONRESTART (ro): Monitor Received Repeated Start.
0x40088880 C   FIELD 10w01 MONNACK (ro): Monitor Received NACK.
0x40088E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40088E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40088E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40088E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40088E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40088E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40088E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40088E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40088E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40088E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40088E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40088E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40088E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40088E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40088E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40088E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40088E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40088E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40088E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40088E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40088E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40088E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40088E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40088E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40088E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40088E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40088E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40088E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40088E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40088E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40088E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40088E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40088E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40088E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40088E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40088E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40088E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40088E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40088E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40088E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40088E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40088E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40088E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40088E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40088E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40088E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40088E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40088E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40088E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40088E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40088E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40088E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40088E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40088E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40088E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40088E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40088E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40088E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40088E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40088E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40088E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40088E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40088E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40088E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40088E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40088E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40088E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40088E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40088E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40088E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40088E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40088E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40088E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40088E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40088E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40088E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40088E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40088E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40088E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40088E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40088E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40088E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40088E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40088E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40088E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40088E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40088E20 C   FIELD 00w09 TXDATA (rw): Transmit data to the FIFO.
0x40088E20 C   FIELD 00w16 TXDATA (rw): Transmit data to the FIFO.
0x40088E20 C   FIELD 16w01 TXSSEL0_N (wo): Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.
0x40088E20 C   FIELD 17w01 TXSSEL1_N (wo): Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.
0x40088E20 C   FIELD 18w01 TXSSEL2_N (wo): Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.
0x40088E20 C   FIELD 19w01 TXSSEL3_N (wo): Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.
0x40088E20 C   FIELD 20w01 EOT (wo): End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.
0x40088E20 C   FIELD 21w01 EOF (wo): End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.
0x40088E20 C   FIELD 22w01 RXIGNORE (wo): Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.
0x40088E20 C   FIELD 24w04 LEN (wo): Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length.
0x40088E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40088E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40088E30 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40088E30 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40088E30 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40088E30 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40088E30 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40088E30 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40088E30 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40088E30 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40088E30 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40088E30 C   FIELD 20w01 SOT (ro): Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits.
0x40088E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40088E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40088E40 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40088E40 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40088E40 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40088E40 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40088E40 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40088E40 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive.
0x40088E40 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive.
0x40088E40 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive.
0x40088E40 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive.
0x40088E40 C   FIELD 20w01 SOT (ro): Start of transfer flag.
0x40088FF8 B  REGISTER PSELID (rw): Peripheral Select and Flexcomm ID register.
0x40088FF8 C   FIELD 00w03 PERSEL (rw): Peripheral Select. This field is writable by software.
0x40088FF8 C   FIELD 03w01 LOCK (rw): Lock the peripheral select. This field is writable by software.
0x40088FF8 C   FIELD 04w01 USARTPRESENT (ro): USART present indicator. This field is Read-only.
0x40088FF8 C   FIELD 05w01 SPIPRESENT (ro): SPI present indicator. This field is Read-only.
0x40088FF8 C   FIELD 06w01 I2CPRESENT (ro): I2C present indicator. This field is Read-only.
0x40088FF8 C   FIELD 07w01 I2SPRESENT (ro): I 2S present indicator. This field is Read-only.
0x40088FF8 C   FIELD 12w20 ID (ro): Flexcomm ID.
0x40088FFC B  REGISTER ID (ro): Peripheral identification register.
0x40088FFC B  REGISTER ID (ro): Peripheral identification register.
0x40088FFC B  REGISTER ID (ro): Peripheral identification register.
0x40088FFC B  REGISTER PID (rw): Peripheral identification register.
0x40088FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40088FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40088FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40088FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40088FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40088FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40088FFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation.
0x40088FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40088FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40088FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40088FFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation.
0x40088FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40088FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40088FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40088FFC C   FIELD 16w16 ID (rw): Module identifier for the selected function.
0x40089000 A PERIPHERAL FLEXCOMM3
0x40089000 A PERIPHERAL I2C3
0x40089000 A PERIPHERAL SPI3
0x40089000 A PERIPHERAL USART3
0x40089000 B  REGISTER CFG (rw): USART Configuration register. Basic USART configuration settings that typically are not changed during operation.
0x40089000 C   FIELD 00w01 ENABLE (rw): USART Enable.
0x40089000 C   FIELD 02w02 DATALEN (rw): Selects the data size for the USART.
0x40089000 C   FIELD 04w02 PARITYSEL (rw): Selects what type of parity is used by the USART.
0x40089000 C   FIELD 06w01 STOPLEN (rw): Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.
0x40089000 C   FIELD 07w01 MODE32K (rw): Selects standard or 32 kHz clocking mode.
0x40089000 C   FIELD 08w01 LINMODE (rw): LIN break mode enable.
0x40089000 C   FIELD 09w01 CTSEN (rw): CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.
0x40089000 C   FIELD 11w01 SYNCEN (rw): Selects synchronous or asynchronous operation.
0x40089000 C   FIELD 12w01 CLKPOL (rw): Selects the clock polarity and sampling edge of received data in synchronous mode.
0x40089000 C   FIELD 14w01 SYNCMST (rw): Synchronous mode Master select.
0x40089000 C   FIELD 15w01 LOOP (rw): Selects data loopback mode.
0x40089000 C   FIELD 18w01 OETA (rw): Output Enable Turnaround time enable for RS-485 operation.
0x40089000 C   FIELD 19w01 AUTOADDR (rw): Automatic Address matching enable.
0x40089000 C   FIELD 20w01 OESEL (rw): Output Enable Select.
0x40089000 C   FIELD 21w01 OEPOL (rw): Output Enable Polarity.
0x40089000 C   FIELD 22w01 RXPOL (rw): Receive data polarity.
0x40089000 C   FIELD 23w01 TXPOL (rw): Transmit data polarity.
0x40089004 B  REGISTER CTL (rw): USART Control register. USART control settings that are more likely to change during operation.
0x40089004 C   FIELD 01w01 TXBRKEN (rw): Break Enable.
0x40089004 C   FIELD 02w01 ADDRDET (rw): Enable address detect mode.
0x40089004 C   FIELD 06w01 TXDIS (rw): Transmit Disable.
0x40089004 C   FIELD 08w01 CC (rw): Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.
0x40089004 C   FIELD 09w01 CLRCCONRX (rw): Clear Continuous Clock.
0x40089004 C   FIELD 16w01 AUTOBAUD (rw): Autobaud enable.
0x40089008 B  REGISTER STAT (rw): USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them.
0x40089008 C   FIELD 01w01 RXIDLE (ro): Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data.
0x40089008 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data.
0x40089008 C   FIELD 04w01 CTS (ro): This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled.
0x40089008 C   FIELD 05w01 DELTACTS (rw): This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software.
0x40089008 C   FIELD 06w01 TXDISSTAT (ro): Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1).
0x40089008 C   FIELD 10w01 RXBRK (ro): Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high.
0x40089008 C   FIELD 11w01 DELTARXBRK (rw): This bit is set when a change in the state of receiver break detection occurs. Cleared by software.
0x40089008 C   FIELD 12w01 START (rw): This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software.
0x40089008 C   FIELD 13w01 FRAMERRINT (rw): Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40089008 C   FIELD 14w01 PARITYERRINT (rw): Parity Error interrupt flag. This flag is set when a parity error is detected in a received character.
0x40089008 C   FIELD 15w01 RXNOISEINT (rw): Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception.
0x40089008 C   FIELD 16w01 ABERR (rw): Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out.
0x4008900C B  REGISTER INTENSET (rw): Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4008900C C   FIELD 03w01 TXIDLEEN (rw): When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1).
0x4008900C C   FIELD 05w01 DELTACTSEN (rw): When 1, enables an interrupt when there is a change in the state of the CTS input.
0x4008900C C   FIELD 06w01 TXDISEN (rw): When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details.
0x4008900C C   FIELD 11w01 DELTARXBRKEN (rw): When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted).
0x4008900C C   FIELD 12w01 STARTEN (rw): When 1, enables an interrupt when a received start bit has been detected.
0x4008900C C   FIELD 13w01 FRAMERREN (rw): When 1, enables an interrupt when a framing error has been detected.
0x4008900C C   FIELD 14w01 PARITYERREN (rw): When 1, enables an interrupt when a parity error has been detected.
0x4008900C C   FIELD 15w01 RXNOISEEN (rw): When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354.
0x4008900C C   FIELD 16w01 ABERREN (rw): When 1, enables an interrupt when an auto baud error occurs.
0x40089010 B  REGISTER INTENCLR (wo): Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared.
0x40089010 C   FIELD 03w01 TXIDLECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089010 C   FIELD 05w01 DELTACTSCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089010 C   FIELD 06w01 TXDISCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089010 C   FIELD 11w01 DELTARXBRKCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089010 C   FIELD 12w01 STARTCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089010 C   FIELD 13w01 FRAMERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089010 C   FIELD 14w01 PARITYERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089010 C   FIELD 15w01 RXNOISECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089010 C   FIELD 16w01 ABERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089020 B  REGISTER BRG (rw): Baud Rate Generator register. 16-bit integer baud rate divisor value.
0x40089020 C   FIELD 00w16 BRGVAL (rw): This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function.
0x40089024 B  REGISTER INTSTAT (ro): Interrupt status register. Reflects interrupts that are currently enabled.
0x40089024 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle status.
0x40089024 C   FIELD 05w01 DELTACTS (ro): This bit is set when a change in the state of the CTS input is detected.
0x40089024 C   FIELD 06w01 TXDISINT (ro): Transmitter Disabled Interrupt flag.
0x40089024 C   FIELD 11w01 DELTARXBRK (ro): This bit is set when a change in the state of receiver break detection occurs.
0x40089024 C   FIELD 12w01 START (ro): This bit is set when a start is detected on the receiver input.
0x40089024 C   FIELD 13w01 FRAMERRINT (ro): Framing Error interrupt flag.
0x40089024 C   FIELD 14w01 PARITYERRINT (ro): Parity Error interrupt flag.
0x40089024 C   FIELD 15w01 RXNOISEINT (ro): Received Noise interrupt flag.
0x40089024 C   FIELD 16w01 ABERRINT (ro): Auto baud Error Interrupt flag.
0x40089028 B  REGISTER OSR (rw): Oversample selection register for asynchronous communication.
0x40089028 C   FIELD 00w04 OSRVAL (rw): Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit.
0x4008902C B  REGISTER ADDR (rw): Address register for automatic address matching.
0x4008902C C   FIELD 00w08 ADDRESS (rw): 8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1).
0x40089400 B  REGISTER CFG (rw): SPI Configuration register
0x40089400 C   FIELD 00w01 ENABLE (rw): SPI enable.
0x40089400 C   FIELD 02w01 MASTER (rw): Master mode select.
0x40089400 C   FIELD 03w01 LSBF (rw): LSB First mode enable.
0x40089400 C   FIELD 04w01 CPHA (rw): Clock Phase select.
0x40089400 C   FIELD 05w01 CPOL (rw): Clock Polarity select.
0x40089400 C   FIELD 07w01 LOOP (rw): Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.
0x40089400 C   FIELD 08w01 SPOL0 (rw): SSEL0 Polarity select.
0x40089400 C   FIELD 09w01 SPOL1 (rw): SSEL1 Polarity select.
0x40089400 C   FIELD 10w01 SPOL2 (rw): SSEL2 Polarity select.
0x40089400 C   FIELD 11w01 SPOL3 (rw): SSEL3 Polarity select.
0x40089404 B  REGISTER DLY (rw): SPI Delay register
0x40089404 C   FIELD 00w04 PRE_DELAY (rw): Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40089404 C   FIELD 04w04 POST_DELAY (rw): Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40089404 C   FIELD 08w04 FRAME_DELAY (rw): If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40089404 C   FIELD 12w04 TRANSFER_DELAY (rw): Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times.
0x40089408 B  REGISTER STAT (rw): SPI Status. Some status flags can be cleared by writing a 1 to that bit position.
0x40089408 C   FIELD 04w01 SSA (wo): Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software.
0x40089408 C   FIELD 05w01 SSD (wo): Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software.
0x40089408 C   FIELD 06w01 STALLED (ro): Stalled status flag. This indicates whether the SPI is currently in a stall condition.
0x40089408 C   FIELD 07w01 ENDTRANSFER (rw): End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted.
0x40089408 C   FIELD 08w01 MSTIDLE (ro): Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data.
0x4008940C B  REGISTER INTENSET (rw): SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4008940C C   FIELD 04w01 SSAEN (rw): Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.
0x4008940C C   FIELD 05w01 SSDEN (rw): Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.
0x4008940C C   FIELD 08w01 MSTIDLEEN (rw): Master idle interrupt enable.
0x40089410 B  REGISTER INTENCLR (wo): SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared.
0x40089410 C   FIELD 04w01 SSAEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089410 C   FIELD 05w01 SSDEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089410 C   FIELD 08w01 MSTIDLE (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40089424 B  REGISTER DIV (rw): SPI clock Divider
0x40089424 C   FIELD 00w16 DIVVAL (rw): Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
0x40089428 B  REGISTER INTSTAT (ro): SPI Interrupt Status
0x40089428 C   FIELD 04w01 SSA (ro): Slave Select Assert.
0x40089428 C   FIELD 05w01 SSD (ro): Slave Select Deassert.
0x40089428 C   FIELD 08w01 MSTIDLE (ro): Master Idle status flag.
0x40089800 B  REGISTER CFG (rw): Configuration for shared functions.
0x40089800 C   FIELD 00w01 MSTEN (rw): Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.
0x40089800 C   FIELD 01w01 SLVEN (rw): Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.
0x40089800 C   FIELD 02w01 MONEN (rw): Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.
0x40089800 C   FIELD 03w01 TIMEOUTEN (rw): I2C bus Time-out Enable. When disabled, the time-out function is internally reset.
0x40089800 C   FIELD 04w01 MONCLKSTR (rw): Monitor function Clock Stretching.
0x40089800 C   FIELD 05w01 HSCAPABLE (rw): High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.
0x40089804 B  REGISTER STAT (rw): Status register for Master, Slave, and Monitor functions.
0x40089804 C   FIELD 00w01 MSTPENDING (ro): Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.
0x40089804 C   FIELD 01w03 MSTSTATE (ro): Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.
0x40089804 C   FIELD 04w01 MSTARBLOSS (rw): Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40089804 C   FIELD 06w01 MSTSTSTPERR (rw): Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40089804 C   FIELD 08w01 SLVPENDING (ro): Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.
0x40089804 C   FIELD 09w02 SLVSTATE (ro): Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.
0x40089804 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.
0x40089804 C   FIELD 12w02 SLVIDX (ro): Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.
0x40089804 C   FIELD 14w01 SLVSEL (ro): Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.
0x40089804 C   FIELD 15w01 SLVDESEL (rw): Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
0x40089804 C   FIELD 16w01 MONRDY (ro): Monitor Ready. This flag is cleared when the MONRXDAT register is read.
0x40089804 C   FIELD 17w01 MONOV (rw): Monitor Overflow flag.
0x40089804 C   FIELD 18w01 MONACTIVE (ro): Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.
0x40089804 C   FIELD 19w01 MONIDLE (rw): Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.
0x40089804 C   FIELD 24w01 EVENTTIMEOUT (rw): Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.
0x40089804 C   FIELD 25w01 SCLTIMEOUT (rw): SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.
0x40089808 B  REGISTER INTENSET (rw): Interrupt Enable Set and read register.
0x40089808 C   FIELD 00w01 MSTPENDINGEN (rw): Master Pending interrupt Enable.
0x40089808 C   FIELD 04w01 MSTARBLOSSEN (rw): Master Arbitration Loss interrupt Enable.
0x40089808 C   FIELD 06w01 MSTSTSTPERREN (rw): Master Start/Stop Error interrupt Enable.
0x40089808 C   FIELD 08w01 SLVPENDINGEN (rw): Slave Pending interrupt Enable.
0x40089808 C   FIELD 11w01 SLVNOTSTREN (rw): Slave Not Stretching interrupt Enable.
0x40089808 C   FIELD 15w01 SLVDESELEN (rw): Slave Deselect interrupt Enable.
0x40089808 C   FIELD 16w01 MONRDYEN (rw): Monitor data Ready interrupt Enable.
0x40089808 C   FIELD 17w01 MONOVEN (rw): Monitor Overrun interrupt Enable.
0x40089808 C   FIELD 19w01 MONIDLEEN (rw): Monitor Idle interrupt Enable.
0x40089808 C   FIELD 24w01 EVENTTIMEOUTEN (rw): Event time-out interrupt Enable.
0x40089808 C   FIELD 25w01 SCLTIMEOUTEN (rw): SCL time-out interrupt Enable.
0x4008980C B  REGISTER INTENCLR (wo): Interrupt Enable Clear register.
0x4008980C C   FIELD 00w01 MSTPENDINGCLR (wo): Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented.
0x4008980C C   FIELD 04w01 MSTARBLOSSCLR (wo): Master Arbitration Loss interrupt clear.
0x4008980C C   FIELD 06w01 MSTSTSTPERRCLR (wo): Master Start/Stop Error interrupt clear.
0x4008980C C   FIELD 08w01 SLVPENDINGCLR (wo): Slave Pending interrupt clear.
0x4008980C C   FIELD 11w01 SLVNOTSTRCLR (wo): Slave Not Stretching interrupt clear.
0x4008980C C   FIELD 15w01 SLVDESELCLR (wo): Slave Deselect interrupt clear.
0x4008980C C   FIELD 16w01 MONRDYCLR (wo): Monitor data Ready interrupt clear.
0x4008980C C   FIELD 17w01 MONOVCLR (wo): Monitor Overrun interrupt clear.
0x4008980C C   FIELD 19w01 MONIDLECLR (wo): Monitor Idle interrupt clear.
0x4008980C C   FIELD 24w01 EVENTTIMEOUTCLR (wo): Event time-out interrupt clear.
0x4008980C C   FIELD 25w01 SCLTIMEOUTCLR (wo): SCL time-out interrupt clear.
0x40089810 B  REGISTER TIMEOUT (rw): Time-out value register.
0x40089810 C   FIELD 00w04 TOMIN (rw): Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks.
0x40089810 C   FIELD 04w12 TO (rw): Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock.
0x40089814 B  REGISTER CLKDIV (rw): Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function.
0x40089814 C   FIELD 00w16 DIVVAL (rw): This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use.
0x40089818 B  REGISTER INTSTAT (ro): Interrupt Status register for Master, Slave, and Monitor functions.
0x40089818 C   FIELD 00w01 MSTPENDING (ro): Master Pending.
0x40089818 C   FIELD 04w01 MSTARBLOSS (ro): Master Arbitration Loss flag.
0x40089818 C   FIELD 06w01 MSTSTSTPERR (ro): Master Start/Stop Error flag.
0x40089818 C   FIELD 08w01 SLVPENDING (ro): Slave Pending.
0x40089818 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching status.
0x40089818 C   FIELD 15w01 SLVDESEL (ro): Slave Deselected flag.
0x40089818 C   FIELD 16w01 MONRDY (ro): Monitor Ready.
0x40089818 C   FIELD 17w01 MONOV (ro): Monitor Overflow flag.
0x40089818 C   FIELD 19w01 MONIDLE (ro): Monitor Idle flag.
0x40089818 C   FIELD 24w01 EVENTTIMEOUT (ro): Event time-out Interrupt flag.
0x40089818 C   FIELD 25w01 SCLTIMEOUT (ro): SCL time-out Interrupt flag.
0x40089820 B  REGISTER MSTCTL (rw): Master control register.
0x40089820 C   FIELD 00w01 MSTCONTINUE (wo): Master Continue. This bit is write-only.
0x40089820 C   FIELD 01w01 MSTSTART (rw): Master Start control. This bit is write-only.
0x40089820 C   FIELD 02w01 MSTSTOP (rw): Master Stop control. This bit is write-only.
0x40089820 C   FIELD 03w01 MSTDMA (rw): Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.
0x40089824 B  REGISTER MSTTIME (rw): Master timing configuration.
0x40089824 C   FIELD 00w03 MSTSCLLOW (rw): Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.
0x40089824 C   FIELD 04w03 MSTSCLHIGH (rw): Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.
0x40089828 B  REGISTER MSTDAT (rw): Combined Master receiver and transmitter data register.
0x40089828 C   FIELD 00w08 DATA (rw): Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function.
0x40089840 B  REGISTER SLVCTL (rw): Slave control register.
0x40089840 C   FIELD 00w01 SLVCONTINUE (rw): Slave Continue.
0x40089840 C   FIELD 01w01 SLVNACK (rw): Slave NACK.
0x40089840 C   FIELD 03w01 SLVDMA (rw): Slave DMA enable.
0x40089840 C   FIELD 08w01 AUTOACK (rw): Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.
0x40089840 C   FIELD 09w01 AUTOMATCHREAD (rw): When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.
0x40089844 B  REGISTER SLVDAT (rw): Combined Slave receiver and transmitter data register.
0x40089844 C   FIELD 00w08 DATA (rw): Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function.
0x40089848 B  REGISTER SLVADR[0] (rw): Slave address register.
0x40089848 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40089848 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40089848 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4008984C B  REGISTER SLVADR[1] (rw): Slave address register.
0x4008984C C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4008984C C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4008984C C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40089850 B  REGISTER SLVADR[2] (rw): Slave address register.
0x40089850 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40089850 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40089850 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40089854 B  REGISTER SLVADR[3] (rw): Slave address register.
0x40089854 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40089854 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40089854 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40089858 B  REGISTER SLVQUAL0 (rw): Slave Qualification for address 0.
0x40089858 C   FIELD 00w01 QUALMODE0 (rw): Qualify mode for slave address 0.
0x40089858 C   FIELD 01w07 SLVQUAL0 (rw): Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] <= received address <= SLVQUAL0[7:1]).
0x40089880 B  REGISTER MONRXDAT (ro): Monitor receiver data register.
0x40089880 C   FIELD 00w08 MONRXDAT (ro): Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins.
0x40089880 C   FIELD 08w01 MONSTART (ro): Monitor Received Start.
0x40089880 C   FIELD 09w01 MONRESTART (ro): Monitor Received Repeated Start.
0x40089880 C   FIELD 10w01 MONNACK (ro): Monitor Received NACK.
0x40089E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40089E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40089E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40089E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40089E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40089E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40089E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40089E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40089E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40089E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40089E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40089E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40089E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40089E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40089E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40089E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40089E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40089E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40089E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40089E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40089E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40089E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40089E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40089E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40089E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40089E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40089E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40089E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40089E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40089E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40089E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40089E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40089E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40089E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40089E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40089E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40089E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40089E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40089E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40089E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40089E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40089E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40089E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40089E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40089E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40089E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40089E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40089E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40089E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40089E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40089E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40089E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40089E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40089E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40089E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40089E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40089E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40089E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40089E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40089E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40089E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40089E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40089E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40089E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40089E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40089E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40089E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40089E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40089E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40089E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40089E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40089E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40089E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40089E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40089E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40089E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40089E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40089E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40089E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40089E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40089E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40089E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40089E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40089E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40089E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40089E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40089E20 C   FIELD 00w09 TXDATA (rw): Transmit data to the FIFO.
0x40089E20 C   FIELD 00w16 TXDATA (rw): Transmit data to the FIFO.
0x40089E20 C   FIELD 16w01 TXSSEL0_N (wo): Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.
0x40089E20 C   FIELD 17w01 TXSSEL1_N (wo): Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.
0x40089E20 C   FIELD 18w01 TXSSEL2_N (wo): Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.
0x40089E20 C   FIELD 19w01 TXSSEL3_N (wo): Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.
0x40089E20 C   FIELD 20w01 EOT (wo): End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.
0x40089E20 C   FIELD 21w01 EOF (wo): End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.
0x40089E20 C   FIELD 22w01 RXIGNORE (wo): Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.
0x40089E20 C   FIELD 24w04 LEN (wo): Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length.
0x40089E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40089E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40089E30 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40089E30 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40089E30 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40089E30 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40089E30 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40089E30 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40089E30 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40089E30 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40089E30 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40089E30 C   FIELD 20w01 SOT (ro): Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits.
0x40089E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40089E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40089E40 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40089E40 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40089E40 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40089E40 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40089E40 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40089E40 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive.
0x40089E40 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive.
0x40089E40 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive.
0x40089E40 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive.
0x40089E40 C   FIELD 20w01 SOT (ro): Start of transfer flag.
0x40089FF8 B  REGISTER PSELID (rw): Peripheral Select and Flexcomm ID register.
0x40089FF8 C   FIELD 00w03 PERSEL (rw): Peripheral Select. This field is writable by software.
0x40089FF8 C   FIELD 03w01 LOCK (rw): Lock the peripheral select. This field is writable by software.
0x40089FF8 C   FIELD 04w01 USARTPRESENT (ro): USART present indicator. This field is Read-only.
0x40089FF8 C   FIELD 05w01 SPIPRESENT (ro): SPI present indicator. This field is Read-only.
0x40089FF8 C   FIELD 06w01 I2CPRESENT (ro): I2C present indicator. This field is Read-only.
0x40089FF8 C   FIELD 07w01 I2SPRESENT (ro): I 2S present indicator. This field is Read-only.
0x40089FF8 C   FIELD 12w20 ID (ro): Flexcomm ID.
0x40089FFC B  REGISTER ID (ro): Peripheral identification register.
0x40089FFC B  REGISTER ID (ro): Peripheral identification register.
0x40089FFC B  REGISTER ID (ro): Peripheral identification register.
0x40089FFC B  REGISTER PID (rw): Peripheral identification register.
0x40089FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40089FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40089FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40089FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40089FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40089FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40089FFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation.
0x40089FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40089FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40089FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40089FFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation.
0x40089FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40089FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40089FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40089FFC C   FIELD 16w16 ID (rw): Module identifier for the selected function.
0x4008A000 A PERIPHERAL FLEXCOMM4
0x4008A000 A PERIPHERAL I2C4
0x4008A000 A PERIPHERAL SPI4
0x4008A000 A PERIPHERAL USART4
0x4008A000 B  REGISTER CFG (rw): USART Configuration register. Basic USART configuration settings that typically are not changed during operation.
0x4008A000 C   FIELD 00w01 ENABLE (rw): USART Enable.
0x4008A000 C   FIELD 02w02 DATALEN (rw): Selects the data size for the USART.
0x4008A000 C   FIELD 04w02 PARITYSEL (rw): Selects what type of parity is used by the USART.
0x4008A000 C   FIELD 06w01 STOPLEN (rw): Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.
0x4008A000 C   FIELD 07w01 MODE32K (rw): Selects standard or 32 kHz clocking mode.
0x4008A000 C   FIELD 08w01 LINMODE (rw): LIN break mode enable.
0x4008A000 C   FIELD 09w01 CTSEN (rw): CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.
0x4008A000 C   FIELD 11w01 SYNCEN (rw): Selects synchronous or asynchronous operation.
0x4008A000 C   FIELD 12w01 CLKPOL (rw): Selects the clock polarity and sampling edge of received data in synchronous mode.
0x4008A000 C   FIELD 14w01 SYNCMST (rw): Synchronous mode Master select.
0x4008A000 C   FIELD 15w01 LOOP (rw): Selects data loopback mode.
0x4008A000 C   FIELD 18w01 OETA (rw): Output Enable Turnaround time enable for RS-485 operation.
0x4008A000 C   FIELD 19w01 AUTOADDR (rw): Automatic Address matching enable.
0x4008A000 C   FIELD 20w01 OESEL (rw): Output Enable Select.
0x4008A000 C   FIELD 21w01 OEPOL (rw): Output Enable Polarity.
0x4008A000 C   FIELD 22w01 RXPOL (rw): Receive data polarity.
0x4008A000 C   FIELD 23w01 TXPOL (rw): Transmit data polarity.
0x4008A004 B  REGISTER CTL (rw): USART Control register. USART control settings that are more likely to change during operation.
0x4008A004 C   FIELD 01w01 TXBRKEN (rw): Break Enable.
0x4008A004 C   FIELD 02w01 ADDRDET (rw): Enable address detect mode.
0x4008A004 C   FIELD 06w01 TXDIS (rw): Transmit Disable.
0x4008A004 C   FIELD 08w01 CC (rw): Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.
0x4008A004 C   FIELD 09w01 CLRCCONRX (rw): Clear Continuous Clock.
0x4008A004 C   FIELD 16w01 AUTOBAUD (rw): Autobaud enable.
0x4008A008 B  REGISTER STAT (rw): USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them.
0x4008A008 C   FIELD 01w01 RXIDLE (ro): Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data.
0x4008A008 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data.
0x4008A008 C   FIELD 04w01 CTS (ro): This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled.
0x4008A008 C   FIELD 05w01 DELTACTS (rw): This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software.
0x4008A008 C   FIELD 06w01 TXDISSTAT (ro): Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1).
0x4008A008 C   FIELD 10w01 RXBRK (ro): Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high.
0x4008A008 C   FIELD 11w01 DELTARXBRK (rw): This bit is set when a change in the state of receiver break detection occurs. Cleared by software.
0x4008A008 C   FIELD 12w01 START (rw): This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software.
0x4008A008 C   FIELD 13w01 FRAMERRINT (rw): Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x4008A008 C   FIELD 14w01 PARITYERRINT (rw): Parity Error interrupt flag. This flag is set when a parity error is detected in a received character.
0x4008A008 C   FIELD 15w01 RXNOISEINT (rw): Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception.
0x4008A008 C   FIELD 16w01 ABERR (rw): Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out.
0x4008A00C B  REGISTER INTENSET (rw): Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4008A00C C   FIELD 03w01 TXIDLEEN (rw): When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1).
0x4008A00C C   FIELD 05w01 DELTACTSEN (rw): When 1, enables an interrupt when there is a change in the state of the CTS input.
0x4008A00C C   FIELD 06w01 TXDISEN (rw): When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details.
0x4008A00C C   FIELD 11w01 DELTARXBRKEN (rw): When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted).
0x4008A00C C   FIELD 12w01 STARTEN (rw): When 1, enables an interrupt when a received start bit has been detected.
0x4008A00C C   FIELD 13w01 FRAMERREN (rw): When 1, enables an interrupt when a framing error has been detected.
0x4008A00C C   FIELD 14w01 PARITYERREN (rw): When 1, enables an interrupt when a parity error has been detected.
0x4008A00C C   FIELD 15w01 RXNOISEEN (rw): When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354.
0x4008A00C C   FIELD 16w01 ABERREN (rw): When 1, enables an interrupt when an auto baud error occurs.
0x4008A010 B  REGISTER INTENCLR (wo): Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared.
0x4008A010 C   FIELD 03w01 TXIDLECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A010 C   FIELD 05w01 DELTACTSCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A010 C   FIELD 06w01 TXDISCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A010 C   FIELD 11w01 DELTARXBRKCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A010 C   FIELD 12w01 STARTCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A010 C   FIELD 13w01 FRAMERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A010 C   FIELD 14w01 PARITYERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A010 C   FIELD 15w01 RXNOISECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A010 C   FIELD 16w01 ABERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A020 B  REGISTER BRG (rw): Baud Rate Generator register. 16-bit integer baud rate divisor value.
0x4008A020 C   FIELD 00w16 BRGVAL (rw): This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function.
0x4008A024 B  REGISTER INTSTAT (ro): Interrupt status register. Reflects interrupts that are currently enabled.
0x4008A024 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle status.
0x4008A024 C   FIELD 05w01 DELTACTS (ro): This bit is set when a change in the state of the CTS input is detected.
0x4008A024 C   FIELD 06w01 TXDISINT (ro): Transmitter Disabled Interrupt flag.
0x4008A024 C   FIELD 11w01 DELTARXBRK (ro): This bit is set when a change in the state of receiver break detection occurs.
0x4008A024 C   FIELD 12w01 START (ro): This bit is set when a start is detected on the receiver input.
0x4008A024 C   FIELD 13w01 FRAMERRINT (ro): Framing Error interrupt flag.
0x4008A024 C   FIELD 14w01 PARITYERRINT (ro): Parity Error interrupt flag.
0x4008A024 C   FIELD 15w01 RXNOISEINT (ro): Received Noise interrupt flag.
0x4008A024 C   FIELD 16w01 ABERRINT (ro): Auto baud Error Interrupt flag.
0x4008A028 B  REGISTER OSR (rw): Oversample selection register for asynchronous communication.
0x4008A028 C   FIELD 00w04 OSRVAL (rw): Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit.
0x4008A02C B  REGISTER ADDR (rw): Address register for automatic address matching.
0x4008A02C C   FIELD 00w08 ADDRESS (rw): 8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1).
0x4008A400 B  REGISTER CFG (rw): SPI Configuration register
0x4008A400 C   FIELD 00w01 ENABLE (rw): SPI enable.
0x4008A400 C   FIELD 02w01 MASTER (rw): Master mode select.
0x4008A400 C   FIELD 03w01 LSBF (rw): LSB First mode enable.
0x4008A400 C   FIELD 04w01 CPHA (rw): Clock Phase select.
0x4008A400 C   FIELD 05w01 CPOL (rw): Clock Polarity select.
0x4008A400 C   FIELD 07w01 LOOP (rw): Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.
0x4008A400 C   FIELD 08w01 SPOL0 (rw): SSEL0 Polarity select.
0x4008A400 C   FIELD 09w01 SPOL1 (rw): SSEL1 Polarity select.
0x4008A400 C   FIELD 10w01 SPOL2 (rw): SSEL2 Polarity select.
0x4008A400 C   FIELD 11w01 SPOL3 (rw): SSEL3 Polarity select.
0x4008A404 B  REGISTER DLY (rw): SPI Delay register
0x4008A404 C   FIELD 00w04 PRE_DELAY (rw): Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x4008A404 C   FIELD 04w04 POST_DELAY (rw): Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x4008A404 C   FIELD 08w04 FRAME_DELAY (rw): If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x4008A404 C   FIELD 12w04 TRANSFER_DELAY (rw): Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times.
0x4008A408 B  REGISTER STAT (rw): SPI Status. Some status flags can be cleared by writing a 1 to that bit position.
0x4008A408 C   FIELD 04w01 SSA (wo): Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software.
0x4008A408 C   FIELD 05w01 SSD (wo): Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software.
0x4008A408 C   FIELD 06w01 STALLED (ro): Stalled status flag. This indicates whether the SPI is currently in a stall condition.
0x4008A408 C   FIELD 07w01 ENDTRANSFER (rw): End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted.
0x4008A408 C   FIELD 08w01 MSTIDLE (ro): Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data.
0x4008A40C B  REGISTER INTENSET (rw): SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4008A40C C   FIELD 04w01 SSAEN (rw): Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.
0x4008A40C C   FIELD 05w01 SSDEN (rw): Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.
0x4008A40C C   FIELD 08w01 MSTIDLEEN (rw): Master idle interrupt enable.
0x4008A410 B  REGISTER INTENCLR (wo): SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared.
0x4008A410 C   FIELD 04w01 SSAEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A410 C   FIELD 05w01 SSDEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A410 C   FIELD 08w01 MSTIDLE (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4008A424 B  REGISTER DIV (rw): SPI clock Divider
0x4008A424 C   FIELD 00w16 DIVVAL (rw): Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
0x4008A428 B  REGISTER INTSTAT (ro): SPI Interrupt Status
0x4008A428 C   FIELD 04w01 SSA (ro): Slave Select Assert.
0x4008A428 C   FIELD 05w01 SSD (ro): Slave Select Deassert.
0x4008A428 C   FIELD 08w01 MSTIDLE (ro): Master Idle status flag.
0x4008A800 B  REGISTER CFG (rw): Configuration for shared functions.
0x4008A800 C   FIELD 00w01 MSTEN (rw): Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.
0x4008A800 C   FIELD 01w01 SLVEN (rw): Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.
0x4008A800 C   FIELD 02w01 MONEN (rw): Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.
0x4008A800 C   FIELD 03w01 TIMEOUTEN (rw): I2C bus Time-out Enable. When disabled, the time-out function is internally reset.
0x4008A800 C   FIELD 04w01 MONCLKSTR (rw): Monitor function Clock Stretching.
0x4008A800 C   FIELD 05w01 HSCAPABLE (rw): High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.
0x4008A804 B  REGISTER STAT (rw): Status register for Master, Slave, and Monitor functions.
0x4008A804 C   FIELD 00w01 MSTPENDING (ro): Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.
0x4008A804 C   FIELD 01w03 MSTSTATE (ro): Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.
0x4008A804 C   FIELD 04w01 MSTARBLOSS (rw): Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x4008A804 C   FIELD 06w01 MSTSTSTPERR (rw): Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x4008A804 C   FIELD 08w01 SLVPENDING (ro): Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.
0x4008A804 C   FIELD 09w02 SLVSTATE (ro): Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.
0x4008A804 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.
0x4008A804 C   FIELD 12w02 SLVIDX (ro): Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.
0x4008A804 C   FIELD 14w01 SLVSEL (ro): Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.
0x4008A804 C   FIELD 15w01 SLVDESEL (rw): Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
0x4008A804 C   FIELD 16w01 MONRDY (ro): Monitor Ready. This flag is cleared when the MONRXDAT register is read.
0x4008A804 C   FIELD 17w01 MONOV (rw): Monitor Overflow flag.
0x4008A804 C   FIELD 18w01 MONACTIVE (ro): Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.
0x4008A804 C   FIELD 19w01 MONIDLE (rw): Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.
0x4008A804 C   FIELD 24w01 EVENTTIMEOUT (rw): Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.
0x4008A804 C   FIELD 25w01 SCLTIMEOUT (rw): SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.
0x4008A808 B  REGISTER INTENSET (rw): Interrupt Enable Set and read register.
0x4008A808 C   FIELD 00w01 MSTPENDINGEN (rw): Master Pending interrupt Enable.
0x4008A808 C   FIELD 04w01 MSTARBLOSSEN (rw): Master Arbitration Loss interrupt Enable.
0x4008A808 C   FIELD 06w01 MSTSTSTPERREN (rw): Master Start/Stop Error interrupt Enable.
0x4008A808 C   FIELD 08w01 SLVPENDINGEN (rw): Slave Pending interrupt Enable.
0x4008A808 C   FIELD 11w01 SLVNOTSTREN (rw): Slave Not Stretching interrupt Enable.
0x4008A808 C   FIELD 15w01 SLVDESELEN (rw): Slave Deselect interrupt Enable.
0x4008A808 C   FIELD 16w01 MONRDYEN (rw): Monitor data Ready interrupt Enable.
0x4008A808 C   FIELD 17w01 MONOVEN (rw): Monitor Overrun interrupt Enable.
0x4008A808 C   FIELD 19w01 MONIDLEEN (rw): Monitor Idle interrupt Enable.
0x4008A808 C   FIELD 24w01 EVENTTIMEOUTEN (rw): Event time-out interrupt Enable.
0x4008A808 C   FIELD 25w01 SCLTIMEOUTEN (rw): SCL time-out interrupt Enable.
0x4008A80C B  REGISTER INTENCLR (wo): Interrupt Enable Clear register.
0x4008A80C C   FIELD 00w01 MSTPENDINGCLR (wo): Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented.
0x4008A80C C   FIELD 04w01 MSTARBLOSSCLR (wo): Master Arbitration Loss interrupt clear.
0x4008A80C C   FIELD 06w01 MSTSTSTPERRCLR (wo): Master Start/Stop Error interrupt clear.
0x4008A80C C   FIELD 08w01 SLVPENDINGCLR (wo): Slave Pending interrupt clear.
0x4008A80C C   FIELD 11w01 SLVNOTSTRCLR (wo): Slave Not Stretching interrupt clear.
0x4008A80C C   FIELD 15w01 SLVDESELCLR (wo): Slave Deselect interrupt clear.
0x4008A80C C   FIELD 16w01 MONRDYCLR (wo): Monitor data Ready interrupt clear.
0x4008A80C C   FIELD 17w01 MONOVCLR (wo): Monitor Overrun interrupt clear.
0x4008A80C C   FIELD 19w01 MONIDLECLR (wo): Monitor Idle interrupt clear.
0x4008A80C C   FIELD 24w01 EVENTTIMEOUTCLR (wo): Event time-out interrupt clear.
0x4008A80C C   FIELD 25w01 SCLTIMEOUTCLR (wo): SCL time-out interrupt clear.
0x4008A810 B  REGISTER TIMEOUT (rw): Time-out value register.
0x4008A810 C   FIELD 00w04 TOMIN (rw): Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks.
0x4008A810 C   FIELD 04w12 TO (rw): Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock.
0x4008A814 B  REGISTER CLKDIV (rw): Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function.
0x4008A814 C   FIELD 00w16 DIVVAL (rw): This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use.
0x4008A818 B  REGISTER INTSTAT (ro): Interrupt Status register for Master, Slave, and Monitor functions.
0x4008A818 C   FIELD 00w01 MSTPENDING (ro): Master Pending.
0x4008A818 C   FIELD 04w01 MSTARBLOSS (ro): Master Arbitration Loss flag.
0x4008A818 C   FIELD 06w01 MSTSTSTPERR (ro): Master Start/Stop Error flag.
0x4008A818 C   FIELD 08w01 SLVPENDING (ro): Slave Pending.
0x4008A818 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching status.
0x4008A818 C   FIELD 15w01 SLVDESEL (ro): Slave Deselected flag.
0x4008A818 C   FIELD 16w01 MONRDY (ro): Monitor Ready.
0x4008A818 C   FIELD 17w01 MONOV (ro): Monitor Overflow flag.
0x4008A818 C   FIELD 19w01 MONIDLE (ro): Monitor Idle flag.
0x4008A818 C   FIELD 24w01 EVENTTIMEOUT (ro): Event time-out Interrupt flag.
0x4008A818 C   FIELD 25w01 SCLTIMEOUT (ro): SCL time-out Interrupt flag.
0x4008A820 B  REGISTER MSTCTL (rw): Master control register.
0x4008A820 C   FIELD 00w01 MSTCONTINUE (wo): Master Continue. This bit is write-only.
0x4008A820 C   FIELD 01w01 MSTSTART (rw): Master Start control. This bit is write-only.
0x4008A820 C   FIELD 02w01 MSTSTOP (rw): Master Stop control. This bit is write-only.
0x4008A820 C   FIELD 03w01 MSTDMA (rw): Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.
0x4008A824 B  REGISTER MSTTIME (rw): Master timing configuration.
0x4008A824 C   FIELD 00w03 MSTSCLLOW (rw): Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.
0x4008A824 C   FIELD 04w03 MSTSCLHIGH (rw): Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.
0x4008A828 B  REGISTER MSTDAT (rw): Combined Master receiver and transmitter data register.
0x4008A828 C   FIELD 00w08 DATA (rw): Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function.
0x4008A840 B  REGISTER SLVCTL (rw): Slave control register.
0x4008A840 C   FIELD 00w01 SLVCONTINUE (rw): Slave Continue.
0x4008A840 C   FIELD 01w01 SLVNACK (rw): Slave NACK.
0x4008A840 C   FIELD 03w01 SLVDMA (rw): Slave DMA enable.
0x4008A840 C   FIELD 08w01 AUTOACK (rw): Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.
0x4008A840 C   FIELD 09w01 AUTOMATCHREAD (rw): When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.
0x4008A844 B  REGISTER SLVDAT (rw): Combined Slave receiver and transmitter data register.
0x4008A844 C   FIELD 00w08 DATA (rw): Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function.
0x4008A848 B  REGISTER SLVADR[0] (rw): Slave address register.
0x4008A848 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4008A848 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4008A848 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4008A84C B  REGISTER SLVADR[1] (rw): Slave address register.
0x4008A84C C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4008A84C C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4008A84C C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4008A850 B  REGISTER SLVADR[2] (rw): Slave address register.
0x4008A850 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4008A850 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4008A850 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4008A854 B  REGISTER SLVADR[3] (rw): Slave address register.
0x4008A854 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4008A854 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4008A854 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4008A858 B  REGISTER SLVQUAL0 (rw): Slave Qualification for address 0.
0x4008A858 C   FIELD 00w01 QUALMODE0 (rw): Qualify mode for slave address 0.
0x4008A858 C   FIELD 01w07 SLVQUAL0 (rw): Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] <= received address <= SLVQUAL0[7:1]).
0x4008A880 B  REGISTER MONRXDAT (ro): Monitor receiver data register.
0x4008A880 C   FIELD 00w08 MONRXDAT (ro): Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins.
0x4008A880 C   FIELD 08w01 MONSTART (ro): Monitor Received Start.
0x4008A880 C   FIELD 09w01 MONRESTART (ro): Monitor Received Repeated Start.
0x4008A880 C   FIELD 10w01 MONNACK (ro): Monitor Received NACK.
0x4008AE00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x4008AE00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x4008AE00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x4008AE00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x4008AE00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x4008AE00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x4008AE00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x4008AE00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x4008AE00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x4008AE00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x4008AE00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x4008AE00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x4008AE00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x4008AE00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x4008AE00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x4008AE00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x4008AE00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x4008AE00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x4008AE00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x4008AE00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x4008AE00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x4008AE00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x4008AE04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x4008AE04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x4008AE04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x4008AE04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x4008AE04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x4008AE04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x4008AE04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x4008AE04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x4008AE04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x4008AE04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x4008AE04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x4008AE04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x4008AE04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x4008AE04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x4008AE04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x4008AE04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x4008AE04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x4008AE04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x4008AE04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x4008AE04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x4008AE08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x4008AE08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x4008AE08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x4008AE08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x4008AE08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x4008AE08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x4008AE08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x4008AE08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x4008AE08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x4008AE08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x4008AE10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x4008AE10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x4008AE10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x4008AE10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x4008AE10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x4008AE10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x4008AE10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x4008AE10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x4008AE10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x4008AE10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x4008AE14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x4008AE14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x4008AE14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4008AE14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4008AE14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4008AE14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4008AE14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4008AE14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4008AE14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4008AE14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4008AE18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x4008AE18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x4008AE18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x4008AE18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x4008AE18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x4008AE18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x4008AE18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x4008AE18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x4008AE18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x4008AE18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x4008AE18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x4008AE18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x4008AE20 B  REGISTER FIFOWR (rw): FIFO write data.
0x4008AE20 B  REGISTER FIFOWR (rw): FIFO write data.
0x4008AE20 C   FIELD 00w09 TXDATA (rw): Transmit data to the FIFO.
0x4008AE20 C   FIELD 00w16 TXDATA (rw): Transmit data to the FIFO.
0x4008AE20 C   FIELD 16w01 TXSSEL0_N (wo): Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.
0x4008AE20 C   FIELD 17w01 TXSSEL1_N (wo): Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.
0x4008AE20 C   FIELD 18w01 TXSSEL2_N (wo): Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.
0x4008AE20 C   FIELD 19w01 TXSSEL3_N (wo): Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.
0x4008AE20 C   FIELD 20w01 EOT (wo): End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.
0x4008AE20 C   FIELD 21w01 EOF (wo): End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.
0x4008AE20 C   FIELD 22w01 RXIGNORE (wo): Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.
0x4008AE20 C   FIELD 24w04 LEN (wo): Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length.
0x4008AE30 B  REGISTER FIFORD (ro): FIFO read data.
0x4008AE30 B  REGISTER FIFORD (ro): FIFO read data.
0x4008AE30 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x4008AE30 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x4008AE30 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x4008AE30 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x4008AE30 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x4008AE30 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x4008AE30 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x4008AE30 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x4008AE30 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x4008AE30 C   FIELD 20w01 SOT (ro): Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits.
0x4008AE40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x4008AE40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x4008AE40 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x4008AE40 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x4008AE40 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x4008AE40 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x4008AE40 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x4008AE40 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive.
0x4008AE40 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive.
0x4008AE40 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive.
0x4008AE40 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive.
0x4008AE40 C   FIELD 20w01 SOT (ro): Start of transfer flag.
0x4008AFF8 B  REGISTER PSELID (rw): Peripheral Select and Flexcomm ID register.
0x4008AFF8 C   FIELD 00w03 PERSEL (rw): Peripheral Select. This field is writable by software.
0x4008AFF8 C   FIELD 03w01 LOCK (rw): Lock the peripheral select. This field is writable by software.
0x4008AFF8 C   FIELD 04w01 USARTPRESENT (ro): USART present indicator. This field is Read-only.
0x4008AFF8 C   FIELD 05w01 SPIPRESENT (ro): SPI present indicator. This field is Read-only.
0x4008AFF8 C   FIELD 06w01 I2CPRESENT (ro): I2C present indicator. This field is Read-only.
0x4008AFF8 C   FIELD 07w01 I2SPRESENT (ro): I 2S present indicator. This field is Read-only.
0x4008AFF8 C   FIELD 12w20 ID (ro): Flexcomm ID.
0x4008AFFC B  REGISTER ID (ro): Peripheral identification register.
0x4008AFFC B  REGISTER ID (ro): Peripheral identification register.
0x4008AFFC B  REGISTER ID (ro): Peripheral identification register.
0x4008AFFC B  REGISTER PID (rw): Peripheral identification register.
0x4008AFFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x4008AFFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x4008AFFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x4008AFFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x4008AFFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x4008AFFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x4008AFFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation.
0x4008AFFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x4008AFFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x4008AFFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x4008AFFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation.
0x4008AFFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x4008AFFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x4008AFFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x4008AFFC C   FIELD 16w16 ID (rw): Module identifier for the selected function.
0x4008C000 A PERIPHERAL GPIO
0x4008C000 B  CLUSTER B[0]: no description available
0x4008C000 B  REGISTER B_[0] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C000 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C001 B  REGISTER B_[1] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C001 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C002 B  REGISTER B_[2] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C002 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C003 B  REGISTER B_[3] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C003 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C004 B  REGISTER B_[4] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C004 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C005 B  REGISTER B_[5] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C005 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C006 B  REGISTER B_[6] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C006 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C007 B  REGISTER B_[7] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C007 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C008 B  REGISTER B_[8] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C008 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C009 B  REGISTER B_[9] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C009 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C00A B  REGISTER B_[10] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C00A C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C00B B  REGISTER B_[11] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C00B C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C00C B  REGISTER B_[12] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C00C C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C00D B  REGISTER B_[13] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C00D C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C00E B  REGISTER B_[14] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C00E C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C00F B  REGISTER B_[15] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C00F C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C010 B  REGISTER B_[16] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C010 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C011 B  REGISTER B_[17] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C011 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C012 B  REGISTER B_[18] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C012 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C013 B  REGISTER B_[19] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C013 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C014 B  REGISTER B_[20] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C014 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C015 B  REGISTER B_[21] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C015 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C016 B  REGISTER B_[22] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C016 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C017 B  REGISTER B_[23] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C017 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C018 B  REGISTER B_[24] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C018 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C019 B  REGISTER B_[25] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C019 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C01A B  REGISTER B_[26] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C01A C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C01B B  REGISTER B_[27] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C01B C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C01C B  REGISTER B_[28] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C01C C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C01D B  REGISTER B_[29] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C01D C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C01E B  REGISTER B_[30] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C01E C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C01F B  REGISTER B_[31] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C01F C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C020 B  CLUSTER B[1]: no description available
0x4008C020 B  REGISTER B_[0] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C020 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C021 B  REGISTER B_[1] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C021 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C022 B  REGISTER B_[2] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C022 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C023 B  REGISTER B_[3] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C023 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C024 B  REGISTER B_[4] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C024 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C025 B  REGISTER B_[5] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C025 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C026 B  REGISTER B_[6] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C026 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C027 B  REGISTER B_[7] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C027 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C028 B  REGISTER B_[8] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C028 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C029 B  REGISTER B_[9] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C029 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C02A B  REGISTER B_[10] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C02A C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C02B B  REGISTER B_[11] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C02B C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C02C B  REGISTER B_[12] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C02C C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C02D B  REGISTER B_[13] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C02D C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C02E B  REGISTER B_[14] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C02E C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C02F B  REGISTER B_[15] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C02F C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C030 B  REGISTER B_[16] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C030 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C031 B  REGISTER B_[17] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C031 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C032 B  REGISTER B_[18] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C032 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C033 B  REGISTER B_[19] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C033 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C034 B  REGISTER B_[20] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C034 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C035 B  REGISTER B_[21] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C035 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C036 B  REGISTER B_[22] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C036 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C037 B  REGISTER B_[23] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C037 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C038 B  REGISTER B_[24] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C038 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C039 B  REGISTER B_[25] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C039 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C03A B  REGISTER B_[26] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C03A C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C03B B  REGISTER B_[27] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C03B C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C03C B  REGISTER B_[28] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C03C C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C03D B  REGISTER B_[29] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C03D C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C03E B  REGISTER B_[30] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C03E C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C03F B  REGISTER B_[31] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C03F C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C040 B  CLUSTER B[2]: no description available
0x4008C040 B  REGISTER B_[0] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C040 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C041 B  REGISTER B_[1] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C041 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C042 B  REGISTER B_[2] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C042 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C043 B  REGISTER B_[3] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C043 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C044 B  REGISTER B_[4] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C044 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C045 B  REGISTER B_[5] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C045 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C046 B  REGISTER B_[6] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C046 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C047 B  REGISTER B_[7] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C047 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C048 B  REGISTER B_[8] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C048 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C049 B  REGISTER B_[9] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C049 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C04A B  REGISTER B_[10] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C04A C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C04B B  REGISTER B_[11] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C04B C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C04C B  REGISTER B_[12] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C04C C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C04D B  REGISTER B_[13] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C04D C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C04E B  REGISTER B_[14] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C04E C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C04F B  REGISTER B_[15] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C04F C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C050 B  REGISTER B_[16] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C050 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C051 B  REGISTER B_[17] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C051 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C052 B  REGISTER B_[18] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C052 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C053 B  REGISTER B_[19] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C053 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C054 B  REGISTER B_[20] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C054 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C055 B  REGISTER B_[21] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C055 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C056 B  REGISTER B_[22] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C056 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C057 B  REGISTER B_[23] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C057 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C058 B  REGISTER B_[24] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C058 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C059 B  REGISTER B_[25] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C059 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C05A B  REGISTER B_[26] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C05A C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C05B B  REGISTER B_[27] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C05B C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C05C B  REGISTER B_[28] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C05C C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C05D B  REGISTER B_[29] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C05D C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C05E B  REGISTER B_[30] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C05E C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C05F B  REGISTER B_[31] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C05F C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C060 B  CLUSTER B[3]: no description available
0x4008C060 B  REGISTER B_[0] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C060 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C061 B  REGISTER B_[1] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C061 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C062 B  REGISTER B_[2] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C062 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C063 B  REGISTER B_[3] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C063 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C064 B  REGISTER B_[4] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C064 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C065 B  REGISTER B_[5] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C065 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C066 B  REGISTER B_[6] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C066 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C067 B  REGISTER B_[7] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C067 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C068 B  REGISTER B_[8] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C068 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C069 B  REGISTER B_[9] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C069 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C06A B  REGISTER B_[10] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C06A C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C06B B  REGISTER B_[11] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C06B C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C06C B  REGISTER B_[12] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C06C C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C06D B  REGISTER B_[13] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C06D C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C06E B  REGISTER B_[14] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C06E C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C06F B  REGISTER B_[15] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C06F C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C070 B  REGISTER B_[16] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C070 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C071 B  REGISTER B_[17] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C071 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C072 B  REGISTER B_[18] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C072 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C073 B  REGISTER B_[19] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C073 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C074 B  REGISTER B_[20] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C074 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C075 B  REGISTER B_[21] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C075 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C076 B  REGISTER B_[22] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C076 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C077 B  REGISTER B_[23] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C077 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C078 B  REGISTER B_[24] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C078 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C079 B  REGISTER B_[25] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C079 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C07A B  REGISTER B_[26] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C07A C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C07B B  REGISTER B_[27] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C07B C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C07C B  REGISTER B_[28] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C07C C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C07D B  REGISTER B_[29] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C07D C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C07E B  REGISTER B_[30] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C07E C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C07F B  REGISTER B_[31] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C07F C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C080 B  CLUSTER B[4]: no description available
0x4008C080 B  REGISTER B_[0] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C080 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C081 B  REGISTER B_[1] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C081 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C082 B  REGISTER B_[2] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C082 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C083 B  REGISTER B_[3] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C083 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C084 B  REGISTER B_[4] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C084 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C085 B  REGISTER B_[5] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C085 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C086 B  REGISTER B_[6] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C086 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C087 B  REGISTER B_[7] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C087 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C088 B  REGISTER B_[8] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C088 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C089 B  REGISTER B_[9] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C089 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C08A B  REGISTER B_[10] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C08A C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C08B B  REGISTER B_[11] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C08B C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C08C B  REGISTER B_[12] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C08C C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C08D B  REGISTER B_[13] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C08D C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C08E B  REGISTER B_[14] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C08E C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C08F B  REGISTER B_[15] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C08F C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C090 B  REGISTER B_[16] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C090 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C091 B  REGISTER B_[17] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C091 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C092 B  REGISTER B_[18] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C092 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C093 B  REGISTER B_[19] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C093 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C094 B  REGISTER B_[20] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C094 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C095 B  REGISTER B_[21] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C095 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C096 B  REGISTER B_[22] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C096 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C097 B  REGISTER B_[23] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C097 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C098 B  REGISTER B_[24] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C098 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C099 B  REGISTER B_[25] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C099 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C09A B  REGISTER B_[26] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C09A C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C09B B  REGISTER B_[27] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C09B C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C09C B  REGISTER B_[28] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C09C C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C09D B  REGISTER B_[29] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C09D C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C09E B  REGISTER B_[30] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C09E C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C09F B  REGISTER B_[31] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C09F C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0A0 B  CLUSTER B[5]: no description available
0x4008C0A0 B  REGISTER B_[0] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0A0 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0A1 B  REGISTER B_[1] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0A1 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0A2 B  REGISTER B_[2] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0A2 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0A3 B  REGISTER B_[3] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0A3 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0A4 B  REGISTER B_[4] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0A4 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0A5 B  REGISTER B_[5] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0A5 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0A6 B  REGISTER B_[6] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0A6 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0A7 B  REGISTER B_[7] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0A7 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0A8 B  REGISTER B_[8] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0A8 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0A9 B  REGISTER B_[9] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0A9 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0AA B  REGISTER B_[10] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0AA C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0AB B  REGISTER B_[11] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0AB C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0AC B  REGISTER B_[12] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0AC C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0AD B  REGISTER B_[13] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0AD C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0AE B  REGISTER B_[14] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0AE C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0AF B  REGISTER B_[15] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0AF C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0B0 B  REGISTER B_[16] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0B0 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0B1 B  REGISTER B_[17] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0B1 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0B2 B  REGISTER B_[18] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0B2 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0B3 B  REGISTER B_[19] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0B3 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0B4 B  REGISTER B_[20] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0B4 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0B5 B  REGISTER B_[21] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0B5 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0B6 B  REGISTER B_[22] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0B6 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0B7 B  REGISTER B_[23] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0B7 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0B8 B  REGISTER B_[24] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0B8 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0B9 B  REGISTER B_[25] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0B9 C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0BA B  REGISTER B_[26] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0BA C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0BB B  REGISTER B_[27] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0BB C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0BC B  REGISTER B_[28] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0BC C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0BD B  REGISTER B_[29] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0BD C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0BE B  REGISTER B_[30] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0BE C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008C0BF B  REGISTER B_[31] (rw): Byte pin registers for all port 0 and 1 GPIO pins
0x4008C0BF C   FIELD 00w01 PBYTE (rw): Read: state of the pin PIOm_n, regardless of direction, masking, or alternate function, except that pins configured as analog I/O always read as 0. One register for each port pin. Supported pins depends on the specific device and package. Write: loads the pin's output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D000 B  CLUSTER W[0]: no description available
0x4008D000 B  REGISTER W_[0] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D000 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D004 B  REGISTER W_[1] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D004 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D008 B  REGISTER W_[2] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D008 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D00C B  REGISTER W_[3] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D00C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D010 B  REGISTER W_[4] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D010 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D014 B  REGISTER W_[5] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D014 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D018 B  REGISTER W_[6] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D018 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D01C B  REGISTER W_[7] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D01C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D020 B  REGISTER W_[8] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D020 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D024 B  REGISTER W_[9] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D024 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D028 B  REGISTER W_[10] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D028 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D02C B  REGISTER W_[11] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D02C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D030 B  REGISTER W_[12] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D030 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D034 B  REGISTER W_[13] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D034 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D038 B  REGISTER W_[14] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D038 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D03C B  REGISTER W_[15] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D03C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D040 B  REGISTER W_[16] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D040 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D044 B  REGISTER W_[17] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D044 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D048 B  REGISTER W_[18] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D048 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D04C B  REGISTER W_[19] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D04C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D050 B  REGISTER W_[20] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D050 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D054 B  REGISTER W_[21] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D054 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D058 B  REGISTER W_[22] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D058 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D05C B  REGISTER W_[23] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D05C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D060 B  REGISTER W_[24] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D060 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D064 B  REGISTER W_[25] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D064 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D068 B  REGISTER W_[26] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D068 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D06C B  REGISTER W_[27] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D06C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D070 B  REGISTER W_[28] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D070 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D074 B  REGISTER W_[29] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D074 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D078 B  REGISTER W_[30] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D078 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D07C B  REGISTER W_[31] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D07C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D080 B  CLUSTER W[1]: no description available
0x4008D080 B  REGISTER W_[0] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D080 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D084 B  REGISTER W_[1] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D084 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D088 B  REGISTER W_[2] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D088 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D08C B  REGISTER W_[3] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D08C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D090 B  REGISTER W_[4] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D090 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D094 B  REGISTER W_[5] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D094 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D098 B  REGISTER W_[6] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D098 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D09C B  REGISTER W_[7] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D09C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0A0 B  REGISTER W_[8] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0A0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0A4 B  REGISTER W_[9] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0A4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0A8 B  REGISTER W_[10] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0A8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0AC B  REGISTER W_[11] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0AC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0B0 B  REGISTER W_[12] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0B0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0B4 B  REGISTER W_[13] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0B4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0B8 B  REGISTER W_[14] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0B8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0BC B  REGISTER W_[15] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0BC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0C0 B  REGISTER W_[16] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0C0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0C4 B  REGISTER W_[17] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0C4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0C8 B  REGISTER W_[18] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0C8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0CC B  REGISTER W_[19] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0CC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0D0 B  REGISTER W_[20] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0D0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0D4 B  REGISTER W_[21] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0D4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0D8 B  REGISTER W_[22] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0D8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0DC B  REGISTER W_[23] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0DC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0E0 B  REGISTER W_[24] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0E0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0E4 B  REGISTER W_[25] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0E4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0E8 B  REGISTER W_[26] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0E8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0EC B  REGISTER W_[27] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0EC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0F0 B  REGISTER W_[28] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0F0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0F4 B  REGISTER W_[29] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0F4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0F8 B  REGISTER W_[30] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0F8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D0FC B  REGISTER W_[31] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D0FC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D100 B  CLUSTER W[2]: no description available
0x4008D100 B  REGISTER W_[0] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D100 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D104 B  REGISTER W_[1] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D104 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D108 B  REGISTER W_[2] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D108 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D10C B  REGISTER W_[3] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D10C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D110 B  REGISTER W_[4] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D110 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D114 B  REGISTER W_[5] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D114 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D118 B  REGISTER W_[6] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D118 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D11C B  REGISTER W_[7] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D11C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D120 B  REGISTER W_[8] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D120 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D124 B  REGISTER W_[9] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D124 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D128 B  REGISTER W_[10] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D128 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D12C B  REGISTER W_[11] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D12C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D130 B  REGISTER W_[12] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D130 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D134 B  REGISTER W_[13] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D134 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D138 B  REGISTER W_[14] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D138 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D13C B  REGISTER W_[15] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D13C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D140 B  REGISTER W_[16] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D140 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D144 B  REGISTER W_[17] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D144 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D148 B  REGISTER W_[18] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D148 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D14C B  REGISTER W_[19] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D14C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D150 B  REGISTER W_[20] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D150 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D154 B  REGISTER W_[21] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D154 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D158 B  REGISTER W_[22] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D158 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D15C B  REGISTER W_[23] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D15C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D160 B  REGISTER W_[24] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D160 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D164 B  REGISTER W_[25] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D164 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D168 B  REGISTER W_[26] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D168 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D16C B  REGISTER W_[27] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D16C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D170 B  REGISTER W_[28] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D170 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D174 B  REGISTER W_[29] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D174 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D178 B  REGISTER W_[30] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D178 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D17C B  REGISTER W_[31] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D17C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D180 B  CLUSTER W[3]: no description available
0x4008D180 B  REGISTER W_[0] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D180 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D184 B  REGISTER W_[1] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D184 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D188 B  REGISTER W_[2] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D188 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D18C B  REGISTER W_[3] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D18C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D190 B  REGISTER W_[4] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D190 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D194 B  REGISTER W_[5] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D194 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D198 B  REGISTER W_[6] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D198 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D19C B  REGISTER W_[7] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D19C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1A0 B  REGISTER W_[8] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1A0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1A4 B  REGISTER W_[9] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1A4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1A8 B  REGISTER W_[10] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1A8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1AC B  REGISTER W_[11] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1AC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1B0 B  REGISTER W_[12] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1B0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1B4 B  REGISTER W_[13] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1B4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1B8 B  REGISTER W_[14] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1B8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1BC B  REGISTER W_[15] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1BC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1C0 B  REGISTER W_[16] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1C0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1C4 B  REGISTER W_[17] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1C4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1C8 B  REGISTER W_[18] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1C8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1CC B  REGISTER W_[19] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1CC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1D0 B  REGISTER W_[20] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1D0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1D4 B  REGISTER W_[21] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1D4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1D8 B  REGISTER W_[22] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1D8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1DC B  REGISTER W_[23] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1DC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1E0 B  REGISTER W_[24] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1E0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1E4 B  REGISTER W_[25] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1E4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1E8 B  REGISTER W_[26] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1E8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1EC B  REGISTER W_[27] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1EC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1F0 B  REGISTER W_[28] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1F0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1F4 B  REGISTER W_[29] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1F4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1F8 B  REGISTER W_[30] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1F8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D1FC B  REGISTER W_[31] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D1FC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D200 B  CLUSTER W[4]: no description available
0x4008D200 B  REGISTER W_[0] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D200 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D204 B  REGISTER W_[1] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D204 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D208 B  REGISTER W_[2] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D208 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D20C B  REGISTER W_[3] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D20C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D210 B  REGISTER W_[4] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D210 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D214 B  REGISTER W_[5] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D214 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D218 B  REGISTER W_[6] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D218 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D21C B  REGISTER W_[7] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D21C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D220 B  REGISTER W_[8] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D220 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D224 B  REGISTER W_[9] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D224 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D228 B  REGISTER W_[10] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D228 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D22C B  REGISTER W_[11] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D22C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D230 B  REGISTER W_[12] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D230 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D234 B  REGISTER W_[13] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D234 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D238 B  REGISTER W_[14] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D238 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D23C B  REGISTER W_[15] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D23C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D240 B  REGISTER W_[16] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D240 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D244 B  REGISTER W_[17] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D244 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D248 B  REGISTER W_[18] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D248 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D24C B  REGISTER W_[19] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D24C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D250 B  REGISTER W_[20] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D250 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D254 B  REGISTER W_[21] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D254 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D258 B  REGISTER W_[22] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D258 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D25C B  REGISTER W_[23] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D25C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D260 B  REGISTER W_[24] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D260 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D264 B  REGISTER W_[25] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D264 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D268 B  REGISTER W_[26] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D268 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D26C B  REGISTER W_[27] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D26C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D270 B  REGISTER W_[28] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D270 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D274 B  REGISTER W_[29] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D274 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D278 B  REGISTER W_[30] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D278 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D27C B  REGISTER W_[31] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D27C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D280 B  CLUSTER W[5]: no description available
0x4008D280 B  REGISTER W_[0] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D280 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D284 B  REGISTER W_[1] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D284 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D288 B  REGISTER W_[2] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D288 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D28C B  REGISTER W_[3] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D28C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D290 B  REGISTER W_[4] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D290 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D294 B  REGISTER W_[5] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D294 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D298 B  REGISTER W_[6] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D298 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D29C B  REGISTER W_[7] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D29C C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2A0 B  REGISTER W_[8] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2A0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2A4 B  REGISTER W_[9] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2A4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2A8 B  REGISTER W_[10] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2A8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2AC B  REGISTER W_[11] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2AC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2B0 B  REGISTER W_[12] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2B0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2B4 B  REGISTER W_[13] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2B4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2B8 B  REGISTER W_[14] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2B8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2BC B  REGISTER W_[15] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2BC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2C0 B  REGISTER W_[16] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2C0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2C4 B  REGISTER W_[17] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2C4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2C8 B  REGISTER W_[18] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2C8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2CC B  REGISTER W_[19] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2CC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2D0 B  REGISTER W_[20] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2D0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2D4 B  REGISTER W_[21] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2D4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2D8 B  REGISTER W_[22] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2D8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2DC B  REGISTER W_[23] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2DC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2E0 B  REGISTER W_[24] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2E0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2E4 B  REGISTER W_[25] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2E4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2E8 B  REGISTER W_[26] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2E8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2EC B  REGISTER W_[27] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2EC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2F0 B  REGISTER W_[28] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2F0 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2F4 B  REGISTER W_[29] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2F4 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2F8 B  REGISTER W_[30] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2F8 C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008D2FC B  REGISTER W_[31] (rw): Word pin registers for all port 0 and 1 GPIO pins
0x4008D2FC C   FIELD 00w32 PWORD (rw): Read 0: pin PIOm_n is LOW. Write 0: clear output bit. Read 0xFFFF FFFF: pin PIOm_n is HIGH. Write any value 0x0000 0001 to 0xFFFF FFFF: set output bit. Only 0 or 0xFFFF FFFF can be read. Writing any value other than 0 will set the output bit. One register for each port pin. Supported pins depends on the specific device and package.
0x4008E000 B  REGISTER DIR[0] (rw): Direction registers
0x4008E000 C   FIELD 00w32 DIRP (rw): Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output.
0x4008E004 B  REGISTER DIR[1] (rw): Direction registers
0x4008E004 C   FIELD 00w32 DIRP (rw): Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output.
0x4008E008 B  REGISTER DIR[2] (rw): Direction registers
0x4008E008 C   FIELD 00w32 DIRP (rw): Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output.
0x4008E00C B  REGISTER DIR[3] (rw): Direction registers
0x4008E00C C   FIELD 00w32 DIRP (rw): Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output.
0x4008E010 B  REGISTER DIR[4] (rw): Direction registers
0x4008E010 C   FIELD 00w32 DIRP (rw): Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output.
0x4008E014 B  REGISTER DIR[5] (rw): Direction registers
0x4008E014 C   FIELD 00w32 DIRP (rw): Selects pin direction for pin PIOm_n (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = input. 1 = output.
0x4008E080 B  REGISTER MASK[0] (rw): Mask register
0x4008E080 C   FIELD 00w32 MASKP (rw): Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected.
0x4008E084 B  REGISTER MASK[1] (rw): Mask register
0x4008E084 C   FIELD 00w32 MASKP (rw): Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected.
0x4008E088 B  REGISTER MASK[2] (rw): Mask register
0x4008E088 C   FIELD 00w32 MASKP (rw): Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected.
0x4008E08C B  REGISTER MASK[3] (rw): Mask register
0x4008E08C C   FIELD 00w32 MASKP (rw): Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected.
0x4008E090 B  REGISTER MASK[4] (rw): Mask register
0x4008E090 C   FIELD 00w32 MASKP (rw): Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected.
0x4008E094 B  REGISTER MASK[5] (rw): Mask register
0x4008E094 C   FIELD 00w32 MASKP (rw): Controls which bits corresponding to PIOm_n are active in the MPORT register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read MPORT: pin state; write MPORT: load output bit. 1 = Read MPORT: 0; write MPORT: output bit not affected.
0x4008E100 B  REGISTER PIN[0] (rw): Port pin register
0x4008E100 C   FIELD 00w32 PORT (rw): Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit.
0x4008E104 B  REGISTER PIN[1] (rw): Port pin register
0x4008E104 C   FIELD 00w32 PORT (rw): Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit.
0x4008E108 B  REGISTER PIN[2] (rw): Port pin register
0x4008E108 C   FIELD 00w32 PORT (rw): Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit.
0x4008E10C B  REGISTER PIN[3] (rw): Port pin register
0x4008E10C C   FIELD 00w32 PORT (rw): Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit.
0x4008E110 B  REGISTER PIN[4] (rw): Port pin register
0x4008E110 C   FIELD 00w32 PORT (rw): Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit.
0x4008E114 B  REGISTER PIN[5] (rw): Port pin register
0x4008E114 C   FIELD 00w32 PORT (rw): Reads pin states or loads output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is low; write: clear output bit. 1 = Read: pin is high; write: set output bit.
0x4008E180 B  REGISTER MPIN[0] (rw): Masked port register
0x4008E180 C   FIELD 00w32 MPORTP (rw): Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0.
0x4008E184 B  REGISTER MPIN[1] (rw): Masked port register
0x4008E184 C   FIELD 00w32 MPORTP (rw): Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0.
0x4008E188 B  REGISTER MPIN[2] (rw): Masked port register
0x4008E188 C   FIELD 00w32 MPORTP (rw): Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0.
0x4008E18C B  REGISTER MPIN[3] (rw): Masked port register
0x4008E18C C   FIELD 00w32 MPORTP (rw): Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0.
0x4008E190 B  REGISTER MPIN[4] (rw): Masked port register
0x4008E190 C   FIELD 00w32 MPORTP (rw): Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0.
0x4008E194 B  REGISTER MPIN[5] (rw): Masked port register
0x4008E194 C   FIELD 00w32 MPORTP (rw): Masked port register (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: pin is LOW and/or the corresponding bit in the MASK register is 1; write: clear output bit if the corresponding bit in the MASK register is 0. 1 = Read: pin is HIGH and the corresponding bit in the MASK register is 0; write: set output bit if the corresponding bit in the MASK register is 0.
0x4008E200 B  REGISTER SET[0] (rw): Write: Set register for port Read: output bits for port
0x4008E200 C   FIELD 00w32 SETP (rw): Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit.
0x4008E204 B  REGISTER SET[1] (rw): Write: Set register for port Read: output bits for port
0x4008E204 C   FIELD 00w32 SETP (rw): Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit.
0x4008E208 B  REGISTER SET[2] (rw): Write: Set register for port Read: output bits for port
0x4008E208 C   FIELD 00w32 SETP (rw): Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit.
0x4008E20C B  REGISTER SET[3] (rw): Write: Set register for port Read: output bits for port
0x4008E20C C   FIELD 00w32 SETP (rw): Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit.
0x4008E210 B  REGISTER SET[4] (rw): Write: Set register for port Read: output bits for port
0x4008E210 C   FIELD 00w32 SETP (rw): Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit.
0x4008E214 B  REGISTER SET[5] (rw): Write: Set register for port Read: output bits for port
0x4008E214 C   FIELD 00w32 SETP (rw): Read or set output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = Read: output bit: write: no operation. 1 = Read: output bit; write: set output bit.
0x4008E280 B  REGISTER CLR[0] (wo): Clear port
0x4008E280 C   FIELD 00w32 CLRP (wo): Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit.
0x4008E284 B  REGISTER CLR[1] (wo): Clear port
0x4008E284 C   FIELD 00w32 CLRP (wo): Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit.
0x4008E288 B  REGISTER CLR[2] (wo): Clear port
0x4008E288 C   FIELD 00w32 CLRP (wo): Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit.
0x4008E28C B  REGISTER CLR[3] (wo): Clear port
0x4008E28C C   FIELD 00w32 CLRP (wo): Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit.
0x4008E290 B  REGISTER CLR[4] (wo): Clear port
0x4008E290 C   FIELD 00w32 CLRP (wo): Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit.
0x4008E294 B  REGISTER CLR[5] (wo): Clear port
0x4008E294 C   FIELD 00w32 CLRP (wo): Clear output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear output bit.
0x4008E300 B  REGISTER NOT[0] (wo): Toggle port
0x4008E300 C   FIELD 00w32 NOTP (wo): Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit.
0x4008E304 B  REGISTER NOT[1] (wo): Toggle port
0x4008E304 C   FIELD 00w32 NOTP (wo): Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit.
0x4008E308 B  REGISTER NOT[2] (wo): Toggle port
0x4008E308 C   FIELD 00w32 NOTP (wo): Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit.
0x4008E30C B  REGISTER NOT[3] (wo): Toggle port
0x4008E30C C   FIELD 00w32 NOTP (wo): Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit.
0x4008E310 B  REGISTER NOT[4] (wo): Toggle port
0x4008E310 C   FIELD 00w32 NOTP (wo): Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit.
0x4008E314 B  REGISTER NOT[5] (wo): Toggle port
0x4008E314 C   FIELD 00w32 NOTP (wo): Toggle output bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle output bit.
0x4008E380 B  REGISTER DIRSET[0] (wo): Set pin direction bits for port
0x4008E380 C   FIELD 00w29 DIRSETP (wo): Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit.
0x4008E384 B  REGISTER DIRSET[1] (wo): Set pin direction bits for port
0x4008E384 C   FIELD 00w29 DIRSETP (wo): Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit.
0x4008E388 B  REGISTER DIRSET[2] (wo): Set pin direction bits for port
0x4008E388 C   FIELD 00w29 DIRSETP (wo): Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit.
0x4008E38C B  REGISTER DIRSET[3] (wo): Set pin direction bits for port
0x4008E38C C   FIELD 00w29 DIRSETP (wo): Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit.
0x4008E390 B  REGISTER DIRSET[4] (wo): Set pin direction bits for port
0x4008E390 C   FIELD 00w29 DIRSETP (wo): Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit.
0x4008E394 B  REGISTER DIRSET[5] (wo): Set pin direction bits for port
0x4008E394 C   FIELD 00w29 DIRSETP (wo): Set direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Set direction bit.
0x4008E400 B  REGISTER DIRCLR[0] (wo): Clear pin direction bits for port
0x4008E400 C   FIELD 00w29 DIRCLRP (wo): Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit.
0x4008E404 B  REGISTER DIRCLR[1] (wo): Clear pin direction bits for port
0x4008E404 C   FIELD 00w29 DIRCLRP (wo): Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit.
0x4008E408 B  REGISTER DIRCLR[2] (wo): Clear pin direction bits for port
0x4008E408 C   FIELD 00w29 DIRCLRP (wo): Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit.
0x4008E40C B  REGISTER DIRCLR[3] (wo): Clear pin direction bits for port
0x4008E40C C   FIELD 00w29 DIRCLRP (wo): Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit.
0x4008E410 B  REGISTER DIRCLR[4] (wo): Clear pin direction bits for port
0x4008E410 C   FIELD 00w29 DIRCLRP (wo): Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit.
0x4008E414 B  REGISTER DIRCLR[5] (wo): Clear pin direction bits for port
0x4008E414 C   FIELD 00w29 DIRCLRP (wo): Clear direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = No operation. 1 = Clear direction bit.
0x4008E480 B  REGISTER DIRNOT[0] (wo): Toggle pin direction bits for port
0x4008E480 C   FIELD 00w29 DIRNOTP (wo): Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit.
0x4008E484 B  REGISTER DIRNOT[1] (wo): Toggle pin direction bits for port
0x4008E484 C   FIELD 00w29 DIRNOTP (wo): Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit.
0x4008E488 B  REGISTER DIRNOT[2] (wo): Toggle pin direction bits for port
0x4008E488 C   FIELD 00w29 DIRNOTP (wo): Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit.
0x4008E48C B  REGISTER DIRNOT[3] (wo): Toggle pin direction bits for port
0x4008E48C C   FIELD 00w29 DIRNOTP (wo): Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit.
0x4008E490 B  REGISTER DIRNOT[4] (wo): Toggle pin direction bits for port
0x4008E490 C   FIELD 00w29 DIRNOTP (wo): Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit.
0x4008E494 B  REGISTER DIRNOT[5] (wo): Toggle pin direction bits for port
0x4008E494 C   FIELD 00w29 DIRNOTP (wo): Toggle direction bits (bit 0 = PIOn_0, bit 1 = PIOn_1, etc.). Supported pins depends on the specific device and package. 0 = no operation. 1 = Toggle direction bit.
0x40090000 A PERIPHERAL DMIC0
0x40090000 B  CLUSTER CHANNEL[0]: no description available
0x40090000 B  REGISTER OSR0 (rw): Oversample Rate register 0
0x40090000 C   FIELD 00w08 OSR (rw): Selects the oversample rate for the related input channel.
0x40090004 B  REGISTER DIVHFCLK0 (rw): DMIC Clock Register 0
0x40090004 C   FIELD 00w04 PDMDIV (rw): PDM clock divider value. 0 = divide by 1 1 = divide by 2 2 = divide by 3 3 = divide by 4 4 = divide by 6 5 = divide by 8 6 = divide by 12 7 = divide by 16 8 = divide by 24 9 = divide by 32 10 = divide by 48 11 = divide by 64 12 = divide by 96 13 = divide by 128 others = reserved.
0x40090008 B  REGISTER PREAC2FSCOEF0 (rw): Pre-Emphasis Filter Coefficient for 2 FS register
0x40090008 C   FIELD 00w02 COMP (rw): Pre-emphasis filer coefficient for 2 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13
0x4009000C B  REGISTER PREAC4FSCOEF0 (rw): Pre-Emphasis Filter Coefficient for 4 FS register
0x4009000C C   FIELD 00w02 COMP (rw): Pre-emphasis filer coefficient for 4 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13
0x40090010 B  REGISTER GAINSHIFT0 (rw): Decimator Gain Shift register
0x40090010 C   FIELD 00w06 GAIN (rw): Gain control, as a positive or negative (two's complement) number of bits to shift.
0x40090080 B  REGISTER FIFO_CTRL0 (rw): FIFO Control register 0
0x40090080 C   FIELD 00w01 ENABLE (rw): FIFO enable.
0x40090080 C   FIELD 01w01 RESETN (rw): FIFO reset.
0x40090080 C   FIELD 02w01 INTEN (rw): Interrupt enable.
0x40090080 C   FIELD 03w01 DMAEN (rw): DMA enable
0x40090080 C   FIELD 16w05 TRIGLVL (rw): FIFO trigger level. Selects the data trigger level for interrupt or DMA operation. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode See Section 4.5.66 'Hardware Wake-up control register'. 0 = trigger when the FIFO has received one entry (is no longer empty). 1 = trigger when the FIFO has received two entries. 15 = trigger when the FIFO has received 16 entries (has become full).
0x40090084 B  REGISTER FIFO_STATUS0 (rw): FIFO Status register 0
0x40090084 C   FIELD 00w01 INT (rw): Interrupt flag. Asserted when FIFO data reaches the level specified in the FIFOCTRL register. Writing a one to this bit clears the flag. Remark: note that the bus clock to the DMIC subsystem must be running in order for an interrupt to occur.
0x40090084 C   FIELD 01w01 OVERRUN (rw): Overrun flag. Indicates that a FIFO overflow has occurred at some point. Writing a one to this bit clears the flag. This flag does not cause an interrupt.
0x40090084 C   FIELD 02w01 UNDERRUN (rw): Underrun flag. Indicates that a FIFO underflow has occurred at some point. Writing a one to this bit clears the flag.
0x40090088 B  REGISTER FIFO_DATA0 (rw): FIFO Data Register 0
0x40090088 C   FIELD 00w24 DATA (rw): Data from the top of the input filter FIFO.
0x4009008C B  REGISTER PHY_CTRL0 (rw): PDM Source Configuration register 0
0x4009008C C   FIELD 00w01 PHY_FALL (rw): Capture PDM_DATA
0x4009008C C   FIELD 01w01 PHY_HALF (rw): Half rate sampling
0x40090090 B  REGISTER DC_CTRL0 (rw): DC Control register 0
0x40090090 C   FIELD 00w02 DCPOLE (rw): DC block filter
0x40090090 C   FIELD 04w04 DCGAIN (rw): Fine gain adjustment in the form of a number of bits to downshift.
0x40090090 C   FIELD 08w01 SATURATEAT16BIT (rw): Selects 16-bit saturation.
0x40090100 B  CLUSTER CHANNEL[1]: no description available
0x40090100 B  REGISTER OSR1 (rw): Oversample Rate register 0
0x40090100 C   FIELD 00w08 OSR (rw): Selects the oversample rate for the related input channel.
0x40090104 B  REGISTER DIVHFCLK1 (rw): DMIC Clock Register 0
0x40090104 C   FIELD 00w04 PDMDIV (rw): PDM clock divider value. 0 = divide by 1 1 = divide by 2 2 = divide by 3 3 = divide by 4 4 = divide by 6 5 = divide by 8 6 = divide by 12 7 = divide by 16 8 = divide by 24 9 = divide by 32 10 = divide by 48 11 = divide by 64 12 = divide by 96 13 = divide by 128 others = reserved.
0x40090108 B  REGISTER PREAC2FSCOEF1 (rw): Pre-Emphasis Filter Coefficient for 2 FS register
0x40090108 C   FIELD 00w02 COMP (rw): Pre-emphasis filer coefficient for 2 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13
0x4009010C B  REGISTER PREAC4FSCOEF1 (rw): Pre-Emphasis Filter Coefficient for 4 FS register
0x4009010C C   FIELD 00w02 COMP (rw): Pre-emphasis filer coefficient for 4 FS mode. 0 = Compensation = 0 1 = Compensation = 16 2 = Compensation = 15 3 = Compensation = 13
0x40090110 B  REGISTER GAINSHIFT1 (rw): Decimator Gain Shift register
0x40090110 C   FIELD 00w06 GAIN (rw): Gain control, as a positive or negative (two's complement) number of bits to shift.
0x40090180 B  REGISTER FIFO_CTRL1 (rw): FIFO Control register 0
0x40090180 C   FIELD 00w01 ENABLE (rw): FIFO enable.
0x40090180 C   FIELD 01w01 RESETN (rw): FIFO reset.
0x40090180 C   FIELD 02w01 INTEN (rw): Interrupt enable.
0x40090180 C   FIELD 03w01 DMAEN (rw): DMA enable
0x40090180 C   FIELD 16w05 TRIGLVL (rw): FIFO trigger level. Selects the data trigger level for interrupt or DMA operation. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode See Section 4.5.66 'Hardware Wake-up control register'. 0 = trigger when the FIFO has received one entry (is no longer empty). 1 = trigger when the FIFO has received two entries. 15 = trigger when the FIFO has received 16 entries (has become full).
0x40090184 B  REGISTER FIFO_STATUS1 (rw): FIFO Status register 0
0x40090184 C   FIELD 00w01 INT (rw): Interrupt flag. Asserted when FIFO data reaches the level specified in the FIFOCTRL register. Writing a one to this bit clears the flag. Remark: note that the bus clock to the DMIC subsystem must be running in order for an interrupt to occur.
0x40090184 C   FIELD 01w01 OVERRUN (rw): Overrun flag. Indicates that a FIFO overflow has occurred at some point. Writing a one to this bit clears the flag. This flag does not cause an interrupt.
0x40090184 C   FIELD 02w01 UNDERRUN (rw): Underrun flag. Indicates that a FIFO underflow has occurred at some point. Writing a one to this bit clears the flag.
0x40090188 B  REGISTER FIFO_DATA1 (rw): FIFO Data Register 0
0x40090188 C   FIELD 00w24 DATA (rw): Data from the top of the input filter FIFO.
0x4009018C B  REGISTER PHY_CTRL1 (rw): PDM Source Configuration register 0
0x4009018C C   FIELD 00w01 PHY_FALL (rw): Capture PDM_DATA
0x4009018C C   FIELD 01w01 PHY_HALF (rw): Half rate sampling
0x40090190 B  REGISTER DC_CTRL1 (rw): DC Control register 0
0x40090190 C   FIELD 00w02 DCPOLE (rw): DC block filter
0x40090190 C   FIELD 04w04 DCGAIN (rw): Fine gain adjustment in the form of a number of bits to downshift.
0x40090190 C   FIELD 08w01 SATURATEAT16BIT (rw): Selects 16-bit saturation.
0x40090F00 B  REGISTER CHANEN (rw): Channel Enable register
0x40090F00 C   FIELD 00w01 EN_CH0 (rw): Enable channel 0. When 1, PDM channel 0 is enabled.
0x40090F00 C   FIELD 01w01 EN_CH1 (rw): Enable channel 1. When 1, PDM channel 1 is enabled.
0x40090F0C B  REGISTER IOCFG (rw): I/O Configuration register
0x40090F0C C   FIELD 00w01 CLK_BYPASS0 (rw): Bypass CLK0. When 1, PDM_DATA1 becomes the clock for PDM channel 0. This provides for the possibility of an external codec taking over the PDM bus.
0x40090F0C C   FIELD 01w01 CLK_BYPASS1 (rw): Bypass CLK1. When 1, PDM_DATA1 becomes the clock for PDM channel 1. This provides for the possibility of an external codec taking over the PDM bus.
0x40090F0C C   FIELD 02w01 STEREO_DATA0 (rw): Stereo PDM select. When 1, PDM_DATA0 is routed to both PDM channels in a configuration that supports a single stereo digital microphone.
0x40090F10 B  REGISTER USE2FS (rw): Use 2FS register
0x40090F10 C   FIELD 00w01 USE2FS (rw): Use 2FS register
0x40090F80 B  REGISTER HWVADGAIN (rw): HWVAD input gain register
0x40090F80 C   FIELD 00w04 INPUTGAIN (rw): Shift value for input bits 0x00 -10 bits 0x01 -8 bits 0x02 -6 bits 0x03 -4 bits 0x04 -2 bits 0x05 0 bits (default) 0x06 +2 bits 0x07 +4 bits 0x08 +6 bits 0x09 +8 bits 0x0A +10 bits 0x0B +12 bits 0x0C +14 bits 0x0D to 0x0F Reserved.
0x40090F84 B  REGISTER HWVADHPFS (rw): HWVAD filter control register
0x40090F84 C   FIELD 00w02 HPFS (rw): High pass filter
0x40090F88 B  REGISTER HWVADST10 (rw): HWVAD control register
0x40090F88 C   FIELD 00w01 ST10 (rw): Stage 0
0x40090F8C B  REGISTER HWVADRSTT (rw): HWVAD filter reset register
0x40090F8C C   FIELD 00w01 RSTT (rw): Writing a 1 resets all filter values
0x40090F90 B  REGISTER HWVADTHGN (rw): HWVAD noise estimator gain register
0x40090F90 C   FIELD 00w04 THGN (rw): Gain value for the noise estimator. Values 0 to 14. 0 corresponds to a gain of 1.
0x40090F94 B  REGISTER HWVADTHGS (rw): HWVAD signal estimator gain register
0x40090F94 C   FIELD 00w04 THGS (rw): Gain value for the signal estimator. Values 0 to 14. 0 corresponds to a gain of 1.
0x40090F98 B  REGISTER HWVADLOWZ (ro): HWVAD noise envelope estimator register
0x40090F98 C   FIELD 00w16 LOWZ (ro): Noise envelope estimator value.
0x40090FFC B  REGISTER ID (ro): Module Identification register
0x40090FFC C   FIELD 00w32 ID (ro): Indicates module ID and the number of channels in this DMIC interface.
0x40092000 A PERIPHERAL ENET
0x40092000 B  REGISTER MAC_CONFIG (rw): MAC configuration register
0x40092000 C   FIELD 00w01 RE (rw): Receiver Enable When this bit is set, the receiver state machine of the MAC is enabled for receiving frames from the MII.
0x40092000 C   FIELD 01w01 TE (rw): Transmitter Enable When this bit is set, the transmit state machine of the MAC is enabled for transmission on the MII.
0x40092000 C   FIELD 02w02 PRELEN (rw): Preamble Length for Transmit packets These bits control the number of preamble bytes that are added to the beginning of every Tx packet.
0x40092000 C   FIELD 04w01 DC (rw): Deferral Check When this bit is set, the deferral check function is enabled in the MAC.
0x40092000 C   FIELD 05w02 BL (rw): Back-Off Limit The Back-Off limit determines the random integer number (r) of slot time delays (4,096 bit times for 1000 Mbps and 512 bit times for 10/100 Mbps) the MAC waits before rescheduling a transmission attempt during retries after a collision.
0x40092000 C   FIELD 08w01 DR (rw): Disable Retry When this bit is set, the MAC will attempt only one transmission.
0x40092000 C   FIELD 09w01 DCRS (rw): Disable Carrier Sense During Transmission When this bit is set, the MAC transmitter ignores the MII CRS signal during packet transmission in the half-duplex mode.
0x40092000 C   FIELD 10w01 DO (rw): Disable Receive Own When this bit is set, the MAC disables the reception of frames when the gmii_txen_o is asserted in Half-Duplex mode.
0x40092000 C   FIELD 11w01 ECRSFD (rw): Enable Carrier Sense Before Transmission in Full-Duplex Mode When this bit is set, the MAC transmitter checks the CRS signal before packet transmission in the full-duplex mode.
0x40092000 C   FIELD 12w01 LM (rw): Loopback Mode When this bit is set, the MAC operates in loopback mode at MII.
0x40092000 C   FIELD 13w01 DM (rw): Duplex Mode When this bit is set, the MAC operates in a Full-Duplex mode where it can transmit and receive simultaneously.
0x40092000 C   FIELD 14w01 FES (rw): Speed Indicates the speed in Fast Ethernet (MII) mode: This bit is reserved (RO) by default and is enabled only when RMII/SMII is enabled during configuration.
0x40092000 C   FIELD 15w01 PS (ro): Portselect.
0x40092000 C   FIELD 16w01 JE (rw): Jumbo Frame Enable When this bit is set, MAC allows Jumbo frames of 9,018 bytes (9,022 bytes for tagged frames) without reporting a giant frame error in the receive frame status.
0x40092000 C   FIELD 17w01 JD (rw): Jabber Disable When this bit is set, the MAC disables the jabber timer on the transmitter, and can transfer frames of up to 16,384 bytes.
0x40092000 C   FIELD 18w01 BE (rw): Packet Burst Enable When this bit is set, the MAC allows packet bursting during transmission in the MII half-duplex mode.
0x40092000 C   FIELD 19w01 WD (rw): Watchdog Disable When this bit is set, the MAC disables the watchdog timer on the receiver, and can receive frames of up to 16,384 bytes.
0x40092000 C   FIELD 20w01 ACS (rw): Automatic Pad or CRC Stripping When this bit is set, the MAC strips the Pad or FCS field on the incoming packets only if the value of the length field is less than 1,536 bytes.
0x40092000 C   FIELD 21w01 CST (rw): CRC stripping for Type packets When this bit is set, the last four bytes (FCS) of all packets of Ether type (type field greater than 1,536) are stripped and dropped before forwarding the packet to the application.
0x40092000 C   FIELD 22w01 S2KP (rw): IEEE 802.
0x40092000 C   FIELD 23w01 GPSLCE (rw): Giant Packet Size Limit Control Enable When this bit is set, the MAC considers the value in GPSL field in MAC Ext Configuration register to declare a received packet as Giant packet.
0x40092000 C   FIELD 24w03 IPG (rw): Inter-Packet Gap These bits control the minimum IPG between packets during transmission.
0x40092000 C   FIELD 27w01 IPC (rw): Checksum Offload When set, this bit enables the IPv4 header checksum checking and IPv4 or IPv6 TCP, UDP, or ICMP payload checksum checking.
0x40092004 B  REGISTER MAC_EXT_CONFIG (rw): no description available
0x40092004 C   FIELD 00w14 GPSL (rw): Giant Packet Size Limit If the received packet size is greater than the value programmed in this field in units of bytes, the MAC declares the received packet as Giant packet.
0x40092004 C   FIELD 16w01 DCRCC (rw): Disable CRC Checking for Received Packets When this bit is set, the MAC receiver does not check the CRC field in the received packets.
0x40092004 C   FIELD 17w01 SPEN (rw): Slow Protocol Detection Enable When this bit is set, MAC processes the Slow Protocol packets (Ether Type 0x8809) and provides the Rx status.
0x40092004 C   FIELD 18w01 USP (rw): Unicast Slow Protocol Packet Detect When this bit is set, the MAC detects the Slow Protocol packets with unicast address of the station specified in the MAC Address High Table 747 and MAC Address Low Table 748 registers.
0x40092008 B  REGISTER MAC_FRAME_FILTER (rw): MAC frame filter register
0x40092008 C   FIELD 00w01 PR (rw): Promiscuous Mode When this bit is set, the Address Filter module passes all incoming frames regardless of its destination or source address.
0x40092008 C   FIELD 03w01 DAIF (rw): DA Inverse Filtering When this bit is set, the Address Check block operates in inverse filtering mode for the DA address comparison for both unicast and multicast frames.
0x40092008 C   FIELD 04w01 PM (rw): Pass All Multicast When set, this bit indicates that all received frames with a multicast destination address (first bit in the destination address field is '1') are passed.
0x40092008 C   FIELD 05w01 DBF (rw): Disable Broadcast Frames When this bit is set, the AFM module filters all incoming broadcast frames.
0x40092008 C   FIELD 06w02 PCF (rw): Pass Control Frames These bits control the forwarding of all control frames (including unicast and multicast PAUSE frames).
0x40092008 C   FIELD 08w01 SAIF (ro): SA Inverse Filtering When this bit is set, the Address Check block operates in the inverse filtering mode for SA address comparison.
0x40092008 C   FIELD 09w01 SAF (ro): Source Address Filter Enable When this bit is set, the MAC compares the SA field of the received packets with the values programmed in the enabled SA registers.
0x40092008 C   FIELD 31w01 RA (rw): Receive all When this bit is set, the MAC Receiver module passes to the Application all frames received irrespective of whether they pass the address filter.
0x4009200C B  REGISTER MAC_WD_TIMEROUT (rw): MAC watchdog Timeout register
0x4009200C C   FIELD 00w04 WTO (rw): Watchdog Timeout When the PWE bit is set and the WD bit of the MAC Configuration register Table 722 is reset, this field is used as watchdog timeout for a received packet.
0x4009200C C   FIELD 08w01 PWE (rw): Programmable Watchdog Enable When this bit is set and the WD bit of the MAC Configuration register Table 722 is reset, the WTO field is used as watchdog timeout for a received packet.
0x40092050 B  REGISTER MAC_VLAN_TAG (rw): MAC vlan tag register
0x40092050 C   FIELD 00w16 VL (rw): VLAN Tag Identifier for Receive Packets.
0x40092050 C   FIELD 16w01 ETV (rw): Enable 12-Bit VLAN Tag Comparison.
0x40092050 C   FIELD 17w01 VTIM (rw): VLAN Tag Inverse Match Enable.
0x40092050 C   FIELD 18w01 ESVL (rw): Enable S-VLAN.
0x40092050 C   FIELD 19w01 ERSVLM (rw): Enable Receive S-VLAN Match.
0x40092050 C   FIELD 20w01 DOVLTC (rw): Disable VLAN Type Check.
0x40092050 C   FIELD 21w02 EVLS (rw): Enable VLAN Tag Stripping on Receive.
0x40092050 C   FIELD 24w01 EVLRXS (rw): Enable VLAN Tag in Rx status.
0x40092050 C   FIELD 25w01 VTHM (rw): Disable VLAN Type Check.
0x40092050 C   FIELD 26w01 EDVLP (rw): Enable Double VLAN Processing.
0x40092050 C   FIELD 27w01 ERIVLT (rw): Enable Inner VLAN Tag.
0x40092050 C   FIELD 28w02 EIVLS (rw): Enable Inner VLAN Tag Stripping on Receive.
0x40092050 C   FIELD 31w01 EIVLRXS (rw): Enable Inner VLAN Tag in Rx Status.
0x40092070 B  REGISTER MAC_TX_FLOW_CTRL_Q[0] (rw): Transmit flow control register
0x40092070 C   FIELD 00w01 FCB (rw): Flow Control Busy/Backpressure Activate This register field can be read by the application (Read), can be set to 1 by the application with a register write of 1 (Write Set), and is cleared to 0 by the core (Self Clear).
0x40092070 C   FIELD 01w01 TFE (rw): Transmit Flow Control Enable In Full-Duplex mode, when this bit is set, the MAC enables the flow control operation to transmit Pause frames.
0x40092070 C   FIELD 04w03 PLT (rw): Pause Low Threshold This field configures the threshold of the PAUSE timer at which the input flow control signal is checked for automatic retransmission of PAUSE Frame.
0x40092070 C   FIELD 07w01 DZPQ (rw): Disable Zero-Quanta Pause When set, this bit disables the automatic generation of Zero-Quanta Pause Control frames on the deassertion of the flow-control signal from the FIFO layer.
0x40092070 C   FIELD 16w16 PT (rw): Pause time This field holds the value to be used in the Pause Time field in the transmit control frame.
0x40092074 B  REGISTER MAC_TX_FLOW_CTRL_Q[1] (rw): Transmit flow control register
0x40092074 C   FIELD 00w01 FCB (rw): Flow Control Busy/Backpressure Activate This register field can be read by the application (Read), can be set to 1 by the application with a register write of 1 (Write Set), and is cleared to 0 by the core (Self Clear).
0x40092074 C   FIELD 01w01 TFE (rw): Transmit Flow Control Enable In Full-Duplex mode, when this bit is set, the MAC enables the flow control operation to transmit Pause frames.
0x40092074 C   FIELD 04w03 PLT (rw): Pause Low Threshold This field configures the threshold of the PAUSE timer at which the input flow control signal is checked for automatic retransmission of PAUSE Frame.
0x40092074 C   FIELD 07w01 DZPQ (rw): Disable Zero-Quanta Pause When set, this bit disables the automatic generation of Zero-Quanta Pause Control frames on the deassertion of the flow-control signal from the FIFO layer.
0x40092074 C   FIELD 16w16 PT (rw): Pause time This field holds the value to be used in the Pause Time field in the transmit control frame.
0x40092090 B  REGISTER MAC_RX_FLOW_CTRL (rw): Receive flow control register
0x40092090 C   FIELD 00w01 RFE (rw): Receive Flow Control Enable When this bit is set and the MAC is operating in full-duplex mode, the MAC decodes the received Pause packet and disables its transmitter for a specified (Pause) time.
0x40092090 C   FIELD 01w01 UP (rw): Unicast Pause Packet Detect A pause packet is processed when it has the unique multicast address specified in the IEEE 802.
0x40092098 B  REGISTER MAC_TXQ_PRIO_MAP (rw): no description available
0x40092098 C   FIELD 00w08 PSTQ0 (rw): Priorities Selected in Transmit Queue 0 This field holds the priorities assigned to Tx Queue 0 by the software.
0x40092098 C   FIELD 08w08 PSTQ1 (rw): Priorities Selected in Transmit Queue 1 This bit is similar to the PSTQ0 bit.
0x400920A0 B  REGISTER MAC_RXQ_CTRL0 (rw): Receive Queue Control 0 register 0x0000
0x400920A0 C   FIELD 00w02 RXQ0EN (rw): Receive Queue 0 Enable.
0x400920A0 C   FIELD 02w02 RXQ1EN (rw): Receive Queue 1 Enable.
0x400920A4 B  REGISTER MAC_RXQ_CTRL1 (rw): Receive Queue Control 0 register 0x0000
0x400920A4 C   FIELD 00w03 AVCPQ (rw): AV Untagged Control Packets Queue.
0x400920A4 C   FIELD 04w03 AVPTPQ (rw): AV PTP Packets Queue.
0x400920A4 C   FIELD 12w03 UPQ (rw): Untagged Packet Queue.
0x400920A4 C   FIELD 16w03 MCBCQ (rw): Multicast and Broadcast Queue.
0x400920A4 C   FIELD 20w01 MCBCQEN (rw): Multicast and Broadcast Queue Enable.
0x400920A8 B  REGISTER MAC_RXQ_CTRL2 (rw): Receive Queue Control 0 register 0x0000
0x400920A8 C   FIELD 00w08 PSRQ0 (rw): Priorities Selected in the Receive Queue 0.
0x400920A8 C   FIELD 08w08 PSRQ1 (rw): Priorities Selected in the Receive Queue 1.
0x400920A8 C   FIELD 16w08 PSRQ2 (rw): Priorities Selected in the Receive Queue 2.
0x400920A8 C   FIELD 24w08 PSRQ3 (rw): Priorities Selected in the Receive Queue 3.
0x400920B0 B  REGISTER MAC_INTR_STAT (ro): Interrupt status register 0x0000
0x400920B0 C   FIELD 03w01 PHYIS (ro): PHY Interrupt.
0x400920B0 C   FIELD 04w01 PMTIS (ro): PMT Interrupt Status.
0x400920B0 C   FIELD 05w01 LPIIS (ro): LPI Interrupt Status.
0x400920B0 C   FIELD 12w01 TSIS (ro): Timestamp interrupt status.
0x400920B0 C   FIELD 13w01 TXSTSIS (ro): Transmit Status Interrupt.
0x400920B0 C   FIELD 14w01 RXSTSIS (ro): Receive Status Interrupt.
0x400920B4 B  REGISTER MAC_INTR_EN (rw): Interrupt enable register 0x0000
0x400920B4 C   FIELD 03w01 PHYIE (rw): PHY Interrupt Enable.
0x400920B4 C   FIELD 04w01 PMTIE (rw): PMT Interrupt Enable.
0x400920B4 C   FIELD 05w01 LPIIE (rw): LPI Interrupt Enable.
0x400920B4 C   FIELD 12w01 TSIE (rw): Timestamp Interrupt Enable.
0x400920B4 C   FIELD 13w01 TXSTSIE (rw): Transmit Status Interrupt Enable.
0x400920B4 C   FIELD 14w01 RXSTSIS (rw): Receive Status Interrupt Enable.
0x400920B8 B  REGISTER MAC_RXTX_STAT (ro): Receive Transmit Status register
0x400920B8 C   FIELD 00w01 TJT (ro): PHY Interrupt Enable When this bit is set, it enables the assertion of the interrupt signal because of the setting of PHYIS bit in MAC Interrupt Status register Table 731.
0x400920B8 C   FIELD 01w01 NCARR (ro): No Carrier When the DTXSTS bit is set in the MTL Operation Mode register Table 758, this bit indicates that the carrier signal from the PHY is not present at the end of preamble transmission.
0x400920B8 C   FIELD 02w01 LCARR (ro): Loss of Carrier When the DTXSTS bit is set in the MTL Operation Mode register Table 758, this bit indicates that the loss of carrier occurred during packet transmission, that is, the PHY Carrier signal was inactive for one or more transmission clock periods during packet transmission.
0x400920B8 C   FIELD 03w01 EXDEF (ro): Excessive Deferral When the DTXSTS bit is set in the MTL Operation Mode register Table 758 and the DC bit is set in the MAC Configuration register Table 758, this bit indicates that the transmission ended because of excessive deferral of over 24,288 bit times (155,680 when Jumbo packet is enabled).
0x400920B8 C   FIELD 04w01 LCOL (ro): Late Collision When the DTXSTS bit is set in the MTL Operation Mode register Table 758, this bit indicates that the packet transmission aborted because a collision occurred after the collision window (64 bytes including Preamble in MII mode).
0x400920B8 C   FIELD 05w01 EXCOL (ro): Excessive Collisions When the DTXSTS bit is set in the MTL Operation Mode register Table 758, this bit indicates that the transmission aborted after 16 successive collisions while attempting to transmit the current packet.
0x400920B8 C   FIELD 08w01 RWT (ro): Receive Watchdog Timeout This bit is set when a packet with length greater than 2,048 bytes is received (10,240 bytes when Jumbo Packet mode is enabled) and the WD bit is reset in the MAC Configuration register Table 722.
0x400920C0 B  REGISTER MAC_PMT_CRTL_STAT (rw): no description available
0x400920C0 C   FIELD 00w01 PWRDWN (ro): Transmit LPI Entry When this bit is set, it indicates that the MAC Transmitter has entered the LPI state because of the setting of the LPIEN bit.
0x400920C0 C   FIELD 01w01 MGKPKTEN (ro): Magic Packet Enable.
0x400920C0 C   FIELD 02w01 RWKPKTEN (ro): Remote Wake-Up Packet Enable When this bit is set, a power management event is generated when the MAC receives a remote wake-up packet.
0x400920C0 C   FIELD 05w01 MGKPRCVD (ro): Magic Packet Received.
0x400920C0 C   FIELD 06w01 RWKPRCVD (ro): Remote Wake-Up Packet Received.
0x400920C0 C   FIELD 09w01 GLBLUCAST (rw): Global Unicast When this bit set, any unicast packet filtered by the MAC (DAF) address recognition is detected as a remote wake-up packet.
0x400920C0 C   FIELD 10w01 RWKPFE (rw): Remote Wake-up Packet Forwarding Enable When this bit is set along with RWKPKTEN, the MAC receiver drops all received frames until it receives the expected wake-up frame.
0x400920C0 C   FIELD 24w05 RWKPTR (rw): Remote Wake-up FIFO Pointer This field gives the current value (0 to 7) of the Remote Wake-up Packet Filter register pointer.
0x400920C0 C   FIELD 31w01 RWKFILTRST (rw): Remote Wake-Up Packet Filter Register Pointer Reset When this bit is set, the remote wake-up packet filter register pointer is reset to 3'b000.
0x400920C4 B  REGISTER MAC_RWAKE_FRFLT (rw): Remote wake-up frame filter
0x400920C4 C   FIELD 00w32 ADDR (rw): WKUPFMFILTER address.
0x400920D0 B  REGISTER MAC_LPI_CTRL_STAT (rw): LPI Control and Status Register
0x400920D0 C   FIELD 00w01 TLPIEN (ro): Transmit LPI Entry When this bit is set, it indicates that the MAC Transmitter has entered the LPI state because of the setting of the LPIEN bit.
0x400920D0 C   FIELD 01w01 TLPIEX (ro): Transmit LPI Exit When this bit is set, it indicates that the MAC transmitter exited the LPI state after the application cleared the LPIEN bit and the LPI TW Timer has expired.
0x400920D0 C   FIELD 02w01 RLPIEN (ro): Receive LPI Entry When this bit is set, it indicates that the MAC Receiver has received an LPI pattern and entered the LPI state.
0x400920D0 C   FIELD 03w01 RLPIEX (ro): Receive LPI Exit When this bit is set, it indicates that the MAC Receiver has stopped receiving the LPI pattern on the MII interface, exited the LPI state, and resumed the normal reception.
0x400920D0 C   FIELD 08w01 TLPIST (ro): Transmit LPI State When this bit is set, it indicates that the MAC is transmitting the LPI pattern on the MII interface.
0x400920D0 C   FIELD 09w01 RLPIST (ro): Receive LPI State When this bit is set, it indicates that the MAC is receiving the LPI pattern on the MII interface.
0x400920D0 C   FIELD 16w01 LPIEN (rw): LPI Enable When this bit is set, it instructs the MAC Transmitter to enter the LPI state.
0x400920D0 C   FIELD 17w01 PLS (rw): PHY Link Status This bit indicates the link status of the PHY.
0x400920D0 C   FIELD 19w01 LPITXA (rw): LPI Tx Automate This bit controls the behavior of the MAC when it is entering or coming out of the LPI mode on the Transmit side.
0x400920D0 C   FIELD 20w01 LPIATE (rw): LPI Timer Enable This bit controls the automatic entry of the MAC Transmitter into and exit out of the LPI state.
0x400920D0 C   FIELD 21w01 LPITCSE (rw): LPI Tx Clock Stop Enable When this bit is set, the MAC asserts LPI Tx Clock Gating Control signal high after it enters Tx LPI mode to indicate that the Tx clock to MAC can be stopped.
0x400920D4 B  REGISTER MAC_LPI_TIMER_CTRL (rw): LPI Timers Control register
0x400920D4 C   FIELD 00w16 TWT (rw): LPI TW Timer This field specifies the minimum time (in microseconds) for which the MAC waits after it stops transmitting the LPI pattern to the PHY and before it resumes the normal transmission.
0x400920D4 C   FIELD 16w10 LST (rw): LPI LS Timer This field specifies the minimum time (in milliseconds) for which the link status from the PHY should be up (OKAY) before the LPI pattern can be transmitted to the PHY.
0x400920D8 B  REGISTER MAC_LPI_ENTR_TIMR (rw): LPI entry Timer register
0x400920D8 C   FIELD 03w17 LPIET (rw): LPI Entry Timer This field specifies the time in microseconds the MAC will wait to enter LPI mode, after it has transmitted all the frames.
0x400920DC B  REGISTER MAC_1US_TIC_COUNTR (rw): no description available
0x400920DC C   FIELD 00w12 TIC_1US_CNTR (rw): 1US TIC Counter The application must program this counter so that the number of clock cycles of CSR clock is 1us.
0x40092110 B  REGISTER MAC_VERSION (rw): MAC version register
0x40092110 C   FIELD 00w08 SNPVER (rw): NXP defined version.
0x40092110 C   FIELD 08w08 USERVER (rw): User defined version.
0x40092114 B  REGISTER MAC_DBG (ro): MAC debug register
0x40092114 C   FIELD 00w01 REPESTS (ro): MAC MII Receive Protocol Engine Status When this bit is set, it indicates that the MAC MII receive protocol engine is actively receiving data, and it is not in the Idle state.
0x40092114 C   FIELD 01w02 RFCFCSTS (ro): MAC Receive Packet Controller FIFO Status When this bit is set, this field indicates the active state of the small FIFO Read and Write controllers of the MAC Receive Packet Controller module.
0x40092114 C   FIELD 16w01 TPESTS (ro): MAC MII Transmit Protocol Engine Status When this bit is set, it indicates that the MAC or MII transmit protocol engine is actively transmitting data, and it is not in the Idle state.
0x40092114 C   FIELD 17w02 TFCSTS (ro): MAC Transmit Packet Controller Status This field indicates the state of the MAC Transmit Packet Controller module.
0x4009211C B  REGISTER MAC_HW_FEAT0 (rw): MAC hardware feature register 0x0201
0x4009211C C   FIELD 00w01 MIISEL (ro): 10 or 100 Mbps Support.
0x4009211C C   FIELD 02w01 HDSEL (ro): Half-duplex Support.
0x4009211C C   FIELD 04w01 VLHASH (ro): Hash Table Based Filtering option.
0x4009211C C   FIELD 05w01 SMASEL (ro): SMA (MDIO) Interface.
0x4009211C C   FIELD 06w01 RWKSEL (ro): PMT Remote Wake-up Packet Detection.
0x4009211C C   FIELD 07w01 MGKSEL (rw): PMT magic packet detection.
0x4009211C C   FIELD 08w01 MMCSEL (ro): RMON Module Enable.
0x4009211C C   FIELD 09w01 ARPOFFSEL (ro): ARP Offload Enabled.
0x4009211C C   FIELD 12w01 TSSEL (ro): IEEE 1588-2008 Timestamp support .
0x4009211C C   FIELD 13w01 EEESEL (ro): Energy Efficient Ethernet Support .
0x4009211C C   FIELD 14w01 TXCOESEL (ro): Transmit Checksum Offload Support.
0x4009211C C   FIELD 16w01 RXCOESEL (rw): Receive Checksum Offload Support.
0x4009211C C   FIELD 25w02 TSSTSSEL (ro): Timestamp System Time Source.
0x4009211C C   FIELD 28w03 ACTPHYSEL (ro): Active PHY Selected.
0x40092120 B  REGISTER MAC_HW_FEAT1 (ro): MAC hardware feature register 0x0201
0x40092120 C   FIELD 00w05 RXFIFOSIZE (ro): MTL Receive FIFO Size.
0x40092120 C   FIELD 06w05 TXFIFOSIZE (ro): MTL Transmit FIFO Size.
0x40092120 C   FIELD 11w01 OSTEN (ro): One-Step Timestamping Feature.
0x40092120 C   FIELD 12w01 PTOEN (ro): PTP OffLoad Feature.
0x40092120 C   FIELD 13w01 ADVTHWORD (ro): IEEE 1588 High Word Register Feature.
0x40092120 C   FIELD 14w02 ADDR64 (ro): Address width.
0x40092120 C   FIELD 16w01 DCBEN (ro): Data Center Bridging feature.
0x40092120 C   FIELD 17w01 SPEN (ro): Split Header Structure feature.
0x40092120 C   FIELD 18w01 TSOEN (ro): TCP Segment Offload Feature.
0x40092120 C   FIELD 19w01 DBGMEMA (ro): DMA Debug Register Feature.
0x40092120 C   FIELD 20w01 AVSEL (ro): Audio Video Bridging Feature.
0x40092120 C   FIELD 23w01 LPMODEEN (ro): Low Power Mode Feature Support .
0x40092120 C   FIELD 24w02 HASHTBLSZ (ro): Hash Table Size.
0x40092120 C   FIELD 27w04 L3_L4_FILTER (ro): Total Number of L3 and L4 Filters .
0x40092124 B  REGISTER MAC_HW_FEAT2 (ro): MAC hardware feature register 0x0201
0x40092124 C   FIELD 00w04 RXQCNT (ro): Number of MTL Receive Queues.
0x40092124 C   FIELD 06w04 TXQCNT (ro): Number of MTL Transmit Queues.
0x40092124 C   FIELD 12w04 RXCHCNT (ro): Number of DMA Receive Channels.
0x40092124 C   FIELD 18w04 TXCHCNT (ro): Number of DMA Transmit Channels.
0x40092124 C   FIELD 24w03 PPSOUTNUM (ro): Number of PPS Outputs.
0x40092124 C   FIELD 28w03 AUXSNAPNUM (ro): Number of Auxiliary Snapshot Inputs.
0x40092200 B  REGISTER MAC_MDIO_ADDR (rw): MIDO address Register
0x40092200 C   FIELD 00w01 MB (rw): MII busy.
0x40092200 C   FIELD 02w02 MOC (rw): MII Operation Command.
0x40092200 C   FIELD 08w04 CR (rw): CSR Clock Range.
0x40092200 C   FIELD 12w03 NTC (rw): Number of Training Clocks This field controls the number of trailing clock cycles generated on MDC after the end of transmission of MDIO frame.
0x40092200 C   FIELD 16w05 RDA (rw): Register/Device Address These bits select the PHY register in selected PHY device.
0x40092200 C   FIELD 21w05 PA (rw): Physical Layer Address This field indicates which PHY devices (out of 32 devices) the MAC is accessing.
0x40092200 C   FIELD 26w01 BTB (rw): Back to Back transactions When this bit is set and the NTC has value greater than 0, then the MAC will inform the completion of a read or write command at the end of frame transfer (before the trailing clocks are transmitted).
0x40092200 C   FIELD 27w01 PSE (rw): Preamble Suppression Enable When this bit is set, the SMA will suppress the 32-bit preamble and transmit MDIO frames with only 1 preamble bit.
0x40092204 B  REGISTER MAC_MDIO_DATA (rw): MDIO Data register
0x40092204 C   FIELD 00w16 MD (rw): MII Data This field contains the 16-bit data value read from the PHY after a Management Read operation or the 16-bit data value to be written to the PHY before a Management Write operation.
0x40092300 B  REGISTER MAC_ADDR_HIGH (rw): MAC address0 high register
0x40092300 C   FIELD 00w16 A47_32 (rw): MAC Address0 [47:32] This field contains the upper 16 bits (47:32) of the 6-byte first MAC address.
0x40092300 C   FIELD 16w01 DCS (rw): DMA Channel Select This field contains the DMA Channel number to which the Rx packet whose DA matches the MAC Address content is routed.
0x40092300 C   FIELD 31w01 AE (ro): Address Enable.
0x40092304 B  REGISTER MAC_ADDR_LOW (rw): MAC address0 low register
0x40092304 C   FIELD 00w32 A31_0 (rw): MAC Address0 [31:0] This field contains the lower 32 bits of the 6-byte first MAC address.
0x40092B00 B  REGISTER MAC_TIMESTAMP_CTRL (rw): Time stamp control register
0x40092B00 C   FIELD 00w01 TSENA (rw): Enable Timestamp When this bit is set, the timestamp is added for Transmit and Receive packets.
0x40092B00 C   FIELD 01w01 TSCFUPDT (rw): Fine or Coarse Timestamp Update When this bit is set, the Fine method is used to update system timestamp.
0x40092B00 C   FIELD 02w01 TSINIT (rw): Initialize Timestamp When this bit is set, the system time is initialized (overwritten) with the value specified in the MAC Register 80 (System Time Seconds Update.
0x40092B00 C   FIELD 03w01 TSUPDT (rw): Update Timestamp When this bit is set, the system time is updated (added or subtracted) with the value specified in MAC System Time Seconds Update Table 753 and MAC System Time Nanoseconds Update Table 754.
0x40092B00 C   FIELD 04w01 TSTRIG (rw): Enable Timestamp Interrupt Trigger When this bit is set, the timestamp interrupt is generated when the System Time becomes greater than the value written in the Target Time register.
0x40092B00 C   FIELD 05w01 TADDREG (rw): Update Addend Register When this bit is set, the content of the Timestamp Addend register is updated in the PTP block for fine correction.
0x40092B00 C   FIELD 08w01 TSENALL (rw): Enable Timestamp for All Packets When this bit is set, the timestamp snapshot is enabled for all packets received by the MAC.
0x40092B00 C   FIELD 09w01 TSCTRLSSR (rw): Timestamp Digital or Binary Rollover Control When this bit is set, the Timestamp Low register rolls over after 0x3B9AC9FF value (that is, 1 nanosecond accuracy) and increments the timestamp (High) seconds.
0x40092B00 C   FIELD 10w01 TSVER2ENA (rw): Enable PTP Packet Processing for Version 2 Format When this bit is set, the IEEE 1588 version 2 format is used to process the PTP packets.
0x40092B00 C   FIELD 11w01 TSIPENA (rw): Enable Processing of PTP over Ethernet Packets When this bit is set, the MAC receiver processes the PTP packets encapsulated directly in the Ethernet packets.
0x40092B00 C   FIELD 12w01 TSIPV6ENA (rw): Enable Processing of PTP Packets Sent over 1Pv6-UDP When this bit is set, the MAC receiver processes the PTP packets encapsulated in IPv6-UDP packets.
0x40092B00 C   FIELD 13w01 TSIPV4ENA (rw): Enable Processing of PTP Packets Sent over IPv4-UDP When this bit is set, the MAC receiver processes the PTP packets encapsulated in IPv4-UDP packets.
0x40092B00 C   FIELD 14w01 TSEVTENA (rw): Enable Timestamp Snapshot for Event Messages When this bit is set, the timestamp snapshot is taken only for event messages (SYNC, Delay_Req, Pdelay_Req, or Pdelay_Resp).
0x40092B00 C   FIELD 15w01 TSMSTRENA (rw): Enable Snapshot for Messages Relevant to Master When this bit is set, the snapshot is taken only for the messages that are relevant to the master node.
0x40092B00 C   FIELD 16w02 SNAPTYPSEL (rw): Select PTP packets for Taking Snapshots These bits, along with Bits 15 and 14, decide the set of PTP packet types for which snapshot needs to be taken.
0x40092B00 C   FIELD 18w01 TSENMACADDR (rw): Enable MAC Address for PTP Packet Filtering When this bit is set, the DA MAC address (that matches any MAC Address register) is used to filter the PTP packets when PTP is directly sent over Ethernet.
0x40092B00 C   FIELD 24w01 TXTTSSTSM (rw): Transmit Timestamp Status Mode When this bit is set, the MAC overwrites the earlier transmit timestamp status even if it is not read by the software.
0x40092B00 C   FIELD 28w01 AV8021ASMEN (rw): AV 802.
0x40092B04 B  REGISTER MAC_SUB_SCND_INCR (rw): Sub-second increment register
0x40092B04 C   FIELD 16w08 SSINC (rw): Sub-second increment value.
0x40092B08 B  REGISTER MAC_SYS_TIME_SCND (ro): System time seconds register
0x40092B08 C   FIELD 00w32 TSS (ro): Time stamp second The value in this field indicates the current value in seconds of the System Time maintained by the MAC.
0x40092B0C B  REGISTER MAC_SYS_TIME_NSCND (ro): System time nanoseconds register
0x40092B0C C   FIELD 00w31 TSSS (ro): Time stamp sub seconds The value in this field has the sub second representation of time, with an accuracy of 0.
0x40092B10 B  REGISTER MAC_SYS_TIME_SCND_UPD (rw): no description available
0x40092B10 C   FIELD 00w32 TSS (rw): Time stamp second The value in this field indicates the time, in seconds, to be initialized or added to the system time.
0x40092B14 B  REGISTER MAC_SYS_TIME_NSCND_UPD (rw): no description available
0x40092B14 C   FIELD 00w31 TSSS (rw): Time stamp sub seconds The value in this field has the sub second representation of time, with an accuracy of 0.
0x40092B14 C   FIELD 31w01 ADDSUB (rw): Add or subtract time When this bit is set, the time value is subtracted with the contents of the update register.
0x40092B18 B  REGISTER MAC_SYS_TIMESTMP_ADDEND (rw): Time stamp addend register
0x40092B18 C   FIELD 00w32 TSAR (rw): Time stamp addend This register indicates the 32-bit time value to be added to the Accumulator register to achieve time synchronization.
0x40092B1C B  REGISTER MAC_SYS_TIME_HWORD_SCND (rw): no description available
0x40092B1C C   FIELD 00w16 TSHWR (rw): Time stamp higher word Contains the most significant 16-bits of the Time stamp seconds value.
0x40092B20 B  REGISTER MAC_SYS_TIMESTMP_STAT (ro): Time stamp status register
0x40092B20 C   FIELD 00w01 TSSOVF (ro): Time stamp seconds overflow When set, indicates that the seconds value of the Time stamp has overflowed beyond 0xFFFF_FFFF.
0x40092B30 B  REGISTER MAC_Tx_TIMESTAMP_STATUS_NANOSECONDS (ro): Tx timestamp status nanoseconds
0x40092B30 C   FIELD 00w31 TXTSSTSLO (ro): Transmit timestamp status low.
0x40092B30 C   FIELD 31w01 TXTSSTSMIS (ro): Transmit timestamp status missed.
0x40092B34 B  REGISTER MAC_Tx_TIMESTAMP_STATUS_SECONDS (ro): Tx timestamp status seconds
0x40092B34 C   FIELD 00w32 TXTSSTSHI (ro): Transmit timestamp status high.
0x40092B58 B  REGISTER MAC_TIMESTAMP_INGRESS_CORR_NANOSECOND (rw): Timestamp ingress correction
0x40092B58 C   FIELD 00w32 TSIC (rw): Transmit ingress correction.
0x40092B5C B  REGISTER MAC_TIMESTAMP_EGRESS_CORR_NANOSECOND (rw): Timestamp egress correction
0x40092B5C C   FIELD 00w32 TSEC (rw): Transmit egress correction.
0x40092C00 B  REGISTER MTL_OP_MODE (rw): MTL Operation Mode Register
0x40092C00 C   FIELD 01w01 DTXSTS (rw): Drop Transmit Status When this bit is set, the Tx packet status received from the MAC is dropped in the MTL.
0x40092C00 C   FIELD 02w01 RAA (ro): Receive Arbitration Algorithm This field is used to select the arbitration algorithm for the Rx side.
0x40092C00 C   FIELD 05w02 SCHALG (rw): Tx Scheduling Algorithm This field indicates the algorithm for Tx scheduling: 0x00: WRR algorithm 0x1: Reserved 0x2: Reserved 0x3: Strict priority algorithm.
0x40092C00 C   FIELD 08w01 CNTPRST (rw): Counters Preset When this bit is set, MTL TxQ0 Underflow register (Table 762) and MTL_TxQ1_Underflow (Table 762) registers are initialized/preset to 0x7F0.
0x40092C00 C   FIELD 09w01 CNTCLR (rw): Counters Reset When this bit is set, all counters are reset.
0x40092C20 B  REGISTER MTL_INTR_STAT (ro): MTL Interrupt Status register
0x40092C20 C   FIELD 00w01 Q0IS (ro): Queue 0 Interrupt status This bit indicates that there is an interrupt from Queue 0.
0x40092C20 C   FIELD 01w01 Q1IS (ro): Queue 1 Interrupt status This bit indicates that there is an interrupt from Queue 1.
0x40092C30 B  REGISTER MTL_RXQ_DMA_MAP (rw): MTL Receive Queue and DMA Channel Mapping register
0x40092C30 C   FIELD 00w01 Q0MDMACH (rw): Queue 0 Mapped to DMA Channel This field controls the routing of the packet received in Queue 0 to the DMA channel: 0: DMA Channel 0 1: DMA Channel 1 This field is valid when the Q0DDMACH field is reset.
0x40092C30 C   FIELD 04w01 Q0DDMACH (rw): Queue 0 Enabled for DA-based DMA Channel Selection When set, this bit indicates that the packets received in Queue 0 are routed to a particular DMA channel as decided in the MAC Receiver based on the DMA channel number programmed in the L3-L4 filter registers, or the Ethernet DA address.
0x40092C30 C   FIELD 08w01 Q1MDMACH (rw): Queue 1 Mapped to DMA Channel This field controls the routing of the received packet in Queue 1 to the DMA channel: 0: DMA Channel 0 1: DMA Channel 1 This field is valid when the Q1DDMACH field is reset.
0x40092C30 C   FIELD 12w01 Q1DDMACH (rw): Queue 1 Enabled for DA-based DMA Channel Selection When set, this bit indicates that the packets received in Queue 1 are routed to a particular DMA channel as decided in the MAC Receiver based on the DMA channel number programmed in the L3-L4 filter registers, or the Ethernet DA address.
0x40092D00 B  CLUSTER MTL_QUEUE[0]: no description available
0x40092D00 B  REGISTER MTL_TXQx_OP_MODE0 (rw): MTL TxQx Operation Mode register
0x40092D00 C   FIELD 00w01 FTQ (rw): Flush Transmit Queue When this bit is set, the Tx queue controller logic is reset to its default values.
0x40092D00 C   FIELD 01w01 TSF (rw): Transmit Store and Forward When this bit is set, the transmission starts when a full packet resides in the MTL Tx queue.
0x40092D00 C   FIELD 02w02 TXQEN (rw): Transmit Queue Enable This field is used to enable/disable the transmit queue 0.
0x40092D00 C   FIELD 04w03 TTC (rw): Transmit Threshold Control These bits control the threshold level of the MTL Tx Queue.
0x40092D00 C   FIELD 16w03 TQS (rw): Transmit Queue Size This field indicates the size of the allocated Transmit queues in blocks of 256 bytes.
0x40092D04 B  REGISTER MTL_TXQx_UNDRFLW0 (ro): MTL TxQx Underflow register
0x40092D04 C   FIELD 00w11 UFFRMCNT (ro): Underflow Packet Counter This field indicates the number of packets aborted by the controller because of Tx Queue Underflow.
0x40092D04 C   FIELD 11w01 UFCNTOVF (ro): Overflow Bit for Underflow Packet Counter This bit is set every time the Tx queue Underflow Packet Counter field overflows, that is, it has crossed the maximum count.
0x40092D08 B  REGISTER MTL_TXQx_DBG0 (ro): MTL TxQx Debug register
0x40092D08 C   FIELD 00w01 TXQPAUSED (ro): Transmit Queue in Pause When this bit is high and the Rx flow control is enabled, it indicates that the Tx Queue is in the Pause condition (in the full-duplex only mode) because of the following: - Reception of the PFC packet for the priorities assigned to the Tx Queue when PFC is enabled - Reception of 802.
0x40092D08 C   FIELD 01w02 TRCSTS (ro): MTL Tx Queue Read Controller Status This field indicates the state of the Tx Queue Read Controller: 00: Idle state 01: Read state (transferring data to the MAC transmitter) 10: Waiting for pending Tx Status from the MAC transmitter 11: Flushing the Tx queue because of the Packet Abort request from the MAC.
0x40092D08 C   FIELD 03w01 TWCSTS (ro): MTL Tx Queue Write Controller Status When high, this bit indicates that the MTL Tx Queue Write Controller is active, and it is transferring the data to the Tx Queue.
0x40092D08 C   FIELD 04w01 TXQSTS (ro): MTL Tx Queue Not Empty Status When this bit is high, it indicates that the MTL Tx Queue is not empty and some data is left for transmission.
0x40092D08 C   FIELD 05w01 TXSTSFSTS (ro): MTL Tx Status FIFO Full Status When high, this bit indicates that the MTL Tx Status FIFO is full.
0x40092D08 C   FIELD 16w03 PTXQ (ro): Number of Packets in the Transmit Queue This field indicates the current number of packets in the Tx Queue.
0x40092D08 C   FIELD 20w03 STSXSTSF (ro): Number of Status Words in Tx Status FIFO of Queue This field indicates the current number of status in the Tx Status FIFO of this queue.
0x40092D10 B  REGISTER MTL_TXQx_ETS_CTRL0 (rw): MTL TxQx ETS control register, only TxQ1 support
0x40092D10 C   FIELD 02w01 AVALG (rw): AV Algorithm.
0x40092D10 C   FIELD 03w01 CC (rw): Credit Control.
0x40092D10 C   FIELD 04w03 SLC (ro): Credit Control.
0x40092D14 B  REGISTER MTL_TXQx_ETS_STAT0 (rw): MTL TxQx ETS Status register
0x40092D14 C   FIELD 00w24 ABS (rw): Average Bits per Slot.
0x40092D18 B  REGISTER MTL_TXQx_QNTM_WGHT0 (rw): no description available
0x40092D18 C   FIELD 00w21 ISCQW (rw): Average Bits per Slot.
0x40092D1C B  REGISTER MTL_TXQx_SNDSLP_CRDT0 (rw): MTL TxQx SendSlopCredit register, only TxQ1 support
0x40092D1C C   FIELD 00w14 SSC (rw): sendSlopeCredit.
0x40092D20 B  REGISTER MTL_TXQx_HI_CRDT0 (rw): MTL TxQx hiCredit register, only TxQ1 support
0x40092D20 C   FIELD 00w29 HC (rw): hiCredit.
0x40092D24 B  REGISTER MTL_TXQx_LO_CRDT0 (rw): MTL TxQx loCredit register, only TxQ1 support
0x40092D24 C   FIELD 00w29 LC (rw): loCredit.
0x40092D2C B  REGISTER MTL_TXQx_INTCTRL_STAT0 (rw): no description available
0x40092D2C C   FIELD 00w01 TXUNFIS (rw): Transmit Queue Underflow Interrupt Status This bit indicates that the Transmit Queue had an underflow while transmitting the packet.
0x40092D2C C   FIELD 01w01 ABPSIS (rw): Average Bits Per Slot Interrupt Status When set, this bit indicates that the MAC has updated the ABS value.
0x40092D2C C   FIELD 08w01 TXUIE (rw): Transmit Queue Underflow Interrupt Enable When this bit is set, the Transmit Queue Underflow interrupt is enabled.
0x40092D2C C   FIELD 09w01 ABPSIE (rw): Average Bits Per Slot Interrupt Enable When this bit is set, the MAC asserts the interrupt when the average bits per slot status is updated.
0x40092D2C C   FIELD 16w01 RXOVFIS (rw): Receive Queue Overflow Interrupt Status This bit indicates that the Receive Queue had an overflow while receiving the packet.
0x40092D2C C   FIELD 24w01 RXOIE (rw): Receive Queue Overflow Interrupt Enable When this bit is set, the Receive Queue Overflow interrupt is enabled.
0x40092D30 B  REGISTER MTL_RXQx_OP_MODE0 (rw): MTL RxQx Operation Mode register
0x40092D30 C   FIELD 00w02 RTC (rw): Receive Queue Threshold Control These bits control the threshold level of the MTL Rx queue (in bytes): 00: 64 01: 32 10: 96 11: 128 The packet received is transferred to the application or DMA when the packet size within the MTL Rx queue is larger than the threshold.
0x40092D30 C   FIELD 03w01 FUP (rw): Forward Undersized Good Packets When this bit is set, the Rx queue forwards the undersized good packets (packets with no error and length less than 64 bytes), including pad-bytes and CRC.
0x40092D30 C   FIELD 04w01 FEP (rw): Forward Error Packets When this bit is reset, the Rx queue drops packets with error status (CRC error, Mll_ER, watchdog timeout, or overflow).
0x40092D30 C   FIELD 05w01 RSF (rw): Receive Queue Store and Forward When this bit is set, the ethernet block on this chip reads a packet from the Rx queue only after the complete packet has been written to it, ignoring the RTC field of this register.
0x40092D30 C   FIELD 06w01 DIS_TCP_EF (rw): Disable Dropping of TCP/IP Checksum Error Packets When this bit is set, the MAC does not drop the packets which only have the errors detected by the Receive Checksum Offload engine.
0x40092D30 C   FIELD 20w03 RQS (rw): This field indicates the size of the allocated Receive queues in blocks of 256 bytes.
0x40092D34 B  REGISTER MTL_RXQx_MISSPKT_OVRFLW_CNT0 (rw): MTL RxQx Missed Packet Overflow Counter register
0x40092D34 C   FIELD 00w11 OVFPKTCNT (rw): Overflow Packet Counter This field indicates the number of packets discarded by the Ethernet block because of Receive queue overflow.
0x40092D34 C   FIELD 11w01 OVFCNTOVF (ro): Overflow Counter Overflow Bit When set, this bit indicates that the Rx Queue Overflow Packet Counter field crossed the maximum limit.
0x40092D38 B  REGISTER MTL_RXQx_DBG0 (rw): MTL RxQx Debug register
0x40092D38 C   FIELD 00w01 RWCSTS (rw): MTL Rx Queue Write Controller Active Status When high, this bit indicates that the MTL Rx queue Write controller is active, and it is transferring a received packet to the Rx Queue.
0x40092D38 C   FIELD 01w02 RRCSTS (ro): MTL Rx Queue Read Controller State This field gives the state of the Rx queue Read controller: 00: Idle state 01: Reading packet data 10: Reading packet status (or timestamp) 11: Flushing the packet data and status.
0x40092D38 C   FIELD 04w02 RXQSTS (ro): MTL Rx Queue Fill-Level Status This field gives the status of the fill-level of the Rx Queue: 0x0: Rx Queue empty 0x1: Rx Queue fill-level below flow-control deactivate threshold 0x2: Rx Queue fill-level above flow-control activate threshold 0x3: Rx Queue full.
0x40092D38 C   FIELD 16w14 PRXQ (ro): Number of Packets in Receive Queue This field indicates the current number of packets in the Rx Queue.
0x40092D3C B  REGISTER MTL_RXQx_CTRL0 (rw): MTL RxQx Control register
0x40092D3C C   FIELD 00w03 RXQ_WEGT (rw): Receive Queue Weight This field indicates the weight assigned to the Rx Queue 0.
0x40092D3C C   FIELD 03w01 RXQ_FRM_ARBIT (rw): Receive Queue Packet Arbitration When this bit is set, the The ethernet block drives the packet data to the ARI interface such that the entire packet data of currently-selected queue is transmitted before switching to other queue.
0x40092D40 B  CLUSTER MTL_QUEUE[1]: no description available
0x40092D40 B  REGISTER MTL_TXQx_OP_MODE1 (rw): MTL TxQx Operation Mode register
0x40092D40 C   FIELD 00w01 FTQ (rw): Flush Transmit Queue When this bit is set, the Tx queue controller logic is reset to its default values.
0x40092D40 C   FIELD 01w01 TSF (rw): Transmit Store and Forward When this bit is set, the transmission starts when a full packet resides in the MTL Tx queue.
0x40092D40 C   FIELD 02w02 TXQEN (rw): Transmit Queue Enable This field is used to enable/disable the transmit queue 0.
0x40092D40 C   FIELD 04w03 TTC (rw): Transmit Threshold Control These bits control the threshold level of the MTL Tx Queue.
0x40092D40 C   FIELD 16w03 TQS (rw): Transmit Queue Size This field indicates the size of the allocated Transmit queues in blocks of 256 bytes.
0x40092D44 B  REGISTER MTL_TXQx_UNDRFLW1 (ro): MTL TxQx Underflow register
0x40092D44 C   FIELD 00w11 UFFRMCNT (ro): Underflow Packet Counter This field indicates the number of packets aborted by the controller because of Tx Queue Underflow.
0x40092D44 C   FIELD 11w01 UFCNTOVF (ro): Overflow Bit for Underflow Packet Counter This bit is set every time the Tx queue Underflow Packet Counter field overflows, that is, it has crossed the maximum count.
0x40092D48 B  REGISTER MTL_TXQx_DBG1 (ro): MTL TxQx Debug register
0x40092D48 C   FIELD 00w01 TXQPAUSED (ro): Transmit Queue in Pause When this bit is high and the Rx flow control is enabled, it indicates that the Tx Queue is in the Pause condition (in the full-duplex only mode) because of the following: - Reception of the PFC packet for the priorities assigned to the Tx Queue when PFC is enabled - Reception of 802.
0x40092D48 C   FIELD 01w02 TRCSTS (ro): MTL Tx Queue Read Controller Status This field indicates the state of the Tx Queue Read Controller: 00: Idle state 01: Read state (transferring data to the MAC transmitter) 10: Waiting for pending Tx Status from the MAC transmitter 11: Flushing the Tx queue because of the Packet Abort request from the MAC.
0x40092D48 C   FIELD 03w01 TWCSTS (ro): MTL Tx Queue Write Controller Status When high, this bit indicates that the MTL Tx Queue Write Controller is active, and it is transferring the data to the Tx Queue.
0x40092D48 C   FIELD 04w01 TXQSTS (ro): MTL Tx Queue Not Empty Status When this bit is high, it indicates that the MTL Tx Queue is not empty and some data is left for transmission.
0x40092D48 C   FIELD 05w01 TXSTSFSTS (ro): MTL Tx Status FIFO Full Status When high, this bit indicates that the MTL Tx Status FIFO is full.
0x40092D48 C   FIELD 16w03 PTXQ (ro): Number of Packets in the Transmit Queue This field indicates the current number of packets in the Tx Queue.
0x40092D48 C   FIELD 20w03 STSXSTSF (ro): Number of Status Words in Tx Status FIFO of Queue This field indicates the current number of status in the Tx Status FIFO of this queue.
0x40092D50 B  REGISTER MTL_TXQx_ETS_CTRL1 (rw): MTL TxQx ETS control register, only TxQ1 support
0x40092D50 C   FIELD 02w01 AVALG (rw): AV Algorithm.
0x40092D50 C   FIELD 03w01 CC (rw): Credit Control.
0x40092D50 C   FIELD 04w03 SLC (ro): Credit Control.
0x40092D54 B  REGISTER MTL_TXQx_ETS_STAT1 (rw): MTL TxQx ETS Status register
0x40092D54 C   FIELD 00w24 ABS (rw): Average Bits per Slot.
0x40092D58 B  REGISTER MTL_TXQx_QNTM_WGHT1 (rw): no description available
0x40092D58 C   FIELD 00w21 ISCQW (rw): Average Bits per Slot.
0x40092D5C B  REGISTER MTL_TXQx_SNDSLP_CRDT1 (rw): MTL TxQx SendSlopCredit register, only TxQ1 support
0x40092D5C C   FIELD 00w14 SSC (rw): sendSlopeCredit.
0x40092D60 B  REGISTER MTL_TXQx_HI_CRDT1 (rw): MTL TxQx hiCredit register, only TxQ1 support
0x40092D60 C   FIELD 00w29 HC (rw): hiCredit.
0x40092D64 B  REGISTER MTL_TXQx_LO_CRDT1 (rw): MTL TxQx loCredit register, only TxQ1 support
0x40092D64 C   FIELD 00w29 LC (rw): loCredit.
0x40092D6C B  REGISTER MTL_TXQx_INTCTRL_STAT1 (rw): no description available
0x40092D6C C   FIELD 00w01 TXUNFIS (rw): Transmit Queue Underflow Interrupt Status This bit indicates that the Transmit Queue had an underflow while transmitting the packet.
0x40092D6C C   FIELD 01w01 ABPSIS (rw): Average Bits Per Slot Interrupt Status When set, this bit indicates that the MAC has updated the ABS value.
0x40092D6C C   FIELD 08w01 TXUIE (rw): Transmit Queue Underflow Interrupt Enable When this bit is set, the Transmit Queue Underflow interrupt is enabled.
0x40092D6C C   FIELD 09w01 ABPSIE (rw): Average Bits Per Slot Interrupt Enable When this bit is set, the MAC asserts the interrupt when the average bits per slot status is updated.
0x40092D6C C   FIELD 16w01 RXOVFIS (rw): Receive Queue Overflow Interrupt Status This bit indicates that the Receive Queue had an overflow while receiving the packet.
0x40092D6C C   FIELD 24w01 RXOIE (rw): Receive Queue Overflow Interrupt Enable When this bit is set, the Receive Queue Overflow interrupt is enabled.
0x40092D70 B  REGISTER MTL_RXQx_OP_MODE1 (rw): MTL RxQx Operation Mode register
0x40092D70 C   FIELD 00w02 RTC (rw): Receive Queue Threshold Control These bits control the threshold level of the MTL Rx queue (in bytes): 00: 64 01: 32 10: 96 11: 128 The packet received is transferred to the application or DMA when the packet size within the MTL Rx queue is larger than the threshold.
0x40092D70 C   FIELD 03w01 FUP (rw): Forward Undersized Good Packets When this bit is set, the Rx queue forwards the undersized good packets (packets with no error and length less than 64 bytes), including pad-bytes and CRC.
0x40092D70 C   FIELD 04w01 FEP (rw): Forward Error Packets When this bit is reset, the Rx queue drops packets with error status (CRC error, Mll_ER, watchdog timeout, or overflow).
0x40092D70 C   FIELD 05w01 RSF (rw): Receive Queue Store and Forward When this bit is set, the ethernet block on this chip reads a packet from the Rx queue only after the complete packet has been written to it, ignoring the RTC field of this register.
0x40092D70 C   FIELD 06w01 DIS_TCP_EF (rw): Disable Dropping of TCP/IP Checksum Error Packets When this bit is set, the MAC does not drop the packets which only have the errors detected by the Receive Checksum Offload engine.
0x40092D70 C   FIELD 20w03 RQS (rw): This field indicates the size of the allocated Receive queues in blocks of 256 bytes.
0x40092D74 B  REGISTER MTL_RXQx_MISSPKT_OVRFLW_CNT1 (rw): MTL RxQx Missed Packet Overflow Counter register
0x40092D74 C   FIELD 00w11 OVFPKTCNT (rw): Overflow Packet Counter This field indicates the number of packets discarded by the Ethernet block because of Receive queue overflow.
0x40092D74 C   FIELD 11w01 OVFCNTOVF (ro): Overflow Counter Overflow Bit When set, this bit indicates that the Rx Queue Overflow Packet Counter field crossed the maximum limit.
0x40092D78 B  REGISTER MTL_RXQx_DBG1 (rw): MTL RxQx Debug register
0x40092D78 C   FIELD 00w01 RWCSTS (rw): MTL Rx Queue Write Controller Active Status When high, this bit indicates that the MTL Rx queue Write controller is active, and it is transferring a received packet to the Rx Queue.
0x40092D78 C   FIELD 01w02 RRCSTS (ro): MTL Rx Queue Read Controller State This field gives the state of the Rx queue Read controller: 00: Idle state 01: Reading packet data 10: Reading packet status (or timestamp) 11: Flushing the packet data and status.
0x40092D78 C   FIELD 04w02 RXQSTS (ro): MTL Rx Queue Fill-Level Status This field gives the status of the fill-level of the Rx Queue: 0x0: Rx Queue empty 0x1: Rx Queue fill-level below flow-control deactivate threshold 0x2: Rx Queue fill-level above flow-control activate threshold 0x3: Rx Queue full.
0x40092D78 C   FIELD 16w14 PRXQ (ro): Number of Packets in Receive Queue This field indicates the current number of packets in the Rx Queue.
0x40092D7C B  REGISTER MTL_RXQx_CTRL1 (rw): MTL RxQx Control register
0x40092D7C C   FIELD 00w03 RXQ_WEGT (rw): Receive Queue Weight This field indicates the weight assigned to the Rx Queue 0.
0x40092D7C C   FIELD 03w01 RXQ_FRM_ARBIT (rw): Receive Queue Packet Arbitration When this bit is set, the The ethernet block drives the packet data to the ARI interface such that the entire packet data of currently-selected queue is transmitted before switching to other queue.
0x40093000 B  REGISTER DMA_MODE (rw): DMA mode register
0x40093000 C   FIELD 00w01 SWR (rw): Software Reset When this bit is set, the MAC and the OMA controller reset the logic and all internal registers of the OMA, MTL, and MAC.
0x40093000 C   FIELD 01w01 DA (rw): DMA Tx or Rx Arbitration Scheme This bit specifies the arbitration scheme between the Transmit and Receive paths of all channels: The Tx path has priority over the Rx path when the TXPR bit is set.
0x40093000 C   FIELD 02w03 TAA (rw): Transmit Arbitration Algorithm This field is used to select the arbitration algorithm for the Transmit side when multiple Tx DMAs are selected.
0x40093000 C   FIELD 11w01 TXPR (rw): Transmit Priority When set, this bit indicates that the Tx DMA has higher priority than the Rx DMA during arbitration for the system-side bus.
0x40093000 C   FIELD 12w03 PR (rw): Priority Ratio These bits control the priority ratio in weighted round-robin arbitration between the Rx DMA and Tx DMA.
0x40093004 B  REGISTER DMA_SYSBUS_MODE (rw): DMA System Bus mode
0x40093004 C   FIELD 00w01 FB (rw): Fixed Burst Length When this bit is set to 1, the AHB master will initiate burst transfers of specified length (INCRx or SINGLE).
0x40093004 C   FIELD 12w01 AAL (rw): Address-Aligned Beats When this bit is set to 1, the AHB master performs address-aligned burst transfers on Read and Write channels.
0x40093004 C   FIELD 14w01 MB (rw): Mixed Burst When this bit is set high and the FB bit is low, the AHB master performs undefined bursts transfers (INCR) for burst length of 16 or more.
0x40093004 C   FIELD 15w01 RB (rw): Rebuild INCRx Burst When this bit is set high and the AHB master gets SPLIT, RETRY, or EarlyBurst Termination (EBT) response, the AHB master interface rebuilds the pending beats of any initiated burst transfer with INCRx and SINGLEtransfers.
0x40093008 B  REGISTER DMA_INTR_STAT (rw): DMA Interrupt status
0x40093008 C   FIELD 00w01 DC0IS (rw): DMA Channel 0 Interrupt Status This bit indicates an interrupt event in DMA Channel 0.
0x40093008 C   FIELD 01w01 DC1IS (rw): DMA Channel 1 Interrupt Status This bit indicates an interrupt event in DMA Channel 1.
0x40093008 C   FIELD 16w01 MTLIS (ro): MTL Interrupt Status This bit indicates an interrupt event in the MTL.
0x40093008 C   FIELD 17w01 MACIS (ro): MAC Interrupt Status This bit indicates an interrupt event in the MAC.
0x4009300C B  REGISTER DMA_DBG_STAT (rw): DMA Debug Status
0x4009300C C   FIELD 00w01 AHSTS (rw): AHB Master Status When high, this bit indicates that the AHB master FSMs are in the non-idle state.
0x4009300C C   FIELD 08w04 RPS0 (ro): DMA Channel 0 Receive Process State This field indicates the Rx DMA FSM state for Channel 0: 0x0: Stopped (Reset or Stop Receive Command issued) 0x1: Running (Fetching Rx Transfer ) 0x2: Reserved 0x3: Running (Waiting for Rx packet) 0x4: Suspended (Rx Unavailable) 0x5: Running (Closing the Rx) 0x6: Timestamp write state 0x7: Running (Transferring the received packet data from the Rx buffer to the system memory) This field does not generate an interrupt.
0x4009300C C   FIELD 12w04 TPS0 (ro): DMA Channel 0 Transmit Process State This field indicates the Tx DMA FSM state for Channel 0: 000: Stopped (Reset or Stop Transmit Command issued) 0x1: Running (Fetching Tx Transfer) 0x2: Running (Waiting for status) 0x3: Running (Reading Data from system memory buffer and queuing it to the Tx buffer (Tx FIFO)) 0x4: Timestamp write state 0x5: Reserved for future use 0x6: Suspended (Tx Unavailable or Tx Buffer Underflow) 0x7: Running (Closing Tx ) This field does not generate an interrupt.
0x4009300C C   FIELD 16w04 RPS1 (ro): DMA Channel 1 Receive Process State This field indicates the Rx DMA FSM state for Channel 1.
0x4009300C C   FIELD 20w04 TPS1 (ro): DMA Channel 1 Transmit Process State This field indicates the Tx DMA FSM state for Channel 1.
0x40093100 B  CLUSTER DMA_CH[0]: no description available
0x40093100 B  REGISTER DMA_CHx_CTRL0 (rw): DMA Channelx Control
0x40093100 C   FIELD 16w01 PBLx8 (rw): 8xPBL mode When this bit is set, the PBL value programmed in Bits[21:16] in DMA Channel Transmit Control Table 780 is multiplied eight times.
0x40093100 C   FIELD 18w03 DSL (rw): Skip Length This bit specifies the Word, Dword, or Lword number (depending on the 32- bit, 64-bit, or 128-bit bus) to skip between two unchained s.
0x40093104 B  REGISTER DMA_CHx_TX_CTRL0 (rw): DMA Channelx Transmit Control
0x40093104 C   FIELD 00w01 ST (rw): Start or Stop Transmission Command When this bit is set, transmission is placed in the Running state.
0x40093104 C   FIELD 01w03 TCW (rw): Transmit Channel Weight This field indicates the weight assigned to the corresponding Transmit channel.
0x40093104 C   FIELD 04w01 OSF (rw): Operate on Second Frame When this bit is set, it instructs the DMA to process the second packet of the Transmit data even before the status for the first packet is obtained.
0x40093104 C   FIELD 16w06 TxPBL (rw): Transmit Programmable Burst Length These bits indicate the maximum number of beats to be transferred in one DMA data transfer.
0x40093108 B  REGISTER DMA_CHx_RX_CTRL0 (rw): DMA Channelx Receive Control
0x40093108 C   FIELD 00w01 SR (rw): Start or Stop Receive When this bit is set, the DMA tries to acquire the from the receive list and processes the incoming packets.
0x40093108 C   FIELD 03w12 RBSZ (rw): Receive Buffer size This field indicates the size of the Rx buffers specified in bytes.
0x40093108 C   FIELD 16w06 RxPBL (rw): Receive Programmable Burst Length These bits indicate the maximum number of beats to be transferred in one DMA data transfer.
0x40093108 C   FIELD 31w01 RPF (rw): DMA Rx Channel 0 Packet Flush When this bit is set to 1, the DMA will automatically flush the packet from the Rx Queues destined to DMA Rx Channel 0 when the DMA Rx Channel 0 is stopped after a system bus error has occurred.
0x40093114 B  REGISTER DMA_CHx_TXDESC_LIST_ADDR0 (rw): no description available
0x40093114 C   FIELD 02w30 STL (rw): Start of transmit list This field contains the base address of the first in the Transmit list.
0x4009311C B  REGISTER DMA_CHx_RXDESC_LIST_ADDR0 (rw): no description available
0x4009311C C   FIELD 02w30 SRL (rw): Start of receive list This field contains the base address of the First in the Receive list.
0x40093120 B  REGISTER DMA_CHx_TXDESC_TAIL_PTR0 (rw): no description available
0x40093120 C   FIELD 02w30 TDTP (rw): Transmit Tail Pointer This field contains the tail pointer for the Tx ring.
0x40093128 B  REGISTER DMA_CHx_RXDESC_TAIL_PTR0 (rw): no description available
0x40093128 C   FIELD 02w30 RDTP (rw): Receive Tail Pointer This field contains the tail pointer for the Rx ring.
0x4009312C B  REGISTER DMA_CHx_TXDESC_RING_LENGTH0 (rw): no description available
0x4009312C C   FIELD 00w10 TDRL (rw): Transmit Ring Length This field sets the maximum number of Tx descriptors in the circular ring.
0x40093130 B  REGISTER DMA_CHx_RXDESC_RING_LENGTH0 (rw): Channelx Rx descriptor Ring Length
0x40093130 C   FIELD 00w10 RDRL (rw): Receive Ring Length This register sets the maximum number of Rx descriptors in the circular ring.
0x40093134 B  REGISTER DMA_CHx_INT_EN0 (rw): Channelx Interrupt Enable
0x40093134 C   FIELD 00w01 TIE (rw): Transmit interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Transmit Interrupt is enabled.
0x40093134 C   FIELD 01w01 TSE (rw): Transmit stopped enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Transmission Stopped Interrupt is enabled.
0x40093134 C   FIELD 02w01 TBUE (rw): Transmit buffer unavailable enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Transmit Buffer Unavailable Interrupt is enabled.
0x40093134 C   FIELD 06w01 RIE (rw): Receive interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Receive Interrupt is enabled.
0x40093134 C   FIELD 07w01 RBUE (rw): Receive buffer unavailable enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Receive Buffer Unavailable Interrupt is enabled.
0x40093134 C   FIELD 08w01 RSE (rw): Received stopped enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Receive Stopped Interrupt is enabled.
0x40093134 C   FIELD 09w01 RWTE (rw): Receive watchdog timeout enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), the Receive Watchdog Timeout Interrupt is enabled.
0x40093134 C   FIELD 10w01 ETIE (rw): Early transmit interrupt enable When this bit is set with an Abnormal Interrupt Summary Enable (bit 15 in this register), Early Transmit Interrupt is enabled.
0x40093134 C   FIELD 11w01 ERIE (rw): Early receive interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Early Receive Interrupt is enabled.
0x40093134 C   FIELD 12w01 FBEE (rw): Fatal bus error enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), the Fatal Bus Error Interrupt is enabled.
0x40093134 C   FIELD 14w01 AIE (rw): Abnormal interrupt summary enable When this bit is set, an Abnormal Interrupt summary is enabled.
0x40093134 C   FIELD 15w01 NIE (rw): Normal interrupt summary enable When this bit is set, a normal interrupt is enabled.
0x40093138 B  REGISTER DMA_CHx_RX_INT_WDTIMER0 (rw): Receive Interrupt Watchdog Timer
0x40093138 C   FIELD 00w08 RIWT (rw): Receive Interrupt Watchdog Timer Count Indicates the number of system clock cycles multiplied by 256 for which the watchdog timer is set.
0x4009313C B  REGISTER DMA_CHx_SLOT_FUNC_CTRL_STAT0 (rw): Slot Function Control and Status
0x4009313C C   FIELD 00w01 ESC (rw): Enable Slot Comparison When set, this bit enables the checking of the slot numbers programmed in the Tx descriptor with the current reference given in the RSN field.
0x4009313C C   FIELD 01w01 ASC (rw): Advance Slot Check When set, this bit enables the D MA to fetch the data from the buffer when the slot number (SLOTNUM) programmed in the Tx descriptor is equal to the reference slot number given in the RSN field or, ahead of the reference slot number by up to two slots This bit is applicable only when the ESC bit is set.
0x4009313C C   FIELD 16w04 RSN (ro): Reference Slot Number This field gives the current value of the reference slot number in the DMA.
0x40093144 B  REGISTER DMA_CHx_CUR_HST_TXDESC0 (ro): Channelx Current Host Transmit descriptor
0x40093144 C   FIELD 00w32 HTD (ro): Host Transmit descriptor Address Pointer Cleared on Reset.
0x4009314C B  REGISTER DMA_CHx_CUR_HST_RXDESC0 (ro): no description available
0x4009314C C   FIELD 00w32 HRD (ro): Host Receive descriptor Address Pointer Cleared on Reset.
0x40093154 B  REGISTER DMA_CHx_CUR_HST_TXBUF0 (ro): no description available
0x40093154 C   FIELD 00w32 HTB (ro): Host Transmit Buffer Address Pointer Cleared on Reset.
0x4009315C B  REGISTER DMA_CHx_CUR_HST_RXBUF0 (ro): Channelx Current Application Receive Buffer Address
0x4009315C C   FIELD 00w32 HRB (ro): Host Receive Buffer Address Pointer Cleared on Reset.
0x40093160 B  REGISTER DMA_CHx_STAT0 (rw): Channelx DMA status register
0x40093160 C   FIELD 00w01 TI (rw): Transmit Interrupt This bit indicates that the packet transmission is complete.
0x40093160 C   FIELD 01w01 TPS (rw): Transmit Process Stopped This bit is set when the transmission is stopped.
0x40093160 C   FIELD 02w01 TBU (rw): Transmit Buffer Unavailable This bit indicates that the application owns the next descriptor in the transmit list, and the DMA cannot acquire it.
0x40093160 C   FIELD 06w01 RI (rw): Receive Interrupt This bit indicates that the packet reception is complete.
0x40093160 C   FIELD 07w01 RBU (rw): Receive Buffer Unavailable This bit indicates that the application owns the next in the receive list, and the DMA cannot acquire it.
0x40093160 C   FIELD 08w01 RPS (rw): Receive Process Stopped This bit is asserted when the Rx process enters the Stopped state.
0x40093160 C   FIELD 09w01 RWT (rw): Receive Watchdog time out This bit is asserted when a packet with length greater than 2,048 bytes (10,240 bytes when Jumbo Packet mode is enabled) is received.
0x40093160 C   FIELD 10w01 ETI (rw): Early Transmit Interrupt This bit indicates that the packet to be transmitted is fully transferred to the MTL Tx FIFO.
0x40093160 C   FIELD 11w01 ERI (rw): Early Receive Interrupt This bit indicates that the DMA filled the first data buffer of the packet.
0x40093160 C   FIELD 12w01 FBE (rw): Fatal Bus Error This bit indicates that a bus error occurred (as described in the EB field).
0x40093160 C   FIELD 14w01 AIS (rw): Abnormal Interrupt Summary Abnormal Interrupt Summary bit value is the logical OR of the following when the corresponding interrupt bits are enabled in the DMA Channel Interrupt Enable register Table 778: Bit 1: Transmit Process Stopped Bit 7: Receive Buffer Unavailable Bit 8: Receive Process Stopped Bit 10: Ear1y Transmit Interrupt Bit 12: Fatal Bus Error Only unmasked bits affect the Abnormal Interrupt Summary bit.
0x40093160 C   FIELD 15w01 NIS (rw): Normal Interrupt Summary Normal Interrupt Summary bit value is the logical OR of the following bits when the corresponding interrupt bits are enabled in the DMA Channel Interrupt Enable register Table 778: Bit 0: Transmit Interrupt Bit 2: Transmit Buffer Unavailable Bit 6: Receive Interrupt Bit 11: Early Receive Interrupt Only unmasked bits (interrupts for which interrupt enable is set in DMA Channel Interrupt Enable register Table 778) affect the Normal Interrupt Summary bit.
0x40093160 C   FIELD 16w03 EB (rw): DMA Error Bits This field indicates the type of error that caused a Bus Error.
0x40093180 B  CLUSTER DMA_CH[1]: no description available
0x40093180 B  REGISTER DMA_CHx_CTRL1 (rw): DMA Channelx Control
0x40093180 C   FIELD 16w01 PBLx8 (rw): 8xPBL mode When this bit is set, the PBL value programmed in Bits[21:16] in DMA Channel Transmit Control Table 780 is multiplied eight times.
0x40093180 C   FIELD 18w03 DSL (rw): Skip Length This bit specifies the Word, Dword, or Lword number (depending on the 32- bit, 64-bit, or 128-bit bus) to skip between two unchained s.
0x40093184 B  REGISTER DMA_CHx_TX_CTRL1 (rw): DMA Channelx Transmit Control
0x40093184 C   FIELD 00w01 ST (rw): Start or Stop Transmission Command When this bit is set, transmission is placed in the Running state.
0x40093184 C   FIELD 01w03 TCW (rw): Transmit Channel Weight This field indicates the weight assigned to the corresponding Transmit channel.
0x40093184 C   FIELD 04w01 OSF (rw): Operate on Second Frame When this bit is set, it instructs the DMA to process the second packet of the Transmit data even before the status for the first packet is obtained.
0x40093184 C   FIELD 16w06 TxPBL (rw): Transmit Programmable Burst Length These bits indicate the maximum number of beats to be transferred in one DMA data transfer.
0x40093188 B  REGISTER DMA_CHx_RX_CTRL1 (rw): DMA Channelx Receive Control
0x40093188 C   FIELD 00w01 SR (rw): Start or Stop Receive When this bit is set, the DMA tries to acquire the from the receive list and processes the incoming packets.
0x40093188 C   FIELD 03w12 RBSZ (rw): Receive Buffer size This field indicates the size of the Rx buffers specified in bytes.
0x40093188 C   FIELD 16w06 RxPBL (rw): Receive Programmable Burst Length These bits indicate the maximum number of beats to be transferred in one DMA data transfer.
0x40093188 C   FIELD 31w01 RPF (rw): DMA Rx Channel 0 Packet Flush When this bit is set to 1, the DMA will automatically flush the packet from the Rx Queues destined to DMA Rx Channel 0 when the DMA Rx Channel 0 is stopped after a system bus error has occurred.
0x40093194 B  REGISTER DMA_CHx_TXDESC_LIST_ADDR1 (rw): no description available
0x40093194 C   FIELD 02w30 STL (rw): Start of transmit list This field contains the base address of the first in the Transmit list.
0x4009319C B  REGISTER DMA_CHx_RXDESC_LIST_ADDR1 (rw): no description available
0x4009319C C   FIELD 02w30 SRL (rw): Start of receive list This field contains the base address of the First in the Receive list.
0x400931A0 B  REGISTER DMA_CHx_TXDESC_TAIL_PTR1 (rw): no description available
0x400931A0 C   FIELD 02w30 TDTP (rw): Transmit Tail Pointer This field contains the tail pointer for the Tx ring.
0x400931A8 B  REGISTER DMA_CHx_RXDESC_TAIL_PTR1 (rw): no description available
0x400931A8 C   FIELD 02w30 RDTP (rw): Receive Tail Pointer This field contains the tail pointer for the Rx ring.
0x400931AC B  REGISTER DMA_CHx_TXDESC_RING_LENGTH1 (rw): no description available
0x400931AC C   FIELD 00w10 TDRL (rw): Transmit Ring Length This field sets the maximum number of Tx descriptors in the circular ring.
0x400931B0 B  REGISTER DMA_CHx_RXDESC_RING_LENGTH1 (rw): Channelx Rx descriptor Ring Length
0x400931B0 C   FIELD 00w10 RDRL (rw): Receive Ring Length This register sets the maximum number of Rx descriptors in the circular ring.
0x400931B4 B  REGISTER DMA_CHx_INT_EN1 (rw): Channelx Interrupt Enable
0x400931B4 C   FIELD 00w01 TIE (rw): Transmit interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Transmit Interrupt is enabled.
0x400931B4 C   FIELD 01w01 TSE (rw): Transmit stopped enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Transmission Stopped Interrupt is enabled.
0x400931B4 C   FIELD 02w01 TBUE (rw): Transmit buffer unavailable enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Transmit Buffer Unavailable Interrupt is enabled.
0x400931B4 C   FIELD 06w01 RIE (rw): Receive interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Receive Interrupt is enabled.
0x400931B4 C   FIELD 07w01 RBUE (rw): Receive buffer unavailable enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Receive Buffer Unavailable Interrupt is enabled.
0x400931B4 C   FIELD 08w01 RSE (rw): Received stopped enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), Receive Stopped Interrupt is enabled.
0x400931B4 C   FIELD 09w01 RWTE (rw): Receive watchdog timeout enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), the Receive Watchdog Timeout Interrupt is enabled.
0x400931B4 C   FIELD 10w01 ETIE (rw): Early transmit interrupt enable When this bit is set with an Abnormal Interrupt Summary Enable (bit 15 in this register), Early Transmit Interrupt is enabled.
0x400931B4 C   FIELD 11w01 ERIE (rw): Early receive interrupt enable When this bit is set with Normal Interrupt Summary Enable (bit 16 in this register), Early Receive Interrupt is enabled.
0x400931B4 C   FIELD 12w01 FBEE (rw): Fatal bus error enable When this bit is set with Abnormal Interrupt Summary Enable (bit 15 in this register), the Fatal Bus Error Interrupt is enabled.
0x400931B4 C   FIELD 14w01 AIE (rw): Abnormal interrupt summary enable When this bit is set, an Abnormal Interrupt summary is enabled.
0x400931B4 C   FIELD 15w01 NIE (rw): Normal interrupt summary enable When this bit is set, a normal interrupt is enabled.
0x400931B8 B  REGISTER DMA_CHx_RX_INT_WDTIMER1 (rw): Receive Interrupt Watchdog Timer
0x400931B8 C   FIELD 00w08 RIWT (rw): Receive Interrupt Watchdog Timer Count Indicates the number of system clock cycles multiplied by 256 for which the watchdog timer is set.
0x400931BC B  REGISTER DMA_CHx_SLOT_FUNC_CTRL_STAT1 (rw): Slot Function Control and Status
0x400931BC C   FIELD 00w01 ESC (rw): Enable Slot Comparison When set, this bit enables the checking of the slot numbers programmed in the Tx descriptor with the current reference given in the RSN field.
0x400931BC C   FIELD 01w01 ASC (rw): Advance Slot Check When set, this bit enables the D MA to fetch the data from the buffer when the slot number (SLOTNUM) programmed in the Tx descriptor is equal to the reference slot number given in the RSN field or, ahead of the reference slot number by up to two slots This bit is applicable only when the ESC bit is set.
0x400931BC C   FIELD 16w04 RSN (ro): Reference Slot Number This field gives the current value of the reference slot number in the DMA.
0x400931C4 B  REGISTER DMA_CHx_CUR_HST_TXDESC1 (ro): Channelx Current Host Transmit descriptor
0x400931C4 C   FIELD 00w32 HTD (ro): Host Transmit descriptor Address Pointer Cleared on Reset.
0x400931CC B  REGISTER DMA_CHx_CUR_HST_RXDESC1 (ro): no description available
0x400931CC C   FIELD 00w32 HRD (ro): Host Receive descriptor Address Pointer Cleared on Reset.
0x400931D4 B  REGISTER DMA_CHx_CUR_HST_TXBUF1 (ro): no description available
0x400931D4 C   FIELD 00w32 HTB (ro): Host Transmit Buffer Address Pointer Cleared on Reset.
0x400931DC B  REGISTER DMA_CHx_CUR_HST_RXBUF1 (ro): Channelx Current Application Receive Buffer Address
0x400931DC C   FIELD 00w32 HRB (ro): Host Receive Buffer Address Pointer Cleared on Reset.
0x400931E0 B  REGISTER DMA_CHx_STAT1 (rw): Channelx DMA status register
0x400931E0 C   FIELD 00w01 TI (rw): Transmit Interrupt This bit indicates that the packet transmission is complete.
0x400931E0 C   FIELD 01w01 TPS (rw): Transmit Process Stopped This bit is set when the transmission is stopped.
0x400931E0 C   FIELD 02w01 TBU (rw): Transmit Buffer Unavailable This bit indicates that the application owns the next descriptor in the transmit list, and the DMA cannot acquire it.
0x400931E0 C   FIELD 06w01 RI (rw): Receive Interrupt This bit indicates that the packet reception is complete.
0x400931E0 C   FIELD 07w01 RBU (rw): Receive Buffer Unavailable This bit indicates that the application owns the next in the receive list, and the DMA cannot acquire it.
0x400931E0 C   FIELD 08w01 RPS (rw): Receive Process Stopped This bit is asserted when the Rx process enters the Stopped state.
0x400931E0 C   FIELD 09w01 RWT (rw): Receive Watchdog time out This bit is asserted when a packet with length greater than 2,048 bytes (10,240 bytes when Jumbo Packet mode is enabled) is received.
0x400931E0 C   FIELD 10w01 ETI (rw): Early Transmit Interrupt This bit indicates that the packet to be transmitted is fully transferred to the MTL Tx FIFO.
0x400931E0 C   FIELD 11w01 ERI (rw): Early Receive Interrupt This bit indicates that the DMA filled the first data buffer of the packet.
0x400931E0 C   FIELD 12w01 FBE (rw): Fatal Bus Error This bit indicates that a bus error occurred (as described in the EB field).
0x400931E0 C   FIELD 14w01 AIS (rw): Abnormal Interrupt Summary Abnormal Interrupt Summary bit value is the logical OR of the following when the corresponding interrupt bits are enabled in the DMA Channel Interrupt Enable register Table 778: Bit 1: Transmit Process Stopped Bit 7: Receive Buffer Unavailable Bit 8: Receive Process Stopped Bit 10: Ear1y Transmit Interrupt Bit 12: Fatal Bus Error Only unmasked bits affect the Abnormal Interrupt Summary bit.
0x400931E0 C   FIELD 15w01 NIS (rw): Normal Interrupt Summary Normal Interrupt Summary bit value is the logical OR of the following bits when the corresponding interrupt bits are enabled in the DMA Channel Interrupt Enable register Table 778: Bit 0: Transmit Interrupt Bit 2: Transmit Buffer Unavailable Bit 6: Receive Interrupt Bit 11: Early Receive Interrupt Only unmasked bits (interrupts for which interrupt enable is set in DMA Channel Interrupt Enable register Table 778) affect the Normal Interrupt Summary bit.
0x400931E0 C   FIELD 16w03 EB (rw): DMA Error Bits This field indicates the type of error that caused a Bus Error.
0x40094000 A PERIPHERAL USBHSD
0x40094000 B  REGISTER DEVCMDSTAT (rw): USB Device Command/Status register
0x40094000 C   FIELD 00w07 DEV_ADDR (rw): USB device address.
0x40094000 C   FIELD 07w01 DEV_EN (rw): USB device enable.
0x40094000 C   FIELD 08w01 SETUP (rw): SETUP token received.
0x40094000 C   FIELD 09w01 FORCE_NEEDCLK (rw): Forces the NEEDCLK output to always be on:.
0x40094000 C   FIELD 10w01 FORCE_VBUS (rw): If this bit is set to 1, the VBUS voltage indicators from the PHY are overruled.
0x40094000 C   FIELD 11w01 LPM_SUP (rw): LPM Supported:.
0x40094000 C   FIELD 12w01 INTONNAK_AO (rw): Interrupt on NAK for interrupt and bulk OUT EP:.
0x40094000 C   FIELD 13w01 INTONNAK_AI (rw): Interrupt on NAK for interrupt and bulk IN EP:.
0x40094000 C   FIELD 14w01 INTONNAK_CO (rw): Interrupt on NAK for control OUT EP:.
0x40094000 C   FIELD 15w01 INTONNAK_CI (rw): Interrupt on NAK for control IN EP:.
0x40094000 C   FIELD 16w01 DCON (rw): Device status - connect.
0x40094000 C   FIELD 17w01 DSUS (rw): Device status - suspend.
0x40094000 C   FIELD 19w01 LPM_SUS (rw): Device status - LPM Suspend.
0x40094000 C   FIELD 20w01 LPM_REWP (ro): LPM Remote Wake-up Enabled by USB host.
0x40094000 C   FIELD 22w02 Speed (ro): This field indicates the speed at which the device operates: 00b: reserved 01b: full-speed 10b: high-speed 11b: super-speed (reserved for future use).
0x40094000 C   FIELD 24w01 DCON_C (rw): Device status - connect change.
0x40094000 C   FIELD 25w01 DSUS_C (rw): Device status - suspend change.
0x40094000 C   FIELD 26w01 DRES_C (rw): Device status - reset change.
0x40094000 C   FIELD 28w01 VBUS_DEBOUNCED (ro): This bit indicates if VBUS is detected or not.
0x40094000 C   FIELD 29w03 PHY_TEST_MODE (rw): This field is written by firmware to put the PHY into a test mode as defined by the USB2.
0x40094004 B  REGISTER INFO (ro): USB Info register
0x40094004 C   FIELD 00w11 FRAME_NR (ro): Frame number.
0x40094004 C   FIELD 11w04 ERR_CODE (ro): The error code which last occurred:.
0x40094004 C   FIELD 16w08 Minrev (ro): Minor revision.
0x40094004 C   FIELD 24w08 Majrev (ro): Major revision.
0x40094008 B  REGISTER EPLISTSTART (rw): USB EP Command/Status List start address
0x40094008 C   FIELD 08w12 EP_LIST_PRG (rw): Programmable portion of the USB EP Command/Status List address.
0x40094008 C   FIELD 20w12 EP_LIST_FIXED (ro): Fixed portion of USB EP Command/Status List address.
0x4009400C B  REGISTER DATABUFSTART (rw): USB Data buffer start address
0x4009400C C   FIELD 00w32 DA_BUF (rw): Start address of the memory page where all endpoint data buffers are located.
0x40094010 B  REGISTER LPM (rw): USB Link Power Management register
0x40094010 C   FIELD 00w04 HIRD_HW (ro): Host Initiated Resume Duration - HW.
0x40094010 C   FIELD 04w04 HIRD_SW (rw): Host Initiated Resume Duration - SW.
0x40094010 C   FIELD 08w01 DATA_PENDING (rw): As long as this bit is set to one and LPM supported bit is set to one, HW will return a NYET handshake on every LPM token it receives.
0x40094014 B  REGISTER EPSKIP (rw): USB Endpoint skip
0x40094014 C   FIELD 00w12 SKIP (rw): Endpoint skip: Writing 1 to one of these bits, will indicate to HW that it must deactivate the buffer assigned to this endpoint and return control back to software.
0x40094018 B  REGISTER EPINUSE (rw): USB Endpoint Buffer in use
0x40094018 C   FIELD 02w10 BUF (rw): Buffer in use: This register has one bit per physical endpoint.
0x4009401C B  REGISTER EPBUFCFG (rw): USB Endpoint Buffer Configuration register
0x4009401C C   FIELD 02w10 BUF_SB (rw): Buffer usage: This register has one bit per physical endpoint.
0x40094020 B  REGISTER INTSTAT (rw): USB interrupt status register
0x40094020 C   FIELD 00w01 EP0OUT (rw): Interrupt status register bit for the Control EP0 OUT direction.
0x40094020 C   FIELD 01w01 EP0IN (rw): Interrupt status register bit for the Control EP0 IN direction.
0x40094020 C   FIELD 02w01 EP1OUT (rw): Interrupt status register bit for the EP1 OUT direction.
0x40094020 C   FIELD 03w01 EP1IN (rw): Interrupt status register bit for the EP1 IN direction.
0x40094020 C   FIELD 04w01 EP2OUT (rw): Interrupt status register bit for the EP2 OUT direction.
0x40094020 C   FIELD 05w01 EP2IN (rw): Interrupt status register bit for the EP2 IN direction.
0x40094020 C   FIELD 06w01 EP3OUT (rw): Interrupt status register bit for the EP3 OUT direction.
0x40094020 C   FIELD 07w01 EP3IN (rw): Interrupt status register bit for the EP3 IN direction.
0x40094020 C   FIELD 08w01 EP4OUT (rw): Interrupt status register bit for the EP4 OUT direction.
0x40094020 C   FIELD 09w01 EP4IN (rw): Interrupt status register bit for the EP4 IN direction.
0x40094020 C   FIELD 10w01 EP5OUT (rw): Interrupt status register bit for the EP5 OUT direction.
0x40094020 C   FIELD 11w01 EP5IN (rw): Interrupt status register bit for the EP5 IN direction.
0x40094020 C   FIELD 30w01 FRAME_INT (rw): Frame interrupt.
0x40094020 C   FIELD 31w01 DEV_INT (rw): Device status interrupt.
0x40094024 B  REGISTER INTEN (rw): USB interrupt enable register
0x40094024 C   FIELD 00w12 EP_INT_EN (rw): If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line.
0x40094024 C   FIELD 30w01 FRAME_INT_EN (rw): If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line.
0x40094024 C   FIELD 31w01 DEV_INT_EN (rw): If this bit is set and the corresponding USB interrupt status bit is set, a HW interrupt is generated on the interrupt line.
0x40094028 B  REGISTER INTSETSTAT (rw): USB set interrupt status register
0x40094028 C   FIELD 00w12 EP_SET_INT (rw): If software writes a one to one of these bits, the corresponding USB interrupt status bit is set.
0x40094028 C   FIELD 30w01 FRAME_SET_INT (rw): If software writes a one to one of these bits, the corresponding USB interrupt status bit is set.
0x40094028 C   FIELD 31w01 DEV_SET_INT (rw): If software writes a one to one of these bits, the corresponding USB interrupt status bit is set.
0x40094034 B  REGISTER EPTOGGLE (rw): USB Endpoint toggle register
0x40094034 C   FIELD 00w30 TOGGLE (rw): Endpoint data toggle: This field indicates the current value of the data toggle for the corresponding endpoint.
0x4009403C B  REGISTER ULPIDEBUG (rw): UTMI/ULPI debug register
0x4009403C C   FIELD 00w08 PHY_ADDR (rw): ULPI mode: Bits 7:0 are used as the address when doing a register access over the ULPI interface.
0x4009403C C   FIELD 08w08 PHY_WDATA (rw): UTMI+ mode: Reserved.
0x4009403C C   FIELD 16w08 PHY_RDATA (rw): UTMI+ mode: Bits 7:0 contains the value returned by the VStatus signal on Vendor Interface of UTMI+.
0x4009403C C   FIELD 24w01 PHY_RW (rw): UTMI+ mode: Reserved.
0x4009403C C   FIELD 25w01 PHY_ACCESS (rw): Software writes this bit to one to start a read or write operation.
0x4009403C C   FIELD 31w01 PHY_MODE (rw): This bit indicates if the interface between the controller is UTMI+ or ULPI.
0x40095000 A PERIPHERAL CRC_ENGINE
0x40095000 B  REGISTER MODE (rw): CRC mode
0x40095000 C   FIELD 00w02 CRC_POLY: CRC polynomial
0x40095000 C   FIELD 02w01 BIT_RVS_DATA: Data bit order
0x40095000 C   FIELD 03w01 CMPL_DATA: Data complement
0x40095000 C   FIELD 04w01 BIT_RVS_SUM: Sum bit order
0x40095000 C   FIELD 05w01 CMPL_SUM: Sum complement
0x40095004 B  REGISTER SEED (rw): CRC seed
0x40095004 C   FIELD 00w32 CRC_SEED: A write access to this register will load CRC seed value to CRC_SUM register with selected bit order and 1’s complement pre-processes.. Remark: A write access to this register will overrule the CRC calculation in progresses.
0x40095008 B  REGISTER DATA (wo): Data written to this register will be taken to perform CRC calculation with selected bit order and 1’s complement pre-process. Any write size 8, 16 or 32-bit are allowed and accept back-to-back transactions.
0x40095008 B  REGISTER DATA16 (wo): Data register - half-word sized
0x40095008 B  REGISTER DATA32 (wo): Data register - word sized
0x40095008 B  REGISTER DATA8 (wo): Data register - byte sized
0x40095008 B  REGISTER SUM (ro): The most recent CRC sum can be read through this register with selected bit order and 1’s complement post-processes.
0x40095008 C   FIELD 00w08 DATA8: Data register bits
0x40095008 C   FIELD 00w16 DATA16: Data register bits
0x40095008 C   FIELD 00w32 CRC_SUM (ro): The most recent CRC sum can be read through this register with selected bit order and 1's complement post-processes.
0x40095008 C   FIELD 00w32 CRC_WR_DATA (wo): Data written to this register will be taken to perform CRC calculation with selected bit order and 1's complement pre-process. Any write size 8, 16 or 32-bit are allowed and accept back-to-back transactions.
0x40095008 C   FIELD 00w32 DATA32: Data register bits
0x40096000 A PERIPHERAL FLEXCOMM5
0x40096000 A PERIPHERAL I2C5
0x40096000 A PERIPHERAL SPI5
0x40096000 A PERIPHERAL USART5
0x40096000 B  REGISTER CFG (rw): USART Configuration register. Basic USART configuration settings that typically are not changed during operation.
0x40096000 C   FIELD 00w01 ENABLE (rw): USART Enable.
0x40096000 C   FIELD 02w02 DATALEN (rw): Selects the data size for the USART.
0x40096000 C   FIELD 04w02 PARITYSEL (rw): Selects what type of parity is used by the USART.
0x40096000 C   FIELD 06w01 STOPLEN (rw): Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.
0x40096000 C   FIELD 07w01 MODE32K (rw): Selects standard or 32 kHz clocking mode.
0x40096000 C   FIELD 08w01 LINMODE (rw): LIN break mode enable.
0x40096000 C   FIELD 09w01 CTSEN (rw): CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.
0x40096000 C   FIELD 11w01 SYNCEN (rw): Selects synchronous or asynchronous operation.
0x40096000 C   FIELD 12w01 CLKPOL (rw): Selects the clock polarity and sampling edge of received data in synchronous mode.
0x40096000 C   FIELD 14w01 SYNCMST (rw): Synchronous mode Master select.
0x40096000 C   FIELD 15w01 LOOP (rw): Selects data loopback mode.
0x40096000 C   FIELD 18w01 OETA (rw): Output Enable Turnaround time enable for RS-485 operation.
0x40096000 C   FIELD 19w01 AUTOADDR (rw): Automatic Address matching enable.
0x40096000 C   FIELD 20w01 OESEL (rw): Output Enable Select.
0x40096000 C   FIELD 21w01 OEPOL (rw): Output Enable Polarity.
0x40096000 C   FIELD 22w01 RXPOL (rw): Receive data polarity.
0x40096000 C   FIELD 23w01 TXPOL (rw): Transmit data polarity.
0x40096004 B  REGISTER CTL (rw): USART Control register. USART control settings that are more likely to change during operation.
0x40096004 C   FIELD 01w01 TXBRKEN (rw): Break Enable.
0x40096004 C   FIELD 02w01 ADDRDET (rw): Enable address detect mode.
0x40096004 C   FIELD 06w01 TXDIS (rw): Transmit Disable.
0x40096004 C   FIELD 08w01 CC (rw): Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.
0x40096004 C   FIELD 09w01 CLRCCONRX (rw): Clear Continuous Clock.
0x40096004 C   FIELD 16w01 AUTOBAUD (rw): Autobaud enable.
0x40096008 B  REGISTER STAT (rw): USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them.
0x40096008 C   FIELD 01w01 RXIDLE (ro): Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data.
0x40096008 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data.
0x40096008 C   FIELD 04w01 CTS (ro): This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled.
0x40096008 C   FIELD 05w01 DELTACTS (rw): This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software.
0x40096008 C   FIELD 06w01 TXDISSTAT (ro): Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1).
0x40096008 C   FIELD 10w01 RXBRK (ro): Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high.
0x40096008 C   FIELD 11w01 DELTARXBRK (rw): This bit is set when a change in the state of receiver break detection occurs. Cleared by software.
0x40096008 C   FIELD 12w01 START (rw): This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software.
0x40096008 C   FIELD 13w01 FRAMERRINT (rw): Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40096008 C   FIELD 14w01 PARITYERRINT (rw): Parity Error interrupt flag. This flag is set when a parity error is detected in a received character.
0x40096008 C   FIELD 15w01 RXNOISEINT (rw): Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception.
0x40096008 C   FIELD 16w01 ABERR (rw): Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out.
0x4009600C B  REGISTER INTENSET (rw): Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4009600C C   FIELD 03w01 TXIDLEEN (rw): When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1).
0x4009600C C   FIELD 05w01 DELTACTSEN (rw): When 1, enables an interrupt when there is a change in the state of the CTS input.
0x4009600C C   FIELD 06w01 TXDISEN (rw): When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details.
0x4009600C C   FIELD 11w01 DELTARXBRKEN (rw): When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted).
0x4009600C C   FIELD 12w01 STARTEN (rw): When 1, enables an interrupt when a received start bit has been detected.
0x4009600C C   FIELD 13w01 FRAMERREN (rw): When 1, enables an interrupt when a framing error has been detected.
0x4009600C C   FIELD 14w01 PARITYERREN (rw): When 1, enables an interrupt when a parity error has been detected.
0x4009600C C   FIELD 15w01 RXNOISEEN (rw): When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354.
0x4009600C C   FIELD 16w01 ABERREN (rw): When 1, enables an interrupt when an auto baud error occurs.
0x40096010 B  REGISTER INTENCLR (wo): Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared.
0x40096010 C   FIELD 03w01 TXIDLECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096010 C   FIELD 05w01 DELTACTSCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096010 C   FIELD 06w01 TXDISCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096010 C   FIELD 11w01 DELTARXBRKCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096010 C   FIELD 12w01 STARTCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096010 C   FIELD 13w01 FRAMERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096010 C   FIELD 14w01 PARITYERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096010 C   FIELD 15w01 RXNOISECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096010 C   FIELD 16w01 ABERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096020 B  REGISTER BRG (rw): Baud Rate Generator register. 16-bit integer baud rate divisor value.
0x40096020 C   FIELD 00w16 BRGVAL (rw): This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function.
0x40096024 B  REGISTER INTSTAT (ro): Interrupt status register. Reflects interrupts that are currently enabled.
0x40096024 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle status.
0x40096024 C   FIELD 05w01 DELTACTS (ro): This bit is set when a change in the state of the CTS input is detected.
0x40096024 C   FIELD 06w01 TXDISINT (ro): Transmitter Disabled Interrupt flag.
0x40096024 C   FIELD 11w01 DELTARXBRK (ro): This bit is set when a change in the state of receiver break detection occurs.
0x40096024 C   FIELD 12w01 START (ro): This bit is set when a start is detected on the receiver input.
0x40096024 C   FIELD 13w01 FRAMERRINT (ro): Framing Error interrupt flag.
0x40096024 C   FIELD 14w01 PARITYERRINT (ro): Parity Error interrupt flag.
0x40096024 C   FIELD 15w01 RXNOISEINT (ro): Received Noise interrupt flag.
0x40096024 C   FIELD 16w01 ABERRINT (ro): Auto baud Error Interrupt flag.
0x40096028 B  REGISTER OSR (rw): Oversample selection register for asynchronous communication.
0x40096028 C   FIELD 00w04 OSRVAL (rw): Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit.
0x4009602C B  REGISTER ADDR (rw): Address register for automatic address matching.
0x4009602C C   FIELD 00w08 ADDRESS (rw): 8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1).
0x40096400 B  REGISTER CFG (rw): SPI Configuration register
0x40096400 C   FIELD 00w01 ENABLE (rw): SPI enable.
0x40096400 C   FIELD 02w01 MASTER (rw): Master mode select.
0x40096400 C   FIELD 03w01 LSBF (rw): LSB First mode enable.
0x40096400 C   FIELD 04w01 CPHA (rw): Clock Phase select.
0x40096400 C   FIELD 05w01 CPOL (rw): Clock Polarity select.
0x40096400 C   FIELD 07w01 LOOP (rw): Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.
0x40096400 C   FIELD 08w01 SPOL0 (rw): SSEL0 Polarity select.
0x40096400 C   FIELD 09w01 SPOL1 (rw): SSEL1 Polarity select.
0x40096400 C   FIELD 10w01 SPOL2 (rw): SSEL2 Polarity select.
0x40096400 C   FIELD 11w01 SPOL3 (rw): SSEL3 Polarity select.
0x40096404 B  REGISTER DLY (rw): SPI Delay register
0x40096404 C   FIELD 00w04 PRE_DELAY (rw): Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40096404 C   FIELD 04w04 POST_DELAY (rw): Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40096404 C   FIELD 08w04 FRAME_DELAY (rw): If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40096404 C   FIELD 12w04 TRANSFER_DELAY (rw): Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times.
0x40096408 B  REGISTER STAT (rw): SPI Status. Some status flags can be cleared by writing a 1 to that bit position.
0x40096408 C   FIELD 04w01 SSA (wo): Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software.
0x40096408 C   FIELD 05w01 SSD (wo): Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software.
0x40096408 C   FIELD 06w01 STALLED (ro): Stalled status flag. This indicates whether the SPI is currently in a stall condition.
0x40096408 C   FIELD 07w01 ENDTRANSFER (rw): End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted.
0x40096408 C   FIELD 08w01 MSTIDLE (ro): Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data.
0x4009640C B  REGISTER INTENSET (rw): SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4009640C C   FIELD 04w01 SSAEN (rw): Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.
0x4009640C C   FIELD 05w01 SSDEN (rw): Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.
0x4009640C C   FIELD 08w01 MSTIDLEEN (rw): Master idle interrupt enable.
0x40096410 B  REGISTER INTENCLR (wo): SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared.
0x40096410 C   FIELD 04w01 SSAEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096410 C   FIELD 05w01 SSDEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096410 C   FIELD 08w01 MSTIDLE (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40096424 B  REGISTER DIV (rw): SPI clock Divider
0x40096424 C   FIELD 00w16 DIVVAL (rw): Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
0x40096428 B  REGISTER INTSTAT (ro): SPI Interrupt Status
0x40096428 C   FIELD 04w01 SSA (ro): Slave Select Assert.
0x40096428 C   FIELD 05w01 SSD (ro): Slave Select Deassert.
0x40096428 C   FIELD 08w01 MSTIDLE (ro): Master Idle status flag.
0x40096800 B  REGISTER CFG (rw): Configuration for shared functions.
0x40096800 C   FIELD 00w01 MSTEN (rw): Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.
0x40096800 C   FIELD 01w01 SLVEN (rw): Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.
0x40096800 C   FIELD 02w01 MONEN (rw): Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.
0x40096800 C   FIELD 03w01 TIMEOUTEN (rw): I2C bus Time-out Enable. When disabled, the time-out function is internally reset.
0x40096800 C   FIELD 04w01 MONCLKSTR (rw): Monitor function Clock Stretching.
0x40096800 C   FIELD 05w01 HSCAPABLE (rw): High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.
0x40096804 B  REGISTER STAT (rw): Status register for Master, Slave, and Monitor functions.
0x40096804 C   FIELD 00w01 MSTPENDING (ro): Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.
0x40096804 C   FIELD 01w03 MSTSTATE (ro): Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.
0x40096804 C   FIELD 04w01 MSTARBLOSS (rw): Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40096804 C   FIELD 06w01 MSTSTSTPERR (rw): Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40096804 C   FIELD 08w01 SLVPENDING (ro): Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.
0x40096804 C   FIELD 09w02 SLVSTATE (ro): Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.
0x40096804 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.
0x40096804 C   FIELD 12w02 SLVIDX (ro): Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.
0x40096804 C   FIELD 14w01 SLVSEL (ro): Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.
0x40096804 C   FIELD 15w01 SLVDESEL (rw): Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
0x40096804 C   FIELD 16w01 MONRDY (ro): Monitor Ready. This flag is cleared when the MONRXDAT register is read.
0x40096804 C   FIELD 17w01 MONOV (rw): Monitor Overflow flag.
0x40096804 C   FIELD 18w01 MONACTIVE (ro): Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.
0x40096804 C   FIELD 19w01 MONIDLE (rw): Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.
0x40096804 C   FIELD 24w01 EVENTTIMEOUT (rw): Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.
0x40096804 C   FIELD 25w01 SCLTIMEOUT (rw): SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.
0x40096808 B  REGISTER INTENSET (rw): Interrupt Enable Set and read register.
0x40096808 C   FIELD 00w01 MSTPENDINGEN (rw): Master Pending interrupt Enable.
0x40096808 C   FIELD 04w01 MSTARBLOSSEN (rw): Master Arbitration Loss interrupt Enable.
0x40096808 C   FIELD 06w01 MSTSTSTPERREN (rw): Master Start/Stop Error interrupt Enable.
0x40096808 C   FIELD 08w01 SLVPENDINGEN (rw): Slave Pending interrupt Enable.
0x40096808 C   FIELD 11w01 SLVNOTSTREN (rw): Slave Not Stretching interrupt Enable.
0x40096808 C   FIELD 15w01 SLVDESELEN (rw): Slave Deselect interrupt Enable.
0x40096808 C   FIELD 16w01 MONRDYEN (rw): Monitor data Ready interrupt Enable.
0x40096808 C   FIELD 17w01 MONOVEN (rw): Monitor Overrun interrupt Enable.
0x40096808 C   FIELD 19w01 MONIDLEEN (rw): Monitor Idle interrupt Enable.
0x40096808 C   FIELD 24w01 EVENTTIMEOUTEN (rw): Event time-out interrupt Enable.
0x40096808 C   FIELD 25w01 SCLTIMEOUTEN (rw): SCL time-out interrupt Enable.
0x4009680C B  REGISTER INTENCLR (wo): Interrupt Enable Clear register.
0x4009680C C   FIELD 00w01 MSTPENDINGCLR (wo): Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented.
0x4009680C C   FIELD 04w01 MSTARBLOSSCLR (wo): Master Arbitration Loss interrupt clear.
0x4009680C C   FIELD 06w01 MSTSTSTPERRCLR (wo): Master Start/Stop Error interrupt clear.
0x4009680C C   FIELD 08w01 SLVPENDINGCLR (wo): Slave Pending interrupt clear.
0x4009680C C   FIELD 11w01 SLVNOTSTRCLR (wo): Slave Not Stretching interrupt clear.
0x4009680C C   FIELD 15w01 SLVDESELCLR (wo): Slave Deselect interrupt clear.
0x4009680C C   FIELD 16w01 MONRDYCLR (wo): Monitor data Ready interrupt clear.
0x4009680C C   FIELD 17w01 MONOVCLR (wo): Monitor Overrun interrupt clear.
0x4009680C C   FIELD 19w01 MONIDLECLR (wo): Monitor Idle interrupt clear.
0x4009680C C   FIELD 24w01 EVENTTIMEOUTCLR (wo): Event time-out interrupt clear.
0x4009680C C   FIELD 25w01 SCLTIMEOUTCLR (wo): SCL time-out interrupt clear.
0x40096810 B  REGISTER TIMEOUT (rw): Time-out value register.
0x40096810 C   FIELD 00w04 TOMIN (rw): Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks.
0x40096810 C   FIELD 04w12 TO (rw): Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock.
0x40096814 B  REGISTER CLKDIV (rw): Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function.
0x40096814 C   FIELD 00w16 DIVVAL (rw): This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use.
0x40096818 B  REGISTER INTSTAT (ro): Interrupt Status register for Master, Slave, and Monitor functions.
0x40096818 C   FIELD 00w01 MSTPENDING (ro): Master Pending.
0x40096818 C   FIELD 04w01 MSTARBLOSS (ro): Master Arbitration Loss flag.
0x40096818 C   FIELD 06w01 MSTSTSTPERR (ro): Master Start/Stop Error flag.
0x40096818 C   FIELD 08w01 SLVPENDING (ro): Slave Pending.
0x40096818 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching status.
0x40096818 C   FIELD 15w01 SLVDESEL (ro): Slave Deselected flag.
0x40096818 C   FIELD 16w01 MONRDY (ro): Monitor Ready.
0x40096818 C   FIELD 17w01 MONOV (ro): Monitor Overflow flag.
0x40096818 C   FIELD 19w01 MONIDLE (ro): Monitor Idle flag.
0x40096818 C   FIELD 24w01 EVENTTIMEOUT (ro): Event time-out Interrupt flag.
0x40096818 C   FIELD 25w01 SCLTIMEOUT (ro): SCL time-out Interrupt flag.
0x40096820 B  REGISTER MSTCTL (rw): Master control register.
0x40096820 C   FIELD 00w01 MSTCONTINUE (wo): Master Continue. This bit is write-only.
0x40096820 C   FIELD 01w01 MSTSTART (rw): Master Start control. This bit is write-only.
0x40096820 C   FIELD 02w01 MSTSTOP (rw): Master Stop control. This bit is write-only.
0x40096820 C   FIELD 03w01 MSTDMA (rw): Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.
0x40096824 B  REGISTER MSTTIME (rw): Master timing configuration.
0x40096824 C   FIELD 00w03 MSTSCLLOW (rw): Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.
0x40096824 C   FIELD 04w03 MSTSCLHIGH (rw): Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.
0x40096828 B  REGISTER MSTDAT (rw): Combined Master receiver and transmitter data register.
0x40096828 C   FIELD 00w08 DATA (rw): Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function.
0x40096840 B  REGISTER SLVCTL (rw): Slave control register.
0x40096840 C   FIELD 00w01 SLVCONTINUE (rw): Slave Continue.
0x40096840 C   FIELD 01w01 SLVNACK (rw): Slave NACK.
0x40096840 C   FIELD 03w01 SLVDMA (rw): Slave DMA enable.
0x40096840 C   FIELD 08w01 AUTOACK (rw): Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.
0x40096840 C   FIELD 09w01 AUTOMATCHREAD (rw): When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.
0x40096844 B  REGISTER SLVDAT (rw): Combined Slave receiver and transmitter data register.
0x40096844 C   FIELD 00w08 DATA (rw): Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function.
0x40096848 B  REGISTER SLVADR[0] (rw): Slave address register.
0x40096848 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40096848 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40096848 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4009684C B  REGISTER SLVADR[1] (rw): Slave address register.
0x4009684C C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4009684C C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4009684C C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40096850 B  REGISTER SLVADR[2] (rw): Slave address register.
0x40096850 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40096850 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40096850 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40096854 B  REGISTER SLVADR[3] (rw): Slave address register.
0x40096854 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40096854 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40096854 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40096858 B  REGISTER SLVQUAL0 (rw): Slave Qualification for address 0.
0x40096858 C   FIELD 00w01 QUALMODE0 (rw): Qualify mode for slave address 0.
0x40096858 C   FIELD 01w07 SLVQUAL0 (rw): Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] <= received address <= SLVQUAL0[7:1]).
0x40096880 B  REGISTER MONRXDAT (ro): Monitor receiver data register.
0x40096880 C   FIELD 00w08 MONRXDAT (ro): Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins.
0x40096880 C   FIELD 08w01 MONSTART (ro): Monitor Received Start.
0x40096880 C   FIELD 09w01 MONRESTART (ro): Monitor Received Repeated Start.
0x40096880 C   FIELD 10w01 MONNACK (ro): Monitor Received NACK.
0x40096E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40096E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40096E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40096E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40096E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40096E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40096E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40096E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40096E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40096E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40096E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40096E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40096E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40096E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40096E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40096E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40096E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40096E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40096E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40096E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40096E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40096E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40096E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40096E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40096E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40096E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40096E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40096E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40096E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40096E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40096E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40096E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40096E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40096E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40096E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40096E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40096E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40096E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40096E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40096E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40096E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40096E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40096E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40096E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40096E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40096E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40096E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40096E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40096E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40096E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40096E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40096E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40096E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40096E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40096E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40096E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40096E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40096E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40096E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40096E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40096E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40096E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40096E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40096E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40096E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40096E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40096E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40096E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40096E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40096E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40096E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40096E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40096E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40096E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40096E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40096E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40096E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40096E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40096E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40096E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40096E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40096E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40096E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40096E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40096E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40096E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40096E20 C   FIELD 00w09 TXDATA (rw): Transmit data to the FIFO.
0x40096E20 C   FIELD 00w16 TXDATA (rw): Transmit data to the FIFO.
0x40096E20 C   FIELD 16w01 TXSSEL0_N (wo): Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.
0x40096E20 C   FIELD 17w01 TXSSEL1_N (wo): Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.
0x40096E20 C   FIELD 18w01 TXSSEL2_N (wo): Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.
0x40096E20 C   FIELD 19w01 TXSSEL3_N (wo): Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.
0x40096E20 C   FIELD 20w01 EOT (wo): End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.
0x40096E20 C   FIELD 21w01 EOF (wo): End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.
0x40096E20 C   FIELD 22w01 RXIGNORE (wo): Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.
0x40096E20 C   FIELD 24w04 LEN (wo): Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length.
0x40096E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40096E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40096E30 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40096E30 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40096E30 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40096E30 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40096E30 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40096E30 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40096E30 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40096E30 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40096E30 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40096E30 C   FIELD 20w01 SOT (ro): Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits.
0x40096E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40096E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40096E40 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40096E40 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40096E40 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40096E40 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40096E40 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40096E40 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive.
0x40096E40 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive.
0x40096E40 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive.
0x40096E40 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive.
0x40096E40 C   FIELD 20w01 SOT (ro): Start of transfer flag.
0x40096FF8 B  REGISTER PSELID (rw): Peripheral Select and Flexcomm ID register.
0x40096FF8 C   FIELD 00w03 PERSEL (rw): Peripheral Select. This field is writable by software.
0x40096FF8 C   FIELD 03w01 LOCK (rw): Lock the peripheral select. This field is writable by software.
0x40096FF8 C   FIELD 04w01 USARTPRESENT (ro): USART present indicator. This field is Read-only.
0x40096FF8 C   FIELD 05w01 SPIPRESENT (ro): SPI present indicator. This field is Read-only.
0x40096FF8 C   FIELD 06w01 I2CPRESENT (ro): I2C present indicator. This field is Read-only.
0x40096FF8 C   FIELD 07w01 I2SPRESENT (ro): I 2S present indicator. This field is Read-only.
0x40096FF8 C   FIELD 12w20 ID (ro): Flexcomm ID.
0x40096FFC B  REGISTER ID (ro): Peripheral identification register.
0x40096FFC B  REGISTER ID (ro): Peripheral identification register.
0x40096FFC B  REGISTER ID (ro): Peripheral identification register.
0x40096FFC B  REGISTER PID (rw): Peripheral identification register.
0x40096FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40096FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40096FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40096FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40096FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40096FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40096FFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation.
0x40096FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40096FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40096FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40096FFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation.
0x40096FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40096FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40096FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40096FFC C   FIELD 16w16 ID (rw): Module identifier for the selected function.
0x40097000 A PERIPHERAL FLEXCOMM6
0x40097000 A PERIPHERAL I2C6
0x40097000 A PERIPHERAL I2S0
0x40097000 A PERIPHERAL SPI6
0x40097000 A PERIPHERAL USART6
0x40097000 B  CLUSTER SECCHANNEL[0]: no description available
0x40097000 B  REGISTER CFG (rw): USART Configuration register. Basic USART configuration settings that typically are not changed during operation.
0x40097000 C   FIELD 00w01 ENABLE (rw): USART Enable.
0x40097000 C   FIELD 02w02 DATALEN (rw): Selects the data size for the USART.
0x40097000 C   FIELD 04w02 PARITYSEL (rw): Selects what type of parity is used by the USART.
0x40097000 C   FIELD 06w01 STOPLEN (rw): Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.
0x40097000 C   FIELD 07w01 MODE32K (rw): Selects standard or 32 kHz clocking mode.
0x40097000 C   FIELD 08w01 LINMODE (rw): LIN break mode enable.
0x40097000 C   FIELD 09w01 CTSEN (rw): CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.
0x40097000 C   FIELD 11w01 SYNCEN (rw): Selects synchronous or asynchronous operation.
0x40097000 C   FIELD 12w01 CLKPOL (rw): Selects the clock polarity and sampling edge of received data in synchronous mode.
0x40097000 C   FIELD 14w01 SYNCMST (rw): Synchronous mode Master select.
0x40097000 C   FIELD 15w01 LOOP (rw): Selects data loopback mode.
0x40097000 C   FIELD 18w01 OETA (rw): Output Enable Turnaround time enable for RS-485 operation.
0x40097000 C   FIELD 19w01 AUTOADDR (rw): Automatic Address matching enable.
0x40097000 C   FIELD 20w01 OESEL (rw): Output Enable Select.
0x40097000 C   FIELD 21w01 OEPOL (rw): Output Enable Polarity.
0x40097000 C   FIELD 22w01 RXPOL (rw): Receive data polarity.
0x40097000 C   FIELD 23w01 TXPOL (rw): Transmit data polarity.
0x40097004 B  REGISTER CTL (rw): USART Control register. USART control settings that are more likely to change during operation.
0x40097004 C   FIELD 01w01 TXBRKEN (rw): Break Enable.
0x40097004 C   FIELD 02w01 ADDRDET (rw): Enable address detect mode.
0x40097004 C   FIELD 06w01 TXDIS (rw): Transmit Disable.
0x40097004 C   FIELD 08w01 CC (rw): Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.
0x40097004 C   FIELD 09w01 CLRCCONRX (rw): Clear Continuous Clock.
0x40097004 C   FIELD 16w01 AUTOBAUD (rw): Autobaud enable.
0x40097008 B  REGISTER STAT (rw): USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them.
0x40097008 C   FIELD 01w01 RXIDLE (ro): Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data.
0x40097008 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data.
0x40097008 C   FIELD 04w01 CTS (ro): This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled.
0x40097008 C   FIELD 05w01 DELTACTS (rw): This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software.
0x40097008 C   FIELD 06w01 TXDISSTAT (ro): Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1).
0x40097008 C   FIELD 10w01 RXBRK (ro): Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high.
0x40097008 C   FIELD 11w01 DELTARXBRK (rw): This bit is set when a change in the state of receiver break detection occurs. Cleared by software.
0x40097008 C   FIELD 12w01 START (rw): This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software.
0x40097008 C   FIELD 13w01 FRAMERRINT (rw): Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40097008 C   FIELD 14w01 PARITYERRINT (rw): Parity Error interrupt flag. This flag is set when a parity error is detected in a received character.
0x40097008 C   FIELD 15w01 RXNOISEINT (rw): Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception.
0x40097008 C   FIELD 16w01 ABERR (rw): Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out.
0x4009700C B  REGISTER INTENSET (rw): Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4009700C C   FIELD 03w01 TXIDLEEN (rw): When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1).
0x4009700C C   FIELD 05w01 DELTACTSEN (rw): When 1, enables an interrupt when there is a change in the state of the CTS input.
0x4009700C C   FIELD 06w01 TXDISEN (rw): When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details.
0x4009700C C   FIELD 11w01 DELTARXBRKEN (rw): When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted).
0x4009700C C   FIELD 12w01 STARTEN (rw): When 1, enables an interrupt when a received start bit has been detected.
0x4009700C C   FIELD 13w01 FRAMERREN (rw): When 1, enables an interrupt when a framing error has been detected.
0x4009700C C   FIELD 14w01 PARITYERREN (rw): When 1, enables an interrupt when a parity error has been detected.
0x4009700C C   FIELD 15w01 RXNOISEEN (rw): When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354.
0x4009700C C   FIELD 16w01 ABERREN (rw): When 1, enables an interrupt when an auto baud error occurs.
0x40097010 B  REGISTER INTENCLR (wo): Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared.
0x40097010 C   FIELD 03w01 TXIDLECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097010 C   FIELD 05w01 DELTACTSCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097010 C   FIELD 06w01 TXDISCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097010 C   FIELD 11w01 DELTARXBRKCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097010 C   FIELD 12w01 STARTCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097010 C   FIELD 13w01 FRAMERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097010 C   FIELD 14w01 PARITYERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097010 C   FIELD 15w01 RXNOISECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097010 C   FIELD 16w01 ABERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097020 B  CLUSTER SECCHANNEL[1]: no description available
0x40097020 B  REGISTER BRG (rw): Baud Rate Generator register. 16-bit integer baud rate divisor value.
0x40097020 C   FIELD 00w16 BRGVAL (rw): This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function.
0x40097024 B  REGISTER INTSTAT (ro): Interrupt status register. Reflects interrupts that are currently enabled.
0x40097024 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle status.
0x40097024 C   FIELD 05w01 DELTACTS (ro): This bit is set when a change in the state of the CTS input is detected.
0x40097024 C   FIELD 06w01 TXDISINT (ro): Transmitter Disabled Interrupt flag.
0x40097024 C   FIELD 11w01 DELTARXBRK (ro): This bit is set when a change in the state of receiver break detection occurs.
0x40097024 C   FIELD 12w01 START (ro): This bit is set when a start is detected on the receiver input.
0x40097024 C   FIELD 13w01 FRAMERRINT (ro): Framing Error interrupt flag.
0x40097024 C   FIELD 14w01 PARITYERRINT (ro): Parity Error interrupt flag.
0x40097024 C   FIELD 15w01 RXNOISEINT (ro): Received Noise interrupt flag.
0x40097024 C   FIELD 16w01 ABERRINT (ro): Auto baud Error Interrupt flag.
0x40097028 B  REGISTER OSR (rw): Oversample selection register for asynchronous communication.
0x40097028 C   FIELD 00w04 OSRVAL (rw): Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit.
0x4009702C B  REGISTER ADDR (rw): Address register for automatic address matching.
0x4009702C C   FIELD 00w08 ADDRESS (rw): 8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1).
0x40097040 B  CLUSTER SECCHANNEL[2]: no description available
0x40097400 B  REGISTER CFG (rw): SPI Configuration register
0x40097400 C   FIELD 00w01 ENABLE (rw): SPI enable.
0x40097400 C   FIELD 02w01 MASTER (rw): Master mode select.
0x40097400 C   FIELD 03w01 LSBF (rw): LSB First mode enable.
0x40097400 C   FIELD 04w01 CPHA (rw): Clock Phase select.
0x40097400 C   FIELD 05w01 CPOL (rw): Clock Polarity select.
0x40097400 C   FIELD 07w01 LOOP (rw): Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.
0x40097400 C   FIELD 08w01 SPOL0 (rw): SSEL0 Polarity select.
0x40097400 C   FIELD 09w01 SPOL1 (rw): SSEL1 Polarity select.
0x40097400 C   FIELD 10w01 SPOL2 (rw): SSEL2 Polarity select.
0x40097400 C   FIELD 11w01 SPOL3 (rw): SSEL3 Polarity select.
0x40097404 B  REGISTER DLY (rw): SPI Delay register
0x40097404 C   FIELD 00w04 PRE_DELAY (rw): Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40097404 C   FIELD 04w04 POST_DELAY (rw): Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40097404 C   FIELD 08w04 FRAME_DELAY (rw): If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40097404 C   FIELD 12w04 TRANSFER_DELAY (rw): Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times.
0x40097408 B  REGISTER STAT (rw): SPI Status. Some status flags can be cleared by writing a 1 to that bit position.
0x40097408 C   FIELD 04w01 SSA (wo): Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software.
0x40097408 C   FIELD 05w01 SSD (wo): Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software.
0x40097408 C   FIELD 06w01 STALLED (ro): Stalled status flag. This indicates whether the SPI is currently in a stall condition.
0x40097408 C   FIELD 07w01 ENDTRANSFER (rw): End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted.
0x40097408 C   FIELD 08w01 MSTIDLE (ro): Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data.
0x4009740C B  REGISTER INTENSET (rw): SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4009740C C   FIELD 04w01 SSAEN (rw): Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.
0x4009740C C   FIELD 05w01 SSDEN (rw): Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.
0x4009740C C   FIELD 08w01 MSTIDLEEN (rw): Master idle interrupt enable.
0x40097410 B  REGISTER INTENCLR (wo): SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared.
0x40097410 C   FIELD 04w01 SSAEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097410 C   FIELD 05w01 SSDEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097410 C   FIELD 08w01 MSTIDLE (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40097424 B  REGISTER DIV (rw): SPI clock Divider
0x40097424 C   FIELD 00w16 DIVVAL (rw): Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
0x40097428 B  REGISTER INTSTAT (ro): SPI Interrupt Status
0x40097428 C   FIELD 04w01 SSA (ro): Slave Select Assert.
0x40097428 C   FIELD 05w01 SSD (ro): Slave Select Deassert.
0x40097428 C   FIELD 08w01 MSTIDLE (ro): Master Idle status flag.
0x40097800 B  REGISTER CFG (rw): Configuration for shared functions.
0x40097800 C   FIELD 00w01 MSTEN (rw): Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.
0x40097800 C   FIELD 01w01 SLVEN (rw): Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.
0x40097800 C   FIELD 02w01 MONEN (rw): Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.
0x40097800 C   FIELD 03w01 TIMEOUTEN (rw): I2C bus Time-out Enable. When disabled, the time-out function is internally reset.
0x40097800 C   FIELD 04w01 MONCLKSTR (rw): Monitor function Clock Stretching.
0x40097800 C   FIELD 05w01 HSCAPABLE (rw): High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.
0x40097804 B  REGISTER STAT (rw): Status register for Master, Slave, and Monitor functions.
0x40097804 C   FIELD 00w01 MSTPENDING (ro): Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.
0x40097804 C   FIELD 01w03 MSTSTATE (ro): Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.
0x40097804 C   FIELD 04w01 MSTARBLOSS (rw): Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40097804 C   FIELD 06w01 MSTSTSTPERR (rw): Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40097804 C   FIELD 08w01 SLVPENDING (ro): Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.
0x40097804 C   FIELD 09w02 SLVSTATE (ro): Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.
0x40097804 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.
0x40097804 C   FIELD 12w02 SLVIDX (ro): Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.
0x40097804 C   FIELD 14w01 SLVSEL (ro): Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.
0x40097804 C   FIELD 15w01 SLVDESEL (rw): Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
0x40097804 C   FIELD 16w01 MONRDY (ro): Monitor Ready. This flag is cleared when the MONRXDAT register is read.
0x40097804 C   FIELD 17w01 MONOV (rw): Monitor Overflow flag.
0x40097804 C   FIELD 18w01 MONACTIVE (ro): Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.
0x40097804 C   FIELD 19w01 MONIDLE (rw): Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.
0x40097804 C   FIELD 24w01 EVENTTIMEOUT (rw): Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.
0x40097804 C   FIELD 25w01 SCLTIMEOUT (rw): SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.
0x40097808 B  REGISTER INTENSET (rw): Interrupt Enable Set and read register.
0x40097808 C   FIELD 00w01 MSTPENDINGEN (rw): Master Pending interrupt Enable.
0x40097808 C   FIELD 04w01 MSTARBLOSSEN (rw): Master Arbitration Loss interrupt Enable.
0x40097808 C   FIELD 06w01 MSTSTSTPERREN (rw): Master Start/Stop Error interrupt Enable.
0x40097808 C   FIELD 08w01 SLVPENDINGEN (rw): Slave Pending interrupt Enable.
0x40097808 C   FIELD 11w01 SLVNOTSTREN (rw): Slave Not Stretching interrupt Enable.
0x40097808 C   FIELD 15w01 SLVDESELEN (rw): Slave Deselect interrupt Enable.
0x40097808 C   FIELD 16w01 MONRDYEN (rw): Monitor data Ready interrupt Enable.
0x40097808 C   FIELD 17w01 MONOVEN (rw): Monitor Overrun interrupt Enable.
0x40097808 C   FIELD 19w01 MONIDLEEN (rw): Monitor Idle interrupt Enable.
0x40097808 C   FIELD 24w01 EVENTTIMEOUTEN (rw): Event time-out interrupt Enable.
0x40097808 C   FIELD 25w01 SCLTIMEOUTEN (rw): SCL time-out interrupt Enable.
0x4009780C B  REGISTER INTENCLR (wo): Interrupt Enable Clear register.
0x4009780C C   FIELD 00w01 MSTPENDINGCLR (wo): Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented.
0x4009780C C   FIELD 04w01 MSTARBLOSSCLR (wo): Master Arbitration Loss interrupt clear.
0x4009780C C   FIELD 06w01 MSTSTSTPERRCLR (wo): Master Start/Stop Error interrupt clear.
0x4009780C C   FIELD 08w01 SLVPENDINGCLR (wo): Slave Pending interrupt clear.
0x4009780C C   FIELD 11w01 SLVNOTSTRCLR (wo): Slave Not Stretching interrupt clear.
0x4009780C C   FIELD 15w01 SLVDESELCLR (wo): Slave Deselect interrupt clear.
0x4009780C C   FIELD 16w01 MONRDYCLR (wo): Monitor data Ready interrupt clear.
0x4009780C C   FIELD 17w01 MONOVCLR (wo): Monitor Overrun interrupt clear.
0x4009780C C   FIELD 19w01 MONIDLECLR (wo): Monitor Idle interrupt clear.
0x4009780C C   FIELD 24w01 EVENTTIMEOUTCLR (wo): Event time-out interrupt clear.
0x4009780C C   FIELD 25w01 SCLTIMEOUTCLR (wo): SCL time-out interrupt clear.
0x40097810 B  REGISTER TIMEOUT (rw): Time-out value register.
0x40097810 C   FIELD 00w04 TOMIN (rw): Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks.
0x40097810 C   FIELD 04w12 TO (rw): Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock.
0x40097814 B  REGISTER CLKDIV (rw): Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function.
0x40097814 C   FIELD 00w16 DIVVAL (rw): This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use.
0x40097818 B  REGISTER INTSTAT (ro): Interrupt Status register for Master, Slave, and Monitor functions.
0x40097818 C   FIELD 00w01 MSTPENDING (ro): Master Pending.
0x40097818 C   FIELD 04w01 MSTARBLOSS (ro): Master Arbitration Loss flag.
0x40097818 C   FIELD 06w01 MSTSTSTPERR (ro): Master Start/Stop Error flag.
0x40097818 C   FIELD 08w01 SLVPENDING (ro): Slave Pending.
0x40097818 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching status.
0x40097818 C   FIELD 15w01 SLVDESEL (ro): Slave Deselected flag.
0x40097818 C   FIELD 16w01 MONRDY (ro): Monitor Ready.
0x40097818 C   FIELD 17w01 MONOV (ro): Monitor Overflow flag.
0x40097818 C   FIELD 19w01 MONIDLE (ro): Monitor Idle flag.
0x40097818 C   FIELD 24w01 EVENTTIMEOUT (ro): Event time-out Interrupt flag.
0x40097818 C   FIELD 25w01 SCLTIMEOUT (ro): SCL time-out Interrupt flag.
0x40097820 B  REGISTER MSTCTL (rw): Master control register.
0x40097820 C   FIELD 00w01 MSTCONTINUE (wo): Master Continue. This bit is write-only.
0x40097820 C   FIELD 01w01 MSTSTART (rw): Master Start control. This bit is write-only.
0x40097820 C   FIELD 02w01 MSTSTOP (rw): Master Stop control. This bit is write-only.
0x40097820 C   FIELD 03w01 MSTDMA (rw): Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.
0x40097824 B  REGISTER MSTTIME (rw): Master timing configuration.
0x40097824 C   FIELD 00w03 MSTSCLLOW (rw): Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.
0x40097824 C   FIELD 04w03 MSTSCLHIGH (rw): Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.
0x40097828 B  REGISTER MSTDAT (rw): Combined Master receiver and transmitter data register.
0x40097828 C   FIELD 00w08 DATA (rw): Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function.
0x40097840 B  REGISTER SLVCTL (rw): Slave control register.
0x40097840 C   FIELD 00w01 SLVCONTINUE (rw): Slave Continue.
0x40097840 C   FIELD 01w01 SLVNACK (rw): Slave NACK.
0x40097840 C   FIELD 03w01 SLVDMA (rw): Slave DMA enable.
0x40097840 C   FIELD 08w01 AUTOACK (rw): Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.
0x40097840 C   FIELD 09w01 AUTOMATCHREAD (rw): When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.
0x40097844 B  REGISTER SLVDAT (rw): Combined Slave receiver and transmitter data register.
0x40097844 C   FIELD 00w08 DATA (rw): Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function.
0x40097848 B  REGISTER SLVADR[0] (rw): Slave address register.
0x40097848 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40097848 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40097848 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4009784C B  REGISTER SLVADR[1] (rw): Slave address register.
0x4009784C C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4009784C C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4009784C C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40097850 B  REGISTER SLVADR[2] (rw): Slave address register.
0x40097850 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40097850 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40097850 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40097854 B  REGISTER SLVADR[3] (rw): Slave address register.
0x40097854 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40097854 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40097854 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40097858 B  REGISTER SLVQUAL0 (rw): Slave Qualification for address 0.
0x40097858 C   FIELD 00w01 QUALMODE0 (rw): Qualify mode for slave address 0.
0x40097858 C   FIELD 01w07 SLVQUAL0 (rw): Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] <= received address <= SLVQUAL0[7:1]).
0x40097880 B  REGISTER MONRXDAT (ro): Monitor receiver data register.
0x40097880 C   FIELD 00w08 MONRXDAT (ro): Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins.
0x40097880 C   FIELD 08w01 MONSTART (ro): Monitor Received Start.
0x40097880 C   FIELD 09w01 MONRESTART (ro): Monitor Received Repeated Start.
0x40097880 C   FIELD 10w01 MONNACK (ro): Monitor Received NACK.
0x40097C00 B  REGISTER CFG1 (rw): Configuration register 1 for the primary channel pair.
0x40097C00 C   FIELD 00w01 MAINENABLE (rw): Main enable for I 2S function in this Flexcomm
0x40097C00 C   FIELD 01w01 DATAPAUSE (rw): Data flow Pause. Allows pausing data flow between the I2S serializer/deserializer and the FIFO. This could be done in order to change streams, or while restarting after a data underflow or overflow. When paused, FIFO operations can be done without corrupting data that is in the process of being sent or received. Once a data pause has been requested, the interface may need to complete sending data that was in progress before interrupting the flow of data. Software must check that the pause is actually in effect before taking action. This is done by monitoring the DATAPAUSED flag in the STAT register. When DATAPAUSE is cleared, data transfer will resume at the beginning of the next frame.
0x40097C00 C   FIELD 02w02 PAIRCOUNT (rw): Provides the number of I2S channel pairs in this Flexcomm This is a read-only field whose value may be different in other Flexcomms. 00 = there is 1 I2S channel pair in this Flexcomm. 01 = there are 2 I2S channel pairs in this Flexcomm. 10 = there are 3 I2S channel pairs in this Flexcomm. 11 = there are 4 I2S channel pairs in this Flexcomm.
0x40097C00 C   FIELD 04w02 MSTSLVCFG (rw): Master / slave configuration selection, determining how SCK and WS are used by all channel pairs in this Flexcomm.
0x40097C00 C   FIELD 06w02 MODE (rw): Selects the basic I2S operating mode. Other configurations modify this to obtain all supported cases. See Formats and modes for examples.
0x40097C00 C   FIELD 08w01 RIGHTLOW (rw): Right channel data is in the Low portion of FIFO data. Essentially, this swaps left and right channel data as it is transferred to or from the FIFO. This bit is not used if the data width is greater than 24 bits or if PDMDATA = 1. Note that if the ONECHANNEL field (bit 10 of this register) = 1, the one channel to be used is the nominally the left channel. POSITION can still place that data in the frame where right channel data is normally located. if all enabled channel pairs have ONECHANNEL = 1, then RIGHTLOW = 1 is not allowed.
0x40097C00 C   FIELD 09w01 LEFTJUST (rw): Left Justify data.
0x40097C00 C   FIELD 10w01 ONECHANNEL (rw): Single channel mode. Applies to both transmit and receive. This configuration bit applies only to the first I2S channel pair. Other channel pairs may select this mode independently in their separate CFG1 registers.
0x40097C00 C   FIELD 11w01 PDMDATA (rw): PDM Data selection. This bit controls the data source for I2S transmit, and cannot be set in Rx mode. This bit only has an effect if the device the Flexcomm resides in includes a D-Mic subsystem. For the LPC5411x, this bit applies only to Flexcomm 7.
0x40097C00 C   FIELD 12w01 SCK_POL (rw): SCK polarity.
0x40097C00 C   FIELD 13w01 WS_POL (rw): WS polarity.
0x40097C00 C   FIELD 16w05 DATALEN (rw): Data Length, minus 1 encoded, defines the number of data bits to be transmitted or received for all I2S channel pairs in this Flexcomm. Note that data is only driven to or received from SDA for the number of bits defined by DATALEN. DATALEN is also used in these ways by the I2S: Determines the size of data transfers between the FIFO and the I2S serializer/deserializer. See FIFO buffer configurations and usage In mode 1, 2, and 3, determines the location of right data following left data in the frame. In mode 3 (where WS has a one data slot long pulse at the beginning of each data frame) determines the duration of the WS pulse. Values: 0x00 to 0x02 = not supported 0x03 = data is 4 bits in length 0x04 = data is 5 bits in length 0x1F = data is 32 bits in length
0x40097C04 B  REGISTER CFG2 (rw): Configuration register 2 for the primary channel pair.
0x40097C04 C   FIELD 00w09 FRAMELEN (rw): Frame Length, minus 1 encoded, defines the number of clocks and data bits in the frames that this channel pair participates in. See Frame format. 0x000 to 0x002 = not supported 0x003 = frame is 4 bits in total length 0x004 = frame is 5 bits in total length 0x1FF = frame is 512 bits in total length if FRAMELEN is an defines an odd length frame (e.g. 33 clocks) in mode 0 or 1, the extra clock appears in the right half. When MODE = 3, FRAMELEN must be larger than DATALEN in order for the WS pulse to be generated correctly.
0x40097C04 C   FIELD 16w09 POSITION (rw): Data Position. Defines the location within the frame of the data for this channel pair. POSITION + DATALEN must be less than FRAMELEN. See Frame format. When MODE = 0, POSITION defines the location of data in both the left phase and right phase, starting one clock after the WS edge. In other modes, POSITION defines the location of data within the entire frame. ONECHANNEL = 1 while MODE = 0 is a special case, see the description of ONECHANNEL. The combination of DATALEN and the POSITION fields of all channel pairs must be made such that the channels do not overlap within the frame. 0x000 = data begins at bit position 0 (the first bit position) within the frame or WS phase. 0x001 = data begins at bit position 1 within the frame or WS phase. 0x002 = data begins at bit position 2 within the frame or WS phase.
0x40097C08 B  REGISTER STAT (rw): Status register for the primary channel pair.
0x40097C08 C   FIELD 00w01 BUSY (ro): Busy status for the primary channel pair. Other BUSY flags may be found in the STAT register for each channel pair.
0x40097C08 C   FIELD 01w01 SLVFRMERR (wo): Slave Frame Error flag. This applies when at least one channel pair is operating as a slave. An error indicates that the incoming WS signal did not transition as expected due to a mismatch between FRAMELEN and the actual incoming I2S stream.
0x40097C08 C   FIELD 02w01 LR (ro): Left/Right indication. This flag is considered to be a debugging aid and is not expected to be used by an I2S driver. Valid when one channel pair is busy. Indicates left or right data being processed for the currently busy channel pair.
0x40097C08 C   FIELD 03w01 DATAPAUSED (ro): Data Paused status flag. Applies to all I2S channels
0x40097C1C B  REGISTER DIV (rw): Clock divider, used by all channel pairs.
0x40097C1C C   FIELD 00w12 DIV (rw): This field controls how this I2S block uses the Flexcomm function clock. 0x000 = The Flexcomm function clock is used directly. 0x001 = The Flexcomm function clock is divided by 2. 0x002 = The Flexcomm function clock is divided by 3. 0xFFF = The Flexcomm function clock is divided by 4,096.
0x40097C20 B  REGISTER PCFG10 (rw): Configuration register 1 for channel pair
0x40097C20 C   FIELD 00w01 PAIRENABLE (rw): Enable for this channel pair..
0x40097C20 C   FIELD 10w01 ONECHANNEL (rw): Single channel mode.
0x40097C24 B  REGISTER PCFG20 (rw): Configuration register 2 for channel pair
0x40097C24 C   FIELD 16w09 POSITION (rw): Data Position.
0x40097C28 B  REGISTER PSTAT0 (rw): Status register for channel pair
0x40097C28 C   FIELD 00w01 BUSY (rw): Busy status for this channel pair.
0x40097C28 C   FIELD 01w01 SLVFRMERR (rw): Save Frame Error flag.
0x40097C28 C   FIELD 02w01 LR (rw): Left/Right indication.
0x40097C28 C   FIELD 03w01 DATAPAUSED (ro): Data Paused status flag.
0x40097C40 B  REGISTER PCFG11 (rw): Configuration register 1 for channel pair
0x40097C40 C   FIELD 00w01 PAIRENABLE (rw): Enable for this channel pair..
0x40097C40 C   FIELD 10w01 ONECHANNEL (rw): Single channel mode.
0x40097C44 B  REGISTER PCFG21 (rw): Configuration register 2 for channel pair
0x40097C44 C   FIELD 16w09 POSITION (rw): Data Position.
0x40097C48 B  REGISTER PSTAT1 (rw): Status register for channel pair
0x40097C48 C   FIELD 00w01 BUSY (rw): Busy status for this channel pair.
0x40097C48 C   FIELD 01w01 SLVFRMERR (rw): Save Frame Error flag.
0x40097C48 C   FIELD 02w01 LR (rw): Left/Right indication.
0x40097C48 C   FIELD 03w01 DATAPAUSED (ro): Data Paused status flag.
0x40097C60 B  REGISTER PCFG12 (rw): Configuration register 1 for channel pair
0x40097C60 C   FIELD 00w01 PAIRENABLE (rw): Enable for this channel pair..
0x40097C60 C   FIELD 10w01 ONECHANNEL (rw): Single channel mode.
0x40097C64 B  REGISTER PCFG22 (rw): Configuration register 2 for channel pair
0x40097C64 C   FIELD 16w09 POSITION (rw): Data Position.
0x40097C68 B  REGISTER PSTAT2 (rw): Status register for channel pair
0x40097C68 C   FIELD 00w01 BUSY (rw): Busy status for this channel pair.
0x40097C68 C   FIELD 01w01 SLVFRMERR (rw): Save Frame Error flag.
0x40097C68 C   FIELD 02w01 LR (rw): Left/Right indication.
0x40097C68 C   FIELD 03w01 DATAPAUSED (ro): Data Paused status flag.
0x40097E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40097E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40097E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40097E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40097E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40097E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40097E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40097E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40097E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40097E00 C   FIELD 02w01 TXI2SE0 (rw): Transmit I2S empty 0. Determines the value sent by the I2S in transmit mode if the TX FIFO becomes empty. This value is sent repeatedly until the I2S is paused, the error is cleared, new data is provided, and the I2S is un-paused.
0x40097E00 C   FIELD 03w01 PACK48 (rw): Packing format for 48-bit data. This relates to how data is entered into or taken from the FIFO by software or DMA.
0x40097E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40097E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40097E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40097E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40097E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40097E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40097E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40097E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40097E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40097E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40097E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40097E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40097E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40097E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40097E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40097E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40097E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40097E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40097E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40097E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40097E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40097E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40097E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40097E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40097E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40097E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40097E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40097E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40097E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40097E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40097E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40097E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40097E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40097E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40097E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40097E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40097E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40097E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40097E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40097E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40097E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40097E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40097E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40097E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40097E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40097E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40097E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40097E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40097E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40097E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40097E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40097E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40097E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40097E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40097E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40097E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40097E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40097E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40097E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40097E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40097E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40097E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40097E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40097E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40097E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40097E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40097E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40097E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40097E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40097E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40097E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40097E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40097E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40097E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40097E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40097E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40097E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40097E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40097E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40097E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40097E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40097E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40097E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40097E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40097E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40097E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40097E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40097E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40097E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40097E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40097E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40097E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40097E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40097E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40097E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40097E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40097E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40097E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40097E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40097E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40097E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40097E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40097E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40097E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40097E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40097E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40097E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40097E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40097E20 B  REGISTER FIFOWR (wo): FIFO write data.
0x40097E20 C   FIELD 00w09 TXDATA (rw): Transmit data to the FIFO.
0x40097E20 C   FIELD 00w16 TXDATA (rw): Transmit data to the FIFO.
0x40097E20 C   FIELD 00w32 TXDATA (wo): Transmit data to the FIFO. The number of bits used depends on configuration details.
0x40097E20 C   FIELD 16w01 TXSSEL0_N (wo): Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.
0x40097E20 C   FIELD 17w01 TXSSEL1_N (wo): Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.
0x40097E20 C   FIELD 18w01 TXSSEL2_N (wo): Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.
0x40097E20 C   FIELD 19w01 TXSSEL3_N (wo): Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.
0x40097E20 C   FIELD 20w01 EOT (wo): End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.
0x40097E20 C   FIELD 21w01 EOF (wo): End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.
0x40097E20 C   FIELD 22w01 RXIGNORE (wo): Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.
0x40097E20 C   FIELD 24w04 LEN (wo): Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length.
0x40097E24 B  REGISTER FIFOWR48H (wo): FIFO write data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA.
0x40097E24 C   FIELD 00w24 TXDATA (wo): Transmit data to the FIFO. Whether this register is used and the number of bits used depends on configuration details.
0x40097E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40097E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40097E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40097E30 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40097E30 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40097E30 C   FIELD 00w32 RXDATA (ro): Received data from the FIFO. The number of bits used depends on configuration details.
0x40097E30 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40097E30 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40097E30 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40097E30 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40097E30 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40097E30 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40097E30 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40097E30 C   FIELD 20w01 SOT (ro): Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits.
0x40097E34 B  REGISTER FIFORD48H (ro): FIFO read data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA.
0x40097E34 C   FIELD 00w24 RXDATA (ro): Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details.
0x40097E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40097E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40097E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40097E40 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40097E40 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40097E40 C   FIELD 00w32 RXDATA (ro): Received data from the FIFO.
0x40097E40 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40097E40 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40097E40 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40097E40 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive.
0x40097E40 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive.
0x40097E40 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive.
0x40097E40 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive.
0x40097E40 C   FIELD 20w01 SOT (ro): Start of transfer flag.
0x40097E44 B  REGISTER FIFORD48HNOPOP (ro): FIFO data read for upper data bits with no FIFO pop. May only be used if the I2S is configured for 2x 24-bit data and not using DMA.
0x40097E44 C   FIELD 00w24 RXDATA (ro): Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details.
0x40097FF8 B  REGISTER PSELID (rw): Peripheral Select and Flexcomm ID register.
0x40097FF8 C   FIELD 00w03 PERSEL (rw): Peripheral Select. This field is writable by software.
0x40097FF8 C   FIELD 03w01 LOCK (rw): Lock the peripheral select. This field is writable by software.
0x40097FF8 C   FIELD 04w01 USARTPRESENT (ro): USART present indicator. This field is Read-only.
0x40097FF8 C   FIELD 05w01 SPIPRESENT (ro): SPI present indicator. This field is Read-only.
0x40097FF8 C   FIELD 06w01 I2CPRESENT (ro): I2C present indicator. This field is Read-only.
0x40097FF8 C   FIELD 07w01 I2SPRESENT (ro): I 2S present indicator. This field is Read-only.
0x40097FF8 C   FIELD 12w20 ID (ro): Flexcomm ID.
0x40097FFC B  REGISTER ID (ro): Peripheral identification register.
0x40097FFC B  REGISTER ID (ro): Peripheral identification register.
0x40097FFC B  REGISTER ID (ro): Peripheral identification register.
0x40097FFC B  REGISTER PID (rw): Peripheral identification register.
0x40097FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40097FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40097FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40097FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40097FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40097FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40097FFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation.
0x40097FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40097FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40097FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40097FFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation.
0x40097FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40097FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40097FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40097FFC C   FIELD 16w16 ID (rw): Module identifier for the selected function.
0x40098000 A PERIPHERAL FLEXCOMM7
0x40098000 A PERIPHERAL I2C7
0x40098000 A PERIPHERAL I2S1
0x40098000 A PERIPHERAL SPI7
0x40098000 A PERIPHERAL USART7
0x40098000 B  CLUSTER SECCHANNEL[0]: no description available
0x40098000 B  REGISTER CFG (rw): USART Configuration register. Basic USART configuration settings that typically are not changed during operation.
0x40098000 C   FIELD 00w01 ENABLE (rw): USART Enable.
0x40098000 C   FIELD 02w02 DATALEN (rw): Selects the data size for the USART.
0x40098000 C   FIELD 04w02 PARITYSEL (rw): Selects what type of parity is used by the USART.
0x40098000 C   FIELD 06w01 STOPLEN (rw): Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.
0x40098000 C   FIELD 07w01 MODE32K (rw): Selects standard or 32 kHz clocking mode.
0x40098000 C   FIELD 08w01 LINMODE (rw): LIN break mode enable.
0x40098000 C   FIELD 09w01 CTSEN (rw): CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.
0x40098000 C   FIELD 11w01 SYNCEN (rw): Selects synchronous or asynchronous operation.
0x40098000 C   FIELD 12w01 CLKPOL (rw): Selects the clock polarity and sampling edge of received data in synchronous mode.
0x40098000 C   FIELD 14w01 SYNCMST (rw): Synchronous mode Master select.
0x40098000 C   FIELD 15w01 LOOP (rw): Selects data loopback mode.
0x40098000 C   FIELD 18w01 OETA (rw): Output Enable Turnaround time enable for RS-485 operation.
0x40098000 C   FIELD 19w01 AUTOADDR (rw): Automatic Address matching enable.
0x40098000 C   FIELD 20w01 OESEL (rw): Output Enable Select.
0x40098000 C   FIELD 21w01 OEPOL (rw): Output Enable Polarity.
0x40098000 C   FIELD 22w01 RXPOL (rw): Receive data polarity.
0x40098000 C   FIELD 23w01 TXPOL (rw): Transmit data polarity.
0x40098004 B  REGISTER CTL (rw): USART Control register. USART control settings that are more likely to change during operation.
0x40098004 C   FIELD 01w01 TXBRKEN (rw): Break Enable.
0x40098004 C   FIELD 02w01 ADDRDET (rw): Enable address detect mode.
0x40098004 C   FIELD 06w01 TXDIS (rw): Transmit Disable.
0x40098004 C   FIELD 08w01 CC (rw): Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.
0x40098004 C   FIELD 09w01 CLRCCONRX (rw): Clear Continuous Clock.
0x40098004 C   FIELD 16w01 AUTOBAUD (rw): Autobaud enable.
0x40098008 B  REGISTER STAT (rw): USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them.
0x40098008 C   FIELD 01w01 RXIDLE (ro): Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data.
0x40098008 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data.
0x40098008 C   FIELD 04w01 CTS (ro): This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled.
0x40098008 C   FIELD 05w01 DELTACTS (rw): This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software.
0x40098008 C   FIELD 06w01 TXDISSTAT (ro): Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1).
0x40098008 C   FIELD 10w01 RXBRK (ro): Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high.
0x40098008 C   FIELD 11w01 DELTARXBRK (rw): This bit is set when a change in the state of receiver break detection occurs. Cleared by software.
0x40098008 C   FIELD 12w01 START (rw): This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software.
0x40098008 C   FIELD 13w01 FRAMERRINT (rw): Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40098008 C   FIELD 14w01 PARITYERRINT (rw): Parity Error interrupt flag. This flag is set when a parity error is detected in a received character.
0x40098008 C   FIELD 15w01 RXNOISEINT (rw): Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception.
0x40098008 C   FIELD 16w01 ABERR (rw): Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out.
0x4009800C B  REGISTER INTENSET (rw): Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4009800C C   FIELD 03w01 TXIDLEEN (rw): When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1).
0x4009800C C   FIELD 05w01 DELTACTSEN (rw): When 1, enables an interrupt when there is a change in the state of the CTS input.
0x4009800C C   FIELD 06w01 TXDISEN (rw): When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details.
0x4009800C C   FIELD 11w01 DELTARXBRKEN (rw): When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted).
0x4009800C C   FIELD 12w01 STARTEN (rw): When 1, enables an interrupt when a received start bit has been detected.
0x4009800C C   FIELD 13w01 FRAMERREN (rw): When 1, enables an interrupt when a framing error has been detected.
0x4009800C C   FIELD 14w01 PARITYERREN (rw): When 1, enables an interrupt when a parity error has been detected.
0x4009800C C   FIELD 15w01 RXNOISEEN (rw): When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354.
0x4009800C C   FIELD 16w01 ABERREN (rw): When 1, enables an interrupt when an auto baud error occurs.
0x40098010 B  REGISTER INTENCLR (wo): Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared.
0x40098010 C   FIELD 03w01 TXIDLECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098010 C   FIELD 05w01 DELTACTSCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098010 C   FIELD 06w01 TXDISCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098010 C   FIELD 11w01 DELTARXBRKCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098010 C   FIELD 12w01 STARTCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098010 C   FIELD 13w01 FRAMERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098010 C   FIELD 14w01 PARITYERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098010 C   FIELD 15w01 RXNOISECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098010 C   FIELD 16w01 ABERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098020 B  CLUSTER SECCHANNEL[1]: no description available
0x40098020 B  REGISTER BRG (rw): Baud Rate Generator register. 16-bit integer baud rate divisor value.
0x40098020 C   FIELD 00w16 BRGVAL (rw): This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function.
0x40098024 B  REGISTER INTSTAT (ro): Interrupt status register. Reflects interrupts that are currently enabled.
0x40098024 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle status.
0x40098024 C   FIELD 05w01 DELTACTS (ro): This bit is set when a change in the state of the CTS input is detected.
0x40098024 C   FIELD 06w01 TXDISINT (ro): Transmitter Disabled Interrupt flag.
0x40098024 C   FIELD 11w01 DELTARXBRK (ro): This bit is set when a change in the state of receiver break detection occurs.
0x40098024 C   FIELD 12w01 START (ro): This bit is set when a start is detected on the receiver input.
0x40098024 C   FIELD 13w01 FRAMERRINT (ro): Framing Error interrupt flag.
0x40098024 C   FIELD 14w01 PARITYERRINT (ro): Parity Error interrupt flag.
0x40098024 C   FIELD 15w01 RXNOISEINT (ro): Received Noise interrupt flag.
0x40098024 C   FIELD 16w01 ABERRINT (ro): Auto baud Error Interrupt flag.
0x40098028 B  REGISTER OSR (rw): Oversample selection register for asynchronous communication.
0x40098028 C   FIELD 00w04 OSRVAL (rw): Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit.
0x4009802C B  REGISTER ADDR (rw): Address register for automatic address matching.
0x4009802C C   FIELD 00w08 ADDRESS (rw): 8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1).
0x40098040 B  CLUSTER SECCHANNEL[2]: no description available
0x40098400 B  REGISTER CFG (rw): SPI Configuration register
0x40098400 C   FIELD 00w01 ENABLE (rw): SPI enable.
0x40098400 C   FIELD 02w01 MASTER (rw): Master mode select.
0x40098400 C   FIELD 03w01 LSBF (rw): LSB First mode enable.
0x40098400 C   FIELD 04w01 CPHA (rw): Clock Phase select.
0x40098400 C   FIELD 05w01 CPOL (rw): Clock Polarity select.
0x40098400 C   FIELD 07w01 LOOP (rw): Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.
0x40098400 C   FIELD 08w01 SPOL0 (rw): SSEL0 Polarity select.
0x40098400 C   FIELD 09w01 SPOL1 (rw): SSEL1 Polarity select.
0x40098400 C   FIELD 10w01 SPOL2 (rw): SSEL2 Polarity select.
0x40098400 C   FIELD 11w01 SPOL3 (rw): SSEL3 Polarity select.
0x40098404 B  REGISTER DLY (rw): SPI Delay register
0x40098404 C   FIELD 00w04 PRE_DELAY (rw): Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40098404 C   FIELD 04w04 POST_DELAY (rw): Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40098404 C   FIELD 08w04 FRAME_DELAY (rw): If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40098404 C   FIELD 12w04 TRANSFER_DELAY (rw): Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times.
0x40098408 B  REGISTER STAT (rw): SPI Status. Some status flags can be cleared by writing a 1 to that bit position.
0x40098408 C   FIELD 04w01 SSA (wo): Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software.
0x40098408 C   FIELD 05w01 SSD (wo): Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software.
0x40098408 C   FIELD 06w01 STALLED (ro): Stalled status flag. This indicates whether the SPI is currently in a stall condition.
0x40098408 C   FIELD 07w01 ENDTRANSFER (rw): End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted.
0x40098408 C   FIELD 08w01 MSTIDLE (ro): Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data.
0x4009840C B  REGISTER INTENSET (rw): SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4009840C C   FIELD 04w01 SSAEN (rw): Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.
0x4009840C C   FIELD 05w01 SSDEN (rw): Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.
0x4009840C C   FIELD 08w01 MSTIDLEEN (rw): Master idle interrupt enable.
0x40098410 B  REGISTER INTENCLR (wo): SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared.
0x40098410 C   FIELD 04w01 SSAEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098410 C   FIELD 05w01 SSDEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098410 C   FIELD 08w01 MSTIDLE (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40098424 B  REGISTER DIV (rw): SPI clock Divider
0x40098424 C   FIELD 00w16 DIVVAL (rw): Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
0x40098428 B  REGISTER INTSTAT (ro): SPI Interrupt Status
0x40098428 C   FIELD 04w01 SSA (ro): Slave Select Assert.
0x40098428 C   FIELD 05w01 SSD (ro): Slave Select Deassert.
0x40098428 C   FIELD 08w01 MSTIDLE (ro): Master Idle status flag.
0x40098800 B  REGISTER CFG (rw): Configuration for shared functions.
0x40098800 C   FIELD 00w01 MSTEN (rw): Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.
0x40098800 C   FIELD 01w01 SLVEN (rw): Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.
0x40098800 C   FIELD 02w01 MONEN (rw): Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.
0x40098800 C   FIELD 03w01 TIMEOUTEN (rw): I2C bus Time-out Enable. When disabled, the time-out function is internally reset.
0x40098800 C   FIELD 04w01 MONCLKSTR (rw): Monitor function Clock Stretching.
0x40098800 C   FIELD 05w01 HSCAPABLE (rw): High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.
0x40098804 B  REGISTER STAT (rw): Status register for Master, Slave, and Monitor functions.
0x40098804 C   FIELD 00w01 MSTPENDING (ro): Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.
0x40098804 C   FIELD 01w03 MSTSTATE (ro): Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.
0x40098804 C   FIELD 04w01 MSTARBLOSS (rw): Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40098804 C   FIELD 06w01 MSTSTSTPERR (rw): Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40098804 C   FIELD 08w01 SLVPENDING (ro): Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.
0x40098804 C   FIELD 09w02 SLVSTATE (ro): Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.
0x40098804 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.
0x40098804 C   FIELD 12w02 SLVIDX (ro): Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.
0x40098804 C   FIELD 14w01 SLVSEL (ro): Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.
0x40098804 C   FIELD 15w01 SLVDESEL (rw): Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
0x40098804 C   FIELD 16w01 MONRDY (ro): Monitor Ready. This flag is cleared when the MONRXDAT register is read.
0x40098804 C   FIELD 17w01 MONOV (rw): Monitor Overflow flag.
0x40098804 C   FIELD 18w01 MONACTIVE (ro): Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.
0x40098804 C   FIELD 19w01 MONIDLE (rw): Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.
0x40098804 C   FIELD 24w01 EVENTTIMEOUT (rw): Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.
0x40098804 C   FIELD 25w01 SCLTIMEOUT (rw): SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.
0x40098808 B  REGISTER INTENSET (rw): Interrupt Enable Set and read register.
0x40098808 C   FIELD 00w01 MSTPENDINGEN (rw): Master Pending interrupt Enable.
0x40098808 C   FIELD 04w01 MSTARBLOSSEN (rw): Master Arbitration Loss interrupt Enable.
0x40098808 C   FIELD 06w01 MSTSTSTPERREN (rw): Master Start/Stop Error interrupt Enable.
0x40098808 C   FIELD 08w01 SLVPENDINGEN (rw): Slave Pending interrupt Enable.
0x40098808 C   FIELD 11w01 SLVNOTSTREN (rw): Slave Not Stretching interrupt Enable.
0x40098808 C   FIELD 15w01 SLVDESELEN (rw): Slave Deselect interrupt Enable.
0x40098808 C   FIELD 16w01 MONRDYEN (rw): Monitor data Ready interrupt Enable.
0x40098808 C   FIELD 17w01 MONOVEN (rw): Monitor Overrun interrupt Enable.
0x40098808 C   FIELD 19w01 MONIDLEEN (rw): Monitor Idle interrupt Enable.
0x40098808 C   FIELD 24w01 EVENTTIMEOUTEN (rw): Event time-out interrupt Enable.
0x40098808 C   FIELD 25w01 SCLTIMEOUTEN (rw): SCL time-out interrupt Enable.
0x4009880C B  REGISTER INTENCLR (wo): Interrupt Enable Clear register.
0x4009880C C   FIELD 00w01 MSTPENDINGCLR (wo): Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented.
0x4009880C C   FIELD 04w01 MSTARBLOSSCLR (wo): Master Arbitration Loss interrupt clear.
0x4009880C C   FIELD 06w01 MSTSTSTPERRCLR (wo): Master Start/Stop Error interrupt clear.
0x4009880C C   FIELD 08w01 SLVPENDINGCLR (wo): Slave Pending interrupt clear.
0x4009880C C   FIELD 11w01 SLVNOTSTRCLR (wo): Slave Not Stretching interrupt clear.
0x4009880C C   FIELD 15w01 SLVDESELCLR (wo): Slave Deselect interrupt clear.
0x4009880C C   FIELD 16w01 MONRDYCLR (wo): Monitor data Ready interrupt clear.
0x4009880C C   FIELD 17w01 MONOVCLR (wo): Monitor Overrun interrupt clear.
0x4009880C C   FIELD 19w01 MONIDLECLR (wo): Monitor Idle interrupt clear.
0x4009880C C   FIELD 24w01 EVENTTIMEOUTCLR (wo): Event time-out interrupt clear.
0x4009880C C   FIELD 25w01 SCLTIMEOUTCLR (wo): SCL time-out interrupt clear.
0x40098810 B  REGISTER TIMEOUT (rw): Time-out value register.
0x40098810 C   FIELD 00w04 TOMIN (rw): Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks.
0x40098810 C   FIELD 04w12 TO (rw): Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock.
0x40098814 B  REGISTER CLKDIV (rw): Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function.
0x40098814 C   FIELD 00w16 DIVVAL (rw): This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use.
0x40098818 B  REGISTER INTSTAT (ro): Interrupt Status register for Master, Slave, and Monitor functions.
0x40098818 C   FIELD 00w01 MSTPENDING (ro): Master Pending.
0x40098818 C   FIELD 04w01 MSTARBLOSS (ro): Master Arbitration Loss flag.
0x40098818 C   FIELD 06w01 MSTSTSTPERR (ro): Master Start/Stop Error flag.
0x40098818 C   FIELD 08w01 SLVPENDING (ro): Slave Pending.
0x40098818 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching status.
0x40098818 C   FIELD 15w01 SLVDESEL (ro): Slave Deselected flag.
0x40098818 C   FIELD 16w01 MONRDY (ro): Monitor Ready.
0x40098818 C   FIELD 17w01 MONOV (ro): Monitor Overflow flag.
0x40098818 C   FIELD 19w01 MONIDLE (ro): Monitor Idle flag.
0x40098818 C   FIELD 24w01 EVENTTIMEOUT (ro): Event time-out Interrupt flag.
0x40098818 C   FIELD 25w01 SCLTIMEOUT (ro): SCL time-out Interrupt flag.
0x40098820 B  REGISTER MSTCTL (rw): Master control register.
0x40098820 C   FIELD 00w01 MSTCONTINUE (wo): Master Continue. This bit is write-only.
0x40098820 C   FIELD 01w01 MSTSTART (rw): Master Start control. This bit is write-only.
0x40098820 C   FIELD 02w01 MSTSTOP (rw): Master Stop control. This bit is write-only.
0x40098820 C   FIELD 03w01 MSTDMA (rw): Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.
0x40098824 B  REGISTER MSTTIME (rw): Master timing configuration.
0x40098824 C   FIELD 00w03 MSTSCLLOW (rw): Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.
0x40098824 C   FIELD 04w03 MSTSCLHIGH (rw): Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.
0x40098828 B  REGISTER MSTDAT (rw): Combined Master receiver and transmitter data register.
0x40098828 C   FIELD 00w08 DATA (rw): Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function.
0x40098840 B  REGISTER SLVCTL (rw): Slave control register.
0x40098840 C   FIELD 00w01 SLVCONTINUE (rw): Slave Continue.
0x40098840 C   FIELD 01w01 SLVNACK (rw): Slave NACK.
0x40098840 C   FIELD 03w01 SLVDMA (rw): Slave DMA enable.
0x40098840 C   FIELD 08w01 AUTOACK (rw): Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.
0x40098840 C   FIELD 09w01 AUTOMATCHREAD (rw): When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.
0x40098844 B  REGISTER SLVDAT (rw): Combined Slave receiver and transmitter data register.
0x40098844 C   FIELD 00w08 DATA (rw): Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function.
0x40098848 B  REGISTER SLVADR[0] (rw): Slave address register.
0x40098848 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40098848 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40098848 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4009884C B  REGISTER SLVADR[1] (rw): Slave address register.
0x4009884C C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4009884C C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4009884C C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40098850 B  REGISTER SLVADR[2] (rw): Slave address register.
0x40098850 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40098850 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40098850 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40098854 B  REGISTER SLVADR[3] (rw): Slave address register.
0x40098854 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40098854 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40098854 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40098858 B  REGISTER SLVQUAL0 (rw): Slave Qualification for address 0.
0x40098858 C   FIELD 00w01 QUALMODE0 (rw): Qualify mode for slave address 0.
0x40098858 C   FIELD 01w07 SLVQUAL0 (rw): Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] <= received address <= SLVQUAL0[7:1]).
0x40098880 B  REGISTER MONRXDAT (ro): Monitor receiver data register.
0x40098880 C   FIELD 00w08 MONRXDAT (ro): Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins.
0x40098880 C   FIELD 08w01 MONSTART (ro): Monitor Received Start.
0x40098880 C   FIELD 09w01 MONRESTART (ro): Monitor Received Repeated Start.
0x40098880 C   FIELD 10w01 MONNACK (ro): Monitor Received NACK.
0x40098C00 B  REGISTER CFG1 (rw): Configuration register 1 for the primary channel pair.
0x40098C00 C   FIELD 00w01 MAINENABLE (rw): Main enable for I 2S function in this Flexcomm
0x40098C00 C   FIELD 01w01 DATAPAUSE (rw): Data flow Pause. Allows pausing data flow between the I2S serializer/deserializer and the FIFO. This could be done in order to change streams, or while restarting after a data underflow or overflow. When paused, FIFO operations can be done without corrupting data that is in the process of being sent or received. Once a data pause has been requested, the interface may need to complete sending data that was in progress before interrupting the flow of data. Software must check that the pause is actually in effect before taking action. This is done by monitoring the DATAPAUSED flag in the STAT register. When DATAPAUSE is cleared, data transfer will resume at the beginning of the next frame.
0x40098C00 C   FIELD 02w02 PAIRCOUNT (rw): Provides the number of I2S channel pairs in this Flexcomm This is a read-only field whose value may be different in other Flexcomms. 00 = there is 1 I2S channel pair in this Flexcomm. 01 = there are 2 I2S channel pairs in this Flexcomm. 10 = there are 3 I2S channel pairs in this Flexcomm. 11 = there are 4 I2S channel pairs in this Flexcomm.
0x40098C00 C   FIELD 04w02 MSTSLVCFG (rw): Master / slave configuration selection, determining how SCK and WS are used by all channel pairs in this Flexcomm.
0x40098C00 C   FIELD 06w02 MODE (rw): Selects the basic I2S operating mode. Other configurations modify this to obtain all supported cases. See Formats and modes for examples.
0x40098C00 C   FIELD 08w01 RIGHTLOW (rw): Right channel data is in the Low portion of FIFO data. Essentially, this swaps left and right channel data as it is transferred to or from the FIFO. This bit is not used if the data width is greater than 24 bits or if PDMDATA = 1. Note that if the ONECHANNEL field (bit 10 of this register) = 1, the one channel to be used is the nominally the left channel. POSITION can still place that data in the frame where right channel data is normally located. if all enabled channel pairs have ONECHANNEL = 1, then RIGHTLOW = 1 is not allowed.
0x40098C00 C   FIELD 09w01 LEFTJUST (rw): Left Justify data.
0x40098C00 C   FIELD 10w01 ONECHANNEL (rw): Single channel mode. Applies to both transmit and receive. This configuration bit applies only to the first I2S channel pair. Other channel pairs may select this mode independently in their separate CFG1 registers.
0x40098C00 C   FIELD 11w01 PDMDATA (rw): PDM Data selection. This bit controls the data source for I2S transmit, and cannot be set in Rx mode. This bit only has an effect if the device the Flexcomm resides in includes a D-Mic subsystem. For the LPC5411x, this bit applies only to Flexcomm 7.
0x40098C00 C   FIELD 12w01 SCK_POL (rw): SCK polarity.
0x40098C00 C   FIELD 13w01 WS_POL (rw): WS polarity.
0x40098C00 C   FIELD 16w05 DATALEN (rw): Data Length, minus 1 encoded, defines the number of data bits to be transmitted or received for all I2S channel pairs in this Flexcomm. Note that data is only driven to or received from SDA for the number of bits defined by DATALEN. DATALEN is also used in these ways by the I2S: Determines the size of data transfers between the FIFO and the I2S serializer/deserializer. See FIFO buffer configurations and usage In mode 1, 2, and 3, determines the location of right data following left data in the frame. In mode 3 (where WS has a one data slot long pulse at the beginning of each data frame) determines the duration of the WS pulse. Values: 0x00 to 0x02 = not supported 0x03 = data is 4 bits in length 0x04 = data is 5 bits in length 0x1F = data is 32 bits in length
0x40098C04 B  REGISTER CFG2 (rw): Configuration register 2 for the primary channel pair.
0x40098C04 C   FIELD 00w09 FRAMELEN (rw): Frame Length, minus 1 encoded, defines the number of clocks and data bits in the frames that this channel pair participates in. See Frame format. 0x000 to 0x002 = not supported 0x003 = frame is 4 bits in total length 0x004 = frame is 5 bits in total length 0x1FF = frame is 512 bits in total length if FRAMELEN is an defines an odd length frame (e.g. 33 clocks) in mode 0 or 1, the extra clock appears in the right half. When MODE = 3, FRAMELEN must be larger than DATALEN in order for the WS pulse to be generated correctly.
0x40098C04 C   FIELD 16w09 POSITION (rw): Data Position. Defines the location within the frame of the data for this channel pair. POSITION + DATALEN must be less than FRAMELEN. See Frame format. When MODE = 0, POSITION defines the location of data in both the left phase and right phase, starting one clock after the WS edge. In other modes, POSITION defines the location of data within the entire frame. ONECHANNEL = 1 while MODE = 0 is a special case, see the description of ONECHANNEL. The combination of DATALEN and the POSITION fields of all channel pairs must be made such that the channels do not overlap within the frame. 0x000 = data begins at bit position 0 (the first bit position) within the frame or WS phase. 0x001 = data begins at bit position 1 within the frame or WS phase. 0x002 = data begins at bit position 2 within the frame or WS phase.
0x40098C08 B  REGISTER STAT (rw): Status register for the primary channel pair.
0x40098C08 C   FIELD 00w01 BUSY (ro): Busy status for the primary channel pair. Other BUSY flags may be found in the STAT register for each channel pair.
0x40098C08 C   FIELD 01w01 SLVFRMERR (wo): Slave Frame Error flag. This applies when at least one channel pair is operating as a slave. An error indicates that the incoming WS signal did not transition as expected due to a mismatch between FRAMELEN and the actual incoming I2S stream.
0x40098C08 C   FIELD 02w01 LR (ro): Left/Right indication. This flag is considered to be a debugging aid and is not expected to be used by an I2S driver. Valid when one channel pair is busy. Indicates left or right data being processed for the currently busy channel pair.
0x40098C08 C   FIELD 03w01 DATAPAUSED (ro): Data Paused status flag. Applies to all I2S channels
0x40098C1C B  REGISTER DIV (rw): Clock divider, used by all channel pairs.
0x40098C1C C   FIELD 00w12 DIV (rw): This field controls how this I2S block uses the Flexcomm function clock. 0x000 = The Flexcomm function clock is used directly. 0x001 = The Flexcomm function clock is divided by 2. 0x002 = The Flexcomm function clock is divided by 3. 0xFFF = The Flexcomm function clock is divided by 4,096.
0x40098C20 B  REGISTER PCFG10 (rw): Configuration register 1 for channel pair
0x40098C20 C   FIELD 00w01 PAIRENABLE (rw): Enable for this channel pair..
0x40098C20 C   FIELD 10w01 ONECHANNEL (rw): Single channel mode.
0x40098C24 B  REGISTER PCFG20 (rw): Configuration register 2 for channel pair
0x40098C24 C   FIELD 16w09 POSITION (rw): Data Position.
0x40098C28 B  REGISTER PSTAT0 (rw): Status register for channel pair
0x40098C28 C   FIELD 00w01 BUSY (rw): Busy status for this channel pair.
0x40098C28 C   FIELD 01w01 SLVFRMERR (rw): Save Frame Error flag.
0x40098C28 C   FIELD 02w01 LR (rw): Left/Right indication.
0x40098C28 C   FIELD 03w01 DATAPAUSED (ro): Data Paused status flag.
0x40098C40 B  REGISTER PCFG11 (rw): Configuration register 1 for channel pair
0x40098C40 C   FIELD 00w01 PAIRENABLE (rw): Enable for this channel pair..
0x40098C40 C   FIELD 10w01 ONECHANNEL (rw): Single channel mode.
0x40098C44 B  REGISTER PCFG21 (rw): Configuration register 2 for channel pair
0x40098C44 C   FIELD 16w09 POSITION (rw): Data Position.
0x40098C48 B  REGISTER PSTAT1 (rw): Status register for channel pair
0x40098C48 C   FIELD 00w01 BUSY (rw): Busy status for this channel pair.
0x40098C48 C   FIELD 01w01 SLVFRMERR (rw): Save Frame Error flag.
0x40098C48 C   FIELD 02w01 LR (rw): Left/Right indication.
0x40098C48 C   FIELD 03w01 DATAPAUSED (ro): Data Paused status flag.
0x40098C60 B  REGISTER PCFG12 (rw): Configuration register 1 for channel pair
0x40098C60 C   FIELD 00w01 PAIRENABLE (rw): Enable for this channel pair..
0x40098C60 C   FIELD 10w01 ONECHANNEL (rw): Single channel mode.
0x40098C64 B  REGISTER PCFG22 (rw): Configuration register 2 for channel pair
0x40098C64 C   FIELD 16w09 POSITION (rw): Data Position.
0x40098C68 B  REGISTER PSTAT2 (rw): Status register for channel pair
0x40098C68 C   FIELD 00w01 BUSY (rw): Busy status for this channel pair.
0x40098C68 C   FIELD 01w01 SLVFRMERR (rw): Save Frame Error flag.
0x40098C68 C   FIELD 02w01 LR (rw): Left/Right indication.
0x40098C68 C   FIELD 03w01 DATAPAUSED (ro): Data Paused status flag.
0x40098DFC B  REGISTER ID (ro): I2S Module identification
0x40098DFC C   FIELD 00w08 Aperture (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40098DFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation, starting at 0.
0x40098DFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation, starting at 0.
0x40098DFC C   FIELD 16w16 ID (ro): Unique module identifier for this IP block.
0x40098E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40098E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40098E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40098E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40098E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40098E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40098E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40098E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40098E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40098E00 C   FIELD 02w01 TXI2SE0 (rw): Transmit I2S empty 0. Determines the value sent by the I2S in transmit mode if the TX FIFO becomes empty. This value is sent repeatedly until the I2S is paused, the error is cleared, new data is provided, and the I2S is un-paused.
0x40098E00 C   FIELD 03w01 PACK48 (rw): Packing format for 48-bit data. This relates to how data is entered into or taken from the FIFO by software or DMA.
0x40098E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40098E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40098E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40098E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40098E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40098E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40098E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40098E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40098E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40098E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40098E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40098E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40098E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40098E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40098E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40098E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40098E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40098E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40098E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40098E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40098E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40098E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40098E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40098E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40098E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40098E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40098E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40098E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40098E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40098E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40098E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40098E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40098E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40098E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40098E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40098E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40098E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40098E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40098E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40098E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40098E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40098E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40098E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40098E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40098E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40098E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40098E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40098E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40098E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40098E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40098E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40098E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40098E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40098E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40098E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40098E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40098E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40098E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40098E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40098E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40098E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40098E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40098E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40098E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40098E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40098E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40098E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40098E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40098E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40098E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40098E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40098E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40098E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40098E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40098E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40098E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40098E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40098E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40098E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40098E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40098E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40098E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40098E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40098E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40098E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40098E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40098E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40098E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40098E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40098E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40098E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40098E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40098E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40098E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40098E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40098E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40098E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40098E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40098E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40098E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40098E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40098E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40098E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40098E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40098E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40098E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40098E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40098E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40098E20 B  REGISTER FIFOWR (wo): FIFO write data.
0x40098E20 C   FIELD 00w09 TXDATA (rw): Transmit data to the FIFO.
0x40098E20 C   FIELD 00w16 TXDATA (rw): Transmit data to the FIFO.
0x40098E20 C   FIELD 00w32 TXDATA (wo): Transmit data to the FIFO. The number of bits used depends on configuration details.
0x40098E20 C   FIELD 16w01 TXSSEL0_N (wo): Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.
0x40098E20 C   FIELD 17w01 TXSSEL1_N (wo): Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.
0x40098E20 C   FIELD 18w01 TXSSEL2_N (wo): Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.
0x40098E20 C   FIELD 19w01 TXSSEL3_N (wo): Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.
0x40098E20 C   FIELD 20w01 EOT (wo): End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.
0x40098E20 C   FIELD 21w01 EOF (wo): End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.
0x40098E20 C   FIELD 22w01 RXIGNORE (wo): Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.
0x40098E20 C   FIELD 24w04 LEN (wo): Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length.
0x40098E24 B  REGISTER FIFOWR48H (wo): FIFO write data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA.
0x40098E24 C   FIELD 00w24 TXDATA (wo): Transmit data to the FIFO. Whether this register is used and the number of bits used depends on configuration details.
0x40098E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40098E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40098E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40098E30 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40098E30 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40098E30 C   FIELD 00w32 RXDATA (ro): Received data from the FIFO. The number of bits used depends on configuration details.
0x40098E30 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40098E30 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40098E30 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40098E30 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40098E30 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40098E30 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40098E30 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40098E30 C   FIELD 20w01 SOT (ro): Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits.
0x40098E34 B  REGISTER FIFORD48H (ro): FIFO read data for upper data bits. May only be used if the I2S is configured for 2x 24-bit data and not using DMA.
0x40098E34 C   FIELD 00w24 RXDATA (ro): Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details.
0x40098E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40098E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40098E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40098E40 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40098E40 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40098E40 C   FIELD 00w32 RXDATA (ro): Received data from the FIFO.
0x40098E40 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40098E40 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40098E40 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40098E40 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive.
0x40098E40 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive.
0x40098E40 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive.
0x40098E40 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive.
0x40098E40 C   FIELD 20w01 SOT (ro): Start of transfer flag.
0x40098E44 B  REGISTER FIFORD48HNOPOP (ro): FIFO data read for upper data bits with no FIFO pop. May only be used if the I2S is configured for 2x 24-bit data and not using DMA.
0x40098E44 C   FIELD 00w24 RXDATA (ro): Received data from the FIFO. Whether this register is used and the number of bits used depends on configuration details.
0x40098FF8 B  REGISTER PSELID (rw): Peripheral Select and Flexcomm ID register.
0x40098FF8 C   FIELD 00w03 PERSEL (rw): Peripheral Select. This field is writable by software.
0x40098FF8 C   FIELD 03w01 LOCK (rw): Lock the peripheral select. This field is writable by software.
0x40098FF8 C   FIELD 04w01 USARTPRESENT (ro): USART present indicator. This field is Read-only.
0x40098FF8 C   FIELD 05w01 SPIPRESENT (ro): SPI present indicator. This field is Read-only.
0x40098FF8 C   FIELD 06w01 I2CPRESENT (ro): I2C present indicator. This field is Read-only.
0x40098FF8 C   FIELD 07w01 I2SPRESENT (ro): I 2S present indicator. This field is Read-only.
0x40098FF8 C   FIELD 12w20 ID (ro): Flexcomm ID.
0x40098FFC B  REGISTER ID (ro): Peripheral identification register.
0x40098FFC B  REGISTER ID (ro): Peripheral identification register.
0x40098FFC B  REGISTER ID (ro): Peripheral identification register.
0x40098FFC B  REGISTER PID (rw): Peripheral identification register.
0x40098FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40098FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40098FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40098FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40098FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40098FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40098FFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation.
0x40098FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40098FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40098FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40098FFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation.
0x40098FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40098FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40098FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40098FFC C   FIELD 16w16 ID (rw): Module identifier for the selected function.
0x40099000 A PERIPHERAL FLEXCOMM8
0x40099000 A PERIPHERAL I2C8
0x40099000 A PERIPHERAL SPI8
0x40099000 A PERIPHERAL USART8
0x40099000 B  REGISTER CFG (rw): USART Configuration register. Basic USART configuration settings that typically are not changed during operation.
0x40099000 C   FIELD 00w01 ENABLE (rw): USART Enable.
0x40099000 C   FIELD 02w02 DATALEN (rw): Selects the data size for the USART.
0x40099000 C   FIELD 04w02 PARITYSEL (rw): Selects what type of parity is used by the USART.
0x40099000 C   FIELD 06w01 STOPLEN (rw): Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.
0x40099000 C   FIELD 07w01 MODE32K (rw): Selects standard or 32 kHz clocking mode.
0x40099000 C   FIELD 08w01 LINMODE (rw): LIN break mode enable.
0x40099000 C   FIELD 09w01 CTSEN (rw): CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.
0x40099000 C   FIELD 11w01 SYNCEN (rw): Selects synchronous or asynchronous operation.
0x40099000 C   FIELD 12w01 CLKPOL (rw): Selects the clock polarity and sampling edge of received data in synchronous mode.
0x40099000 C   FIELD 14w01 SYNCMST (rw): Synchronous mode Master select.
0x40099000 C   FIELD 15w01 LOOP (rw): Selects data loopback mode.
0x40099000 C   FIELD 18w01 OETA (rw): Output Enable Turnaround time enable for RS-485 operation.
0x40099000 C   FIELD 19w01 AUTOADDR (rw): Automatic Address matching enable.
0x40099000 C   FIELD 20w01 OESEL (rw): Output Enable Select.
0x40099000 C   FIELD 21w01 OEPOL (rw): Output Enable Polarity.
0x40099000 C   FIELD 22w01 RXPOL (rw): Receive data polarity.
0x40099000 C   FIELD 23w01 TXPOL (rw): Transmit data polarity.
0x40099004 B  REGISTER CTL (rw): USART Control register. USART control settings that are more likely to change during operation.
0x40099004 C   FIELD 01w01 TXBRKEN (rw): Break Enable.
0x40099004 C   FIELD 02w01 ADDRDET (rw): Enable address detect mode.
0x40099004 C   FIELD 06w01 TXDIS (rw): Transmit Disable.
0x40099004 C   FIELD 08w01 CC (rw): Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.
0x40099004 C   FIELD 09w01 CLRCCONRX (rw): Clear Continuous Clock.
0x40099004 C   FIELD 16w01 AUTOBAUD (rw): Autobaud enable.
0x40099008 B  REGISTER STAT (rw): USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them.
0x40099008 C   FIELD 01w01 RXIDLE (ro): Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data.
0x40099008 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data.
0x40099008 C   FIELD 04w01 CTS (ro): This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled.
0x40099008 C   FIELD 05w01 DELTACTS (rw): This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software.
0x40099008 C   FIELD 06w01 TXDISSTAT (ro): Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1).
0x40099008 C   FIELD 10w01 RXBRK (ro): Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high.
0x40099008 C   FIELD 11w01 DELTARXBRK (rw): This bit is set when a change in the state of receiver break detection occurs. Cleared by software.
0x40099008 C   FIELD 12w01 START (rw): This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software.
0x40099008 C   FIELD 13w01 FRAMERRINT (rw): Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40099008 C   FIELD 14w01 PARITYERRINT (rw): Parity Error interrupt flag. This flag is set when a parity error is detected in a received character.
0x40099008 C   FIELD 15w01 RXNOISEINT (rw): Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception.
0x40099008 C   FIELD 16w01 ABERR (rw): Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out.
0x4009900C B  REGISTER INTENSET (rw): Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4009900C C   FIELD 03w01 TXIDLEEN (rw): When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1).
0x4009900C C   FIELD 05w01 DELTACTSEN (rw): When 1, enables an interrupt when there is a change in the state of the CTS input.
0x4009900C C   FIELD 06w01 TXDISEN (rw): When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details.
0x4009900C C   FIELD 11w01 DELTARXBRKEN (rw): When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted).
0x4009900C C   FIELD 12w01 STARTEN (rw): When 1, enables an interrupt when a received start bit has been detected.
0x4009900C C   FIELD 13w01 FRAMERREN (rw): When 1, enables an interrupt when a framing error has been detected.
0x4009900C C   FIELD 14w01 PARITYERREN (rw): When 1, enables an interrupt when a parity error has been detected.
0x4009900C C   FIELD 15w01 RXNOISEEN (rw): When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354.
0x4009900C C   FIELD 16w01 ABERREN (rw): When 1, enables an interrupt when an auto baud error occurs.
0x40099010 B  REGISTER INTENCLR (wo): Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared.
0x40099010 C   FIELD 03w01 TXIDLECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099010 C   FIELD 05w01 DELTACTSCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099010 C   FIELD 06w01 TXDISCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099010 C   FIELD 11w01 DELTARXBRKCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099010 C   FIELD 12w01 STARTCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099010 C   FIELD 13w01 FRAMERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099010 C   FIELD 14w01 PARITYERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099010 C   FIELD 15w01 RXNOISECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099010 C   FIELD 16w01 ABERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099020 B  REGISTER BRG (rw): Baud Rate Generator register. 16-bit integer baud rate divisor value.
0x40099020 C   FIELD 00w16 BRGVAL (rw): This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function.
0x40099024 B  REGISTER INTSTAT (ro): Interrupt status register. Reflects interrupts that are currently enabled.
0x40099024 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle status.
0x40099024 C   FIELD 05w01 DELTACTS (ro): This bit is set when a change in the state of the CTS input is detected.
0x40099024 C   FIELD 06w01 TXDISINT (ro): Transmitter Disabled Interrupt flag.
0x40099024 C   FIELD 11w01 DELTARXBRK (ro): This bit is set when a change in the state of receiver break detection occurs.
0x40099024 C   FIELD 12w01 START (ro): This bit is set when a start is detected on the receiver input.
0x40099024 C   FIELD 13w01 FRAMERRINT (ro): Framing Error interrupt flag.
0x40099024 C   FIELD 14w01 PARITYERRINT (ro): Parity Error interrupt flag.
0x40099024 C   FIELD 15w01 RXNOISEINT (ro): Received Noise interrupt flag.
0x40099024 C   FIELD 16w01 ABERRINT (ro): Auto baud Error Interrupt flag.
0x40099028 B  REGISTER OSR (rw): Oversample selection register for asynchronous communication.
0x40099028 C   FIELD 00w04 OSRVAL (rw): Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit.
0x4009902C B  REGISTER ADDR (rw): Address register for automatic address matching.
0x4009902C C   FIELD 00w08 ADDRESS (rw): 8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1).
0x40099400 B  REGISTER CFG (rw): SPI Configuration register
0x40099400 C   FIELD 00w01 ENABLE (rw): SPI enable.
0x40099400 C   FIELD 02w01 MASTER (rw): Master mode select.
0x40099400 C   FIELD 03w01 LSBF (rw): LSB First mode enable.
0x40099400 C   FIELD 04w01 CPHA (rw): Clock Phase select.
0x40099400 C   FIELD 05w01 CPOL (rw): Clock Polarity select.
0x40099400 C   FIELD 07w01 LOOP (rw): Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.
0x40099400 C   FIELD 08w01 SPOL0 (rw): SSEL0 Polarity select.
0x40099400 C   FIELD 09w01 SPOL1 (rw): SSEL1 Polarity select.
0x40099400 C   FIELD 10w01 SPOL2 (rw): SSEL2 Polarity select.
0x40099400 C   FIELD 11w01 SPOL3 (rw): SSEL3 Polarity select.
0x40099404 B  REGISTER DLY (rw): SPI Delay register
0x40099404 C   FIELD 00w04 PRE_DELAY (rw): Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40099404 C   FIELD 04w04 POST_DELAY (rw): Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40099404 C   FIELD 08w04 FRAME_DELAY (rw): If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x40099404 C   FIELD 12w04 TRANSFER_DELAY (rw): Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times.
0x40099408 B  REGISTER STAT (rw): SPI Status. Some status flags can be cleared by writing a 1 to that bit position.
0x40099408 C   FIELD 04w01 SSA (wo): Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software.
0x40099408 C   FIELD 05w01 SSD (wo): Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software.
0x40099408 C   FIELD 06w01 STALLED (ro): Stalled status flag. This indicates whether the SPI is currently in a stall condition.
0x40099408 C   FIELD 07w01 ENDTRANSFER (rw): End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted.
0x40099408 C   FIELD 08w01 MSTIDLE (ro): Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data.
0x4009940C B  REGISTER INTENSET (rw): SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4009940C C   FIELD 04w01 SSAEN (rw): Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.
0x4009940C C   FIELD 05w01 SSDEN (rw): Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.
0x4009940C C   FIELD 08w01 MSTIDLEEN (rw): Master idle interrupt enable.
0x40099410 B  REGISTER INTENCLR (wo): SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared.
0x40099410 C   FIELD 04w01 SSAEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099410 C   FIELD 05w01 SSDEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099410 C   FIELD 08w01 MSTIDLE (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x40099424 B  REGISTER DIV (rw): SPI clock Divider
0x40099424 C   FIELD 00w16 DIVVAL (rw): Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
0x40099428 B  REGISTER INTSTAT (ro): SPI Interrupt Status
0x40099428 C   FIELD 04w01 SSA (ro): Slave Select Assert.
0x40099428 C   FIELD 05w01 SSD (ro): Slave Select Deassert.
0x40099428 C   FIELD 08w01 MSTIDLE (ro): Master Idle status flag.
0x40099800 B  REGISTER CFG (rw): Configuration for shared functions.
0x40099800 C   FIELD 00w01 MSTEN (rw): Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.
0x40099800 C   FIELD 01w01 SLVEN (rw): Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.
0x40099800 C   FIELD 02w01 MONEN (rw): Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.
0x40099800 C   FIELD 03w01 TIMEOUTEN (rw): I2C bus Time-out Enable. When disabled, the time-out function is internally reset.
0x40099800 C   FIELD 04w01 MONCLKSTR (rw): Monitor function Clock Stretching.
0x40099800 C   FIELD 05w01 HSCAPABLE (rw): High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.
0x40099804 B  REGISTER STAT (rw): Status register for Master, Slave, and Monitor functions.
0x40099804 C   FIELD 00w01 MSTPENDING (ro): Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.
0x40099804 C   FIELD 01w03 MSTSTATE (ro): Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.
0x40099804 C   FIELD 04w01 MSTARBLOSS (rw): Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40099804 C   FIELD 06w01 MSTSTSTPERR (rw): Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x40099804 C   FIELD 08w01 SLVPENDING (ro): Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.
0x40099804 C   FIELD 09w02 SLVSTATE (ro): Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.
0x40099804 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.
0x40099804 C   FIELD 12w02 SLVIDX (ro): Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.
0x40099804 C   FIELD 14w01 SLVSEL (ro): Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.
0x40099804 C   FIELD 15w01 SLVDESEL (rw): Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
0x40099804 C   FIELD 16w01 MONRDY (ro): Monitor Ready. This flag is cleared when the MONRXDAT register is read.
0x40099804 C   FIELD 17w01 MONOV (rw): Monitor Overflow flag.
0x40099804 C   FIELD 18w01 MONACTIVE (ro): Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.
0x40099804 C   FIELD 19w01 MONIDLE (rw): Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.
0x40099804 C   FIELD 24w01 EVENTTIMEOUT (rw): Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.
0x40099804 C   FIELD 25w01 SCLTIMEOUT (rw): SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.
0x40099808 B  REGISTER INTENSET (rw): Interrupt Enable Set and read register.
0x40099808 C   FIELD 00w01 MSTPENDINGEN (rw): Master Pending interrupt Enable.
0x40099808 C   FIELD 04w01 MSTARBLOSSEN (rw): Master Arbitration Loss interrupt Enable.
0x40099808 C   FIELD 06w01 MSTSTSTPERREN (rw): Master Start/Stop Error interrupt Enable.
0x40099808 C   FIELD 08w01 SLVPENDINGEN (rw): Slave Pending interrupt Enable.
0x40099808 C   FIELD 11w01 SLVNOTSTREN (rw): Slave Not Stretching interrupt Enable.
0x40099808 C   FIELD 15w01 SLVDESELEN (rw): Slave Deselect interrupt Enable.
0x40099808 C   FIELD 16w01 MONRDYEN (rw): Monitor data Ready interrupt Enable.
0x40099808 C   FIELD 17w01 MONOVEN (rw): Monitor Overrun interrupt Enable.
0x40099808 C   FIELD 19w01 MONIDLEEN (rw): Monitor Idle interrupt Enable.
0x40099808 C   FIELD 24w01 EVENTTIMEOUTEN (rw): Event time-out interrupt Enable.
0x40099808 C   FIELD 25w01 SCLTIMEOUTEN (rw): SCL time-out interrupt Enable.
0x4009980C B  REGISTER INTENCLR (wo): Interrupt Enable Clear register.
0x4009980C C   FIELD 00w01 MSTPENDINGCLR (wo): Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented.
0x4009980C C   FIELD 04w01 MSTARBLOSSCLR (wo): Master Arbitration Loss interrupt clear.
0x4009980C C   FIELD 06w01 MSTSTSTPERRCLR (wo): Master Start/Stop Error interrupt clear.
0x4009980C C   FIELD 08w01 SLVPENDINGCLR (wo): Slave Pending interrupt clear.
0x4009980C C   FIELD 11w01 SLVNOTSTRCLR (wo): Slave Not Stretching interrupt clear.
0x4009980C C   FIELD 15w01 SLVDESELCLR (wo): Slave Deselect interrupt clear.
0x4009980C C   FIELD 16w01 MONRDYCLR (wo): Monitor data Ready interrupt clear.
0x4009980C C   FIELD 17w01 MONOVCLR (wo): Monitor Overrun interrupt clear.
0x4009980C C   FIELD 19w01 MONIDLECLR (wo): Monitor Idle interrupt clear.
0x4009980C C   FIELD 24w01 EVENTTIMEOUTCLR (wo): Event time-out interrupt clear.
0x4009980C C   FIELD 25w01 SCLTIMEOUTCLR (wo): SCL time-out interrupt clear.
0x40099810 B  REGISTER TIMEOUT (rw): Time-out value register.
0x40099810 C   FIELD 00w04 TOMIN (rw): Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks.
0x40099810 C   FIELD 04w12 TO (rw): Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock.
0x40099814 B  REGISTER CLKDIV (rw): Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function.
0x40099814 C   FIELD 00w16 DIVVAL (rw): This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use.
0x40099818 B  REGISTER INTSTAT (ro): Interrupt Status register for Master, Slave, and Monitor functions.
0x40099818 C   FIELD 00w01 MSTPENDING (ro): Master Pending.
0x40099818 C   FIELD 04w01 MSTARBLOSS (ro): Master Arbitration Loss flag.
0x40099818 C   FIELD 06w01 MSTSTSTPERR (ro): Master Start/Stop Error flag.
0x40099818 C   FIELD 08w01 SLVPENDING (ro): Slave Pending.
0x40099818 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching status.
0x40099818 C   FIELD 15w01 SLVDESEL (ro): Slave Deselected flag.
0x40099818 C   FIELD 16w01 MONRDY (ro): Monitor Ready.
0x40099818 C   FIELD 17w01 MONOV (ro): Monitor Overflow flag.
0x40099818 C   FIELD 19w01 MONIDLE (ro): Monitor Idle flag.
0x40099818 C   FIELD 24w01 EVENTTIMEOUT (ro): Event time-out Interrupt flag.
0x40099818 C   FIELD 25w01 SCLTIMEOUT (ro): SCL time-out Interrupt flag.
0x40099820 B  REGISTER MSTCTL (rw): Master control register.
0x40099820 C   FIELD 00w01 MSTCONTINUE (wo): Master Continue. This bit is write-only.
0x40099820 C   FIELD 01w01 MSTSTART (rw): Master Start control. This bit is write-only.
0x40099820 C   FIELD 02w01 MSTSTOP (rw): Master Stop control. This bit is write-only.
0x40099820 C   FIELD 03w01 MSTDMA (rw): Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.
0x40099824 B  REGISTER MSTTIME (rw): Master timing configuration.
0x40099824 C   FIELD 00w03 MSTSCLLOW (rw): Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.
0x40099824 C   FIELD 04w03 MSTSCLHIGH (rw): Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.
0x40099828 B  REGISTER MSTDAT (rw): Combined Master receiver and transmitter data register.
0x40099828 C   FIELD 00w08 DATA (rw): Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function.
0x40099840 B  REGISTER SLVCTL (rw): Slave control register.
0x40099840 C   FIELD 00w01 SLVCONTINUE (rw): Slave Continue.
0x40099840 C   FIELD 01w01 SLVNACK (rw): Slave NACK.
0x40099840 C   FIELD 03w01 SLVDMA (rw): Slave DMA enable.
0x40099840 C   FIELD 08w01 AUTOACK (rw): Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.
0x40099840 C   FIELD 09w01 AUTOMATCHREAD (rw): When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.
0x40099844 B  REGISTER SLVDAT (rw): Combined Slave receiver and transmitter data register.
0x40099844 C   FIELD 00w08 DATA (rw): Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function.
0x40099848 B  REGISTER SLVADR[0] (rw): Slave address register.
0x40099848 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40099848 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40099848 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4009984C B  REGISTER SLVADR[1] (rw): Slave address register.
0x4009984C C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4009984C C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4009984C C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40099850 B  REGISTER SLVADR[2] (rw): Slave address register.
0x40099850 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40099850 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40099850 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40099854 B  REGISTER SLVADR[3] (rw): Slave address register.
0x40099854 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x40099854 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x40099854 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x40099858 B  REGISTER SLVQUAL0 (rw): Slave Qualification for address 0.
0x40099858 C   FIELD 00w01 QUALMODE0 (rw): Qualify mode for slave address 0.
0x40099858 C   FIELD 01w07 SLVQUAL0 (rw): Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] <= received address <= SLVQUAL0[7:1]).
0x40099880 B  REGISTER MONRXDAT (ro): Monitor receiver data register.
0x40099880 C   FIELD 00w08 MONRXDAT (ro): Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins.
0x40099880 C   FIELD 08w01 MONSTART (ro): Monitor Received Start.
0x40099880 C   FIELD 09w01 MONRESTART (ro): Monitor Received Repeated Start.
0x40099880 C   FIELD 10w01 MONNACK (ro): Monitor Received NACK.
0x40099DFC B  REGISTER ID (ro): I2S Module identification
0x40099DFC C   FIELD 00w08 Aperture (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40099DFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation, starting at 0.
0x40099DFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation, starting at 0.
0x40099DFC C   FIELD 16w16 ID (ro): Unique module identifier for this IP block.
0x40099E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40099E00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x40099E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40099E00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x40099E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40099E00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x40099E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40099E00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x40099E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40099E00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x40099E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40099E00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x40099E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40099E00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40099E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40099E00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x40099E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40099E00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x40099E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40099E00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x40099E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40099E00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x40099E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40099E04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x40099E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40099E04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x40099E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40099E04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x40099E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40099E04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x40099E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40099E04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x40099E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40099E04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x40099E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40099E04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x40099E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40099E04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x40099E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40099E04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x40099E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40099E04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x40099E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40099E08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x40099E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40099E08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x40099E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40099E08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x40099E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40099E08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x40099E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40099E08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x40099E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40099E10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x40099E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40099E10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x40099E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40099E10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x40099E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40099E10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40099E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40099E10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x40099E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40099E14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x40099E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40099E14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40099E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40099E14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40099E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40099E14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40099E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40099E14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x40099E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40099E18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x40099E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40099E18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x40099E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40099E18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x40099E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40099E18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x40099E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40099E18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x40099E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40099E18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x40099E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40099E20 B  REGISTER FIFOWR (rw): FIFO write data.
0x40099E20 C   FIELD 00w09 TXDATA (rw): Transmit data to the FIFO.
0x40099E20 C   FIELD 00w16 TXDATA (rw): Transmit data to the FIFO.
0x40099E20 C   FIELD 16w01 TXSSEL0_N (wo): Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.
0x40099E20 C   FIELD 17w01 TXSSEL1_N (wo): Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.
0x40099E20 C   FIELD 18w01 TXSSEL2_N (wo): Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.
0x40099E20 C   FIELD 19w01 TXSSEL3_N (wo): Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.
0x40099E20 C   FIELD 20w01 EOT (wo): End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.
0x40099E20 C   FIELD 21w01 EOF (wo): End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.
0x40099E20 C   FIELD 22w01 RXIGNORE (wo): Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.
0x40099E20 C   FIELD 24w04 LEN (wo): Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length.
0x40099E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40099E30 B  REGISTER FIFORD (ro): FIFO read data.
0x40099E30 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40099E30 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40099E30 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40099E30 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40099E30 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40099E30 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40099E30 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40099E30 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40099E30 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x40099E30 C   FIELD 20w01 SOT (ro): Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits.
0x40099E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40099E40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x40099E40 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x40099E40 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x40099E40 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x40099E40 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x40099E40 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x40099E40 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive.
0x40099E40 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive.
0x40099E40 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive.
0x40099E40 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive.
0x40099E40 C   FIELD 20w01 SOT (ro): Start of transfer flag.
0x40099FF8 B  REGISTER PSELID (rw): Peripheral Select and Flexcomm ID register.
0x40099FF8 C   FIELD 00w03 PERSEL (rw): Peripheral Select. This field is writable by software.
0x40099FF8 C   FIELD 03w01 LOCK (rw): Lock the peripheral select. This field is writable by software.
0x40099FF8 C   FIELD 04w01 USARTPRESENT (ro): USART present indicator. This field is Read-only.
0x40099FF8 C   FIELD 05w01 SPIPRESENT (ro): SPI present indicator. This field is Read-only.
0x40099FF8 C   FIELD 06w01 I2CPRESENT (ro): I2C present indicator. This field is Read-only.
0x40099FF8 C   FIELD 07w01 I2SPRESENT (ro): I 2S present indicator. This field is Read-only.
0x40099FF8 C   FIELD 12w20 ID (ro): Flexcomm ID.
0x40099FFC B  REGISTER ID (ro): Peripheral identification register.
0x40099FFC B  REGISTER ID (ro): Peripheral identification register.
0x40099FFC B  REGISTER ID (ro): Peripheral identification register.
0x40099FFC B  REGISTER PID (rw): Peripheral identification register.
0x40099FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40099FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40099FFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x40099FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40099FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40099FFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x40099FFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation.
0x40099FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40099FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40099FFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x40099FFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation.
0x40099FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40099FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40099FFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x40099FFC C   FIELD 16w16 ID (rw): Module identifier for the selected function.
0x4009A000 A PERIPHERAL FLEXCOMM9
0x4009A000 A PERIPHERAL I2C9
0x4009A000 A PERIPHERAL SPI9
0x4009A000 A PERIPHERAL USART9
0x4009A000 B  REGISTER CFG (rw): USART Configuration register. Basic USART configuration settings that typically are not changed during operation.
0x4009A000 C   FIELD 00w01 ENABLE (rw): USART Enable.
0x4009A000 C   FIELD 02w02 DATALEN (rw): Selects the data size for the USART.
0x4009A000 C   FIELD 04w02 PARITYSEL (rw): Selects what type of parity is used by the USART.
0x4009A000 C   FIELD 06w01 STOPLEN (rw): Number of stop bits appended to transmitted data. Only a single stop bit is required for received data.
0x4009A000 C   FIELD 07w01 MODE32K (rw): Selects standard or 32 kHz clocking mode.
0x4009A000 C   FIELD 08w01 LINMODE (rw): LIN break mode enable.
0x4009A000 C   FIELD 09w01 CTSEN (rw): CTS Enable. Determines whether CTS is used for flow control. CTS can be from the input pin, or from the USART's own RTS if loopback mode is enabled.
0x4009A000 C   FIELD 11w01 SYNCEN (rw): Selects synchronous or asynchronous operation.
0x4009A000 C   FIELD 12w01 CLKPOL (rw): Selects the clock polarity and sampling edge of received data in synchronous mode.
0x4009A000 C   FIELD 14w01 SYNCMST (rw): Synchronous mode Master select.
0x4009A000 C   FIELD 15w01 LOOP (rw): Selects data loopback mode.
0x4009A000 C   FIELD 18w01 OETA (rw): Output Enable Turnaround time enable for RS-485 operation.
0x4009A000 C   FIELD 19w01 AUTOADDR (rw): Automatic Address matching enable.
0x4009A000 C   FIELD 20w01 OESEL (rw): Output Enable Select.
0x4009A000 C   FIELD 21w01 OEPOL (rw): Output Enable Polarity.
0x4009A000 C   FIELD 22w01 RXPOL (rw): Receive data polarity.
0x4009A000 C   FIELD 23w01 TXPOL (rw): Transmit data polarity.
0x4009A004 B  REGISTER CTL (rw): USART Control register. USART control settings that are more likely to change during operation.
0x4009A004 C   FIELD 01w01 TXBRKEN (rw): Break Enable.
0x4009A004 C   FIELD 02w01 ADDRDET (rw): Enable address detect mode.
0x4009A004 C   FIELD 06w01 TXDIS (rw): Transmit Disable.
0x4009A004 C   FIELD 08w01 CC (rw): Continuous Clock generation. By default, SCLK is only output while data is being transmitted in synchronous mode.
0x4009A004 C   FIELD 09w01 CLRCCONRX (rw): Clear Continuous Clock.
0x4009A004 C   FIELD 16w01 AUTOBAUD (rw): Autobaud enable.
0x4009A008 B  REGISTER STAT (rw): USART Status register. The complete status value can be read here. Writing ones clears some bits in the register. Some bits can be cleared by writing a 1 to them.
0x4009A008 C   FIELD 01w01 RXIDLE (ro): Receiver Idle. When 0, indicates that the receiver is currently in the process of receiving data. When 1, indicates that the receiver is not currently in the process of receiving data.
0x4009A008 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle. When 0, indicates that the transmitter is currently in the process of sending data.When 1, indicate that the transmitter is not currently in the process of sending data.
0x4009A008 C   FIELD 04w01 CTS (ro): This bit reflects the current state of the CTS signal, regardless of the setting of the CTSEN bit in the CFG register. This will be the value of the CTS input pin unless loopback mode is enabled.
0x4009A008 C   FIELD 05w01 DELTACTS (rw): This bit is set when a change in the state is detected for the CTS flag above. This bit is cleared by software.
0x4009A008 C   FIELD 06w01 TXDISSTAT (ro): Transmitter Disabled Status flag. When 1, this bit indicates that the USART transmitter is fully idle after being disabled via the TXDIS bit in the CFG register (TXDIS = 1).
0x4009A008 C   FIELD 10w01 RXBRK (ro): Received Break. This bit reflects the current state of the receiver break detection logic. It is set when the Un_RXD pin remains low for 16 bit times. Note that FRAMERRINT will also be set when this condition occurs because the stop bit(s) for the character would be missing. RXBRK is cleared when the Un_RXD pin goes high.
0x4009A008 C   FIELD 11w01 DELTARXBRK (rw): This bit is set when a change in the state of receiver break detection occurs. Cleared by software.
0x4009A008 C   FIELD 12w01 START (rw): This bit is set when a start is detected on the receiver input. Its purpose is primarily to allow wake-up from Deep-sleep or Power-down mode immediately when a start is detected. Cleared by software.
0x4009A008 C   FIELD 13w01 FRAMERRINT (rw): Framing Error interrupt flag. This flag is set when a character is received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x4009A008 C   FIELD 14w01 PARITYERRINT (rw): Parity Error interrupt flag. This flag is set when a parity error is detected in a received character.
0x4009A008 C   FIELD 15w01 RXNOISEINT (rw): Received Noise interrupt flag. Three samples of received data are taken in order to determine the value of each received data bit, except in synchronous mode. This acts as a noise filter if one sample disagrees. This flag is set when a received data bit contains one disagreeing sample. This could indicate line noise, a baud rate or character format mismatch, or loss of synchronization during data reception.
0x4009A008 C   FIELD 16w01 ABERR (rw): Auto baud Error. An auto baud error can occur if the BRG counts to its limit before the end of the start bit that is being measured, essentially an auto baud time-out.
0x4009A00C B  REGISTER INTENSET (rw): Interrupt Enable read and Set register for USART (not FIFO) status. Contains individual interrupt enable bits for each potential USART interrupt. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4009A00C C   FIELD 03w01 TXIDLEEN (rw): When 1, enables an interrupt when the transmitter becomes idle (TXIDLE = 1).
0x4009A00C C   FIELD 05w01 DELTACTSEN (rw): When 1, enables an interrupt when there is a change in the state of the CTS input.
0x4009A00C C   FIELD 06w01 TXDISEN (rw): When 1, enables an interrupt when the transmitter is fully disabled as indicated by the TXDISINT flag in STAT. See description of the TXDISINT bit for details.
0x4009A00C C   FIELD 11w01 DELTARXBRKEN (rw): When 1, enables an interrupt when a change of state has occurred in the detection of a received break condition (break condition asserted or deasserted).
0x4009A00C C   FIELD 12w01 STARTEN (rw): When 1, enables an interrupt when a received start bit has been detected.
0x4009A00C C   FIELD 13w01 FRAMERREN (rw): When 1, enables an interrupt when a framing error has been detected.
0x4009A00C C   FIELD 14w01 PARITYERREN (rw): When 1, enables an interrupt when a parity error has been detected.
0x4009A00C C   FIELD 15w01 RXNOISEEN (rw): When 1, enables an interrupt when noise is detected. See description of the RXNOISEINT bit in Table 354.
0x4009A00C C   FIELD 16w01 ABERREN (rw): When 1, enables an interrupt when an auto baud error occurs.
0x4009A010 B  REGISTER INTENCLR (wo): Interrupt Enable Clear register. Allows clearing any combination of bits in the INTENSET register. Writing a 1 to any implemented bit position causes the corresponding bit to be cleared.
0x4009A010 C   FIELD 03w01 TXIDLECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A010 C   FIELD 05w01 DELTACTSCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A010 C   FIELD 06w01 TXDISCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A010 C   FIELD 11w01 DELTARXBRKCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A010 C   FIELD 12w01 STARTCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A010 C   FIELD 13w01 FRAMERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A010 C   FIELD 14w01 PARITYERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A010 C   FIELD 15w01 RXNOISECLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A010 C   FIELD 16w01 ABERRCLR (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A020 B  REGISTER BRG (rw): Baud Rate Generator register. 16-bit integer baud rate divisor value.
0x4009A020 C   FIELD 00w16 BRGVAL (rw): This value is used to divide the USART input clock to determine the baud rate, based on the input clock from the FRG. 0 = FCLK is used directly by the USART function. 1 = FCLK is divided by 2 before use by the USART function. 2 = FCLK is divided by 3 before use by the USART function. 0xFFFF = FCLK is divided by 65,536 before use by the USART function.
0x4009A024 B  REGISTER INTSTAT (ro): Interrupt status register. Reflects interrupts that are currently enabled.
0x4009A024 C   FIELD 03w01 TXIDLE (ro): Transmitter Idle status.
0x4009A024 C   FIELD 05w01 DELTACTS (ro): This bit is set when a change in the state of the CTS input is detected.
0x4009A024 C   FIELD 06w01 TXDISINT (ro): Transmitter Disabled Interrupt flag.
0x4009A024 C   FIELD 11w01 DELTARXBRK (ro): This bit is set when a change in the state of receiver break detection occurs.
0x4009A024 C   FIELD 12w01 START (ro): This bit is set when a start is detected on the receiver input.
0x4009A024 C   FIELD 13w01 FRAMERRINT (ro): Framing Error interrupt flag.
0x4009A024 C   FIELD 14w01 PARITYERRINT (ro): Parity Error interrupt flag.
0x4009A024 C   FIELD 15w01 RXNOISEINT (ro): Received Noise interrupt flag.
0x4009A024 C   FIELD 16w01 ABERRINT (ro): Auto baud Error Interrupt flag.
0x4009A028 B  REGISTER OSR (rw): Oversample selection register for asynchronous communication.
0x4009A028 C   FIELD 00w04 OSRVAL (rw): Oversample Selection Value. 0 to 3 = not supported 0x4 = 5 function clocks are used to transmit and receive each data bit. 0x5 = 6 function clocks are used to transmit and receive each data bit. 0xF= 16 function clocks are used to transmit and receive each data bit.
0x4009A02C B  REGISTER ADDR (rw): Address register for automatic address matching.
0x4009A02C C   FIELD 00w08 ADDRESS (rw): 8-bit address used with automatic address matching. Used when address detection is enabled (ADDRDET in CTL = 1) and automatic address matching is enabled (AUTOADDR in CFG = 1).
0x4009A400 B  REGISTER CFG (rw): SPI Configuration register
0x4009A400 C   FIELD 00w01 ENABLE (rw): SPI enable.
0x4009A400 C   FIELD 02w01 MASTER (rw): Master mode select.
0x4009A400 C   FIELD 03w01 LSBF (rw): LSB First mode enable.
0x4009A400 C   FIELD 04w01 CPHA (rw): Clock Phase select.
0x4009A400 C   FIELD 05w01 CPOL (rw): Clock Polarity select.
0x4009A400 C   FIELD 07w01 LOOP (rw): Loopback mode enable. Loopback mode applies only to Master mode, and connects transmit and receive data connected together to allow simple software testing.
0x4009A400 C   FIELD 08w01 SPOL0 (rw): SSEL0 Polarity select.
0x4009A400 C   FIELD 09w01 SPOL1 (rw): SSEL1 Polarity select.
0x4009A400 C   FIELD 10w01 SPOL2 (rw): SSEL2 Polarity select.
0x4009A400 C   FIELD 11w01 SPOL3 (rw): SSEL3 Polarity select.
0x4009A404 B  REGISTER DLY (rw): SPI Delay register
0x4009A404 C   FIELD 00w04 PRE_DELAY (rw): Controls the amount of time between SSEL assertion and the beginning of a data transfer. There is always one SPI clock time between SSEL assertion and the first clock edge. This is not considered part of the pre-delay. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x4009A404 C   FIELD 04w04 POST_DELAY (rw): Controls the amount of time between the end of a data transfer and SSEL deassertion. 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x4009A404 C   FIELD 08w04 FRAME_DELAY (rw): If the EOF flag is set, controls the minimum amount of time between the current frame and the next frame (or SSEL deassertion if EOT). 0x0 = No additional time is inserted. 0x1 = 1 SPI clock time is inserted. 0x2 = 2 SPI clock times are inserted. 0xF = 15 SPI clock times are inserted.
0x4009A404 C   FIELD 12w04 TRANSFER_DELAY (rw): Controls the minimum amount of time that the SSEL is deasserted between transfers. 0x0 = The minimum time that SSEL is deasserted is 1 SPI clock time. (Zero added time.) 0x1 = The minimum time that SSEL is deasserted is 2 SPI clock times. 0x2 = The minimum time that SSEL is deasserted is 3 SPI clock times. 0xF = The minimum time that SSEL is deasserted is 16 SPI clock times.
0x4009A408 B  REGISTER STAT (rw): SPI Status. Some status flags can be cleared by writing a 1 to that bit position.
0x4009A408 C   FIELD 04w01 SSA (wo): Slave Select Assert. This flag is set whenever any slave select transitions from deasserted to asserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become busy, and allows waking up the device from reduced power modes when a slave mode access begins. This flag is cleared by software.
0x4009A408 C   FIELD 05w01 SSD (wo): Slave Select Deassert. This flag is set whenever any asserted slave selects transition to deasserted, in both master and slave modes. This allows determining when the SPI transmit/receive functions become idle. This flag is cleared by software.
0x4009A408 C   FIELD 06w01 STALLED (ro): Stalled status flag. This indicates whether the SPI is currently in a stall condition.
0x4009A408 C   FIELD 07w01 ENDTRANSFER (rw): End Transfer control bit. Software can set this bit to force an end to the current transfer when the transmitter finishes any activity already in progress, as if the EOT flag had been set prior to the last transmission. This capability is included to support cases where it is not known when transmit data is written that it will be the end of a transfer. The bit is cleared when the transmitter becomes idle as the transfer comes to an end. Forcing an end of transfer in this manner causes any specified FRAME_DELAY and TRANSFER_DELAY to be inserted.
0x4009A408 C   FIELD 08w01 MSTIDLE (ro): Master idle status flag. This bit is 1 whenever the SPI master function is fully idle. This means that the transmit holding register is empty and the transmitter is not in the process of sending data.
0x4009A40C B  REGISTER INTENSET (rw): SPI Interrupt Enable read and Set. A complete value may be read from this register. Writing a 1 to any implemented bit position causes that bit to be set.
0x4009A40C C   FIELD 04w01 SSAEN (rw): Slave select assert interrupt enable. Determines whether an interrupt occurs when the Slave Select is asserted.
0x4009A40C C   FIELD 05w01 SSDEN (rw): Slave select deassert interrupt enable. Determines whether an interrupt occurs when the Slave Select is deasserted.
0x4009A40C C   FIELD 08w01 MSTIDLEEN (rw): Master idle interrupt enable.
0x4009A410 B  REGISTER INTENCLR (wo): SPI Interrupt Enable Clear. Writing a 1 to any implemented bit position causes the corresponding bit in INTENSET to be cleared.
0x4009A410 C   FIELD 04w01 SSAEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A410 C   FIELD 05w01 SSDEN (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A410 C   FIELD 08w01 MSTIDLE (wo): Writing 1 clears the corresponding bit in the INTENSET register.
0x4009A424 B  REGISTER DIV (rw): SPI clock Divider
0x4009A424 C   FIELD 00w16 DIVVAL (rw): Rate divider value. Specifies how the Flexcomm clock (FCLK) is divided to produce the SPI clock rate in master mode. DIVVAL is -1 encoded such that the value 0 results in FCLK/1, the value 1 results in FCLK/2, up to the maximum possible divide value of 0xFFFF, which results in FCLK/65536.
0x4009A428 B  REGISTER INTSTAT (ro): SPI Interrupt Status
0x4009A428 C   FIELD 04w01 SSA (ro): Slave Select Assert.
0x4009A428 C   FIELD 05w01 SSD (ro): Slave Select Deassert.
0x4009A428 C   FIELD 08w01 MSTIDLE (ro): Master Idle status flag.
0x4009A800 B  REGISTER CFG (rw): Configuration for shared functions.
0x4009A800 C   FIELD 00w01 MSTEN (rw): Master Enable. When disabled, configurations settings for the Master function are not changed, but the Master function is internally reset.
0x4009A800 C   FIELD 01w01 SLVEN (rw): Slave Enable. When disabled, configurations settings for the Slave function are not changed, but the Slave function is internally reset.
0x4009A800 C   FIELD 02w01 MONEN (rw): Monitor Enable. When disabled, configurations settings for the Monitor function are not changed, but the Monitor function is internally reset.
0x4009A800 C   FIELD 03w01 TIMEOUTEN (rw): I2C bus Time-out Enable. When disabled, the time-out function is internally reset.
0x4009A800 C   FIELD 04w01 MONCLKSTR (rw): Monitor function Clock Stretching.
0x4009A800 C   FIELD 05w01 HSCAPABLE (rw): High-speed mode Capable enable. Since High Speed mode alters the way I2C pins drive and filter, as well as the timing for certain I2C signalling, enabling High-speed mode applies to all functions: Master, Slave, and Monitor.
0x4009A804 B  REGISTER STAT (rw): Status register for Master, Slave, and Monitor functions.
0x4009A804 C   FIELD 00w01 MSTPENDING (ro): Master Pending. Indicates that the Master is waiting to continue communication on the I2C-bus (pending) or is idle. When the master is pending, the MSTSTATE bits indicate what type of software service if any the master expects. This flag will cause an interrupt when set if, enabled via the INTENSET register. The MSTPENDING flag is not set when the DMA is handling an event (if the MSTDMA bit in the MSTCTL register is set). If the master is in the idle state, and no communication is needed, mask this interrupt.
0x4009A804 C   FIELD 01w03 MSTSTATE (ro): Master State code. The master state code reflects the master state when the MSTPENDING bit is set, that is the master is pending or in the idle state. Each value of this field indicates a specific required service for the Master function. All other values are reserved. See Table 400 for details of state values and appropriate responses.
0x4009A804 C   FIELD 04w01 MSTARBLOSS (rw): Master Arbitration Loss flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x4009A804 C   FIELD 06w01 MSTSTSTPERR (rw): Master Start/Stop Error flag. This flag can be cleared by software writing a 1 to this bit. It is also cleared automatically a 1 is written to MSTCONTINUE.
0x4009A804 C   FIELD 08w01 SLVPENDING (ro): Slave Pending. Indicates that the Slave function is waiting to continue communication on the I2C-bus and needs software service. This flag will cause an interrupt when set if enabled via INTENSET. The SLVPENDING flag is not set when the DMA is handling an event (if the SLVDMA bit in the SLVCTL register is set). The SLVPENDING flag is read-only and is automatically cleared when a 1 is written to the SLVCONTINUE bit in the SLVCTL register. The point in time when SlvPending is set depends on whether the I2C interface is in HSCAPABLE mode. See Section 25.7.2.2.2. When the I2C interface is configured to be HSCAPABLE, HS master codes are detected automatically. Due to the requirements of the HS I2C specification, slave addresses must also be detected automatically, since the address must be acknowledged before the clock can be stretched.
0x4009A804 C   FIELD 09w02 SLVSTATE (ro): Slave State code. Each value of this field indicates a specific required service for the Slave function. All other values are reserved. See Table 401 for state values and actions. note that the occurrence of some states and how they are handled are affected by DMA mode and Automatic Operation modes.
0x4009A804 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching. Indicates when the slave function is stretching the I2C clock. This is needed in order to gracefully invoke Deep Sleep or Power-down modes during slave operation. This read-only flag reflects the slave function status in real time.
0x4009A804 C   FIELD 12w02 SLVIDX (ro): Slave address match Index. This field is valid when the I2C slave function has been selected by receiving an address that matches one of the slave addresses defined by any enabled slave address registers, and provides an identification of the address that was matched. It is possible that more than one address could be matched, but only one match can be reported here.
0x4009A804 C   FIELD 14w01 SLVSEL (ro): Slave selected flag. SLVSEL is set after an address match when software tells the Slave function to acknowledge the address, or when the address has been automatically acknowledged. It is cleared when another address cycle presents an address that does not match an enabled address on the Slave function, when slave software decides to NACK a matched address, when there is a Stop detected on the bus, when the master NACKs slave data, and in some combinations of Automatic Operation. SLVSEL is not cleared if software NACKs data.
0x4009A804 C   FIELD 15w01 SLVDESEL (rw): Slave Deselected flag. This flag will cause an interrupt when set if enabled via INTENSET. This flag can be cleared by writing a 1 to this bit.
0x4009A804 C   FIELD 16w01 MONRDY (ro): Monitor Ready. This flag is cleared when the MONRXDAT register is read.
0x4009A804 C   FIELD 17w01 MONOV (rw): Monitor Overflow flag.
0x4009A804 C   FIELD 18w01 MONACTIVE (ro): Monitor Active flag. Indicates when the Monitor function considers the I 2C bus to be active. Active is defined here as when some Master is on the bus: a bus Start has occurred more recently than a bus Stop.
0x4009A804 C   FIELD 19w01 MONIDLE (rw): Monitor Idle flag. This flag is set when the Monitor function sees the I2C bus change from active to inactive. This can be used by software to decide when to process data accumulated by the Monitor function. This flag will cause an interrupt when set if enabled via the INTENSET register. The flag can be cleared by writing a 1 to this bit.
0x4009A804 C   FIELD 24w01 EVENTTIMEOUT (rw): Event Time-out Interrupt flag. Indicates when the time between events has been longer than the time specified by the TIMEOUT register. Events include Start, Stop, and clock edges. The flag is cleared by writing a 1 to this bit. No time-out is created when the I2C-bus is idle.
0x4009A804 C   FIELD 25w01 SCLTIMEOUT (rw): SCL Time-out Interrupt flag. Indicates when SCL has remained low longer than the time specific by the TIMEOUT register. The flag is cleared by writing a 1 to this bit.
0x4009A808 B  REGISTER INTENSET (rw): Interrupt Enable Set and read register.
0x4009A808 C   FIELD 00w01 MSTPENDINGEN (rw): Master Pending interrupt Enable.
0x4009A808 C   FIELD 04w01 MSTARBLOSSEN (rw): Master Arbitration Loss interrupt Enable.
0x4009A808 C   FIELD 06w01 MSTSTSTPERREN (rw): Master Start/Stop Error interrupt Enable.
0x4009A808 C   FIELD 08w01 SLVPENDINGEN (rw): Slave Pending interrupt Enable.
0x4009A808 C   FIELD 11w01 SLVNOTSTREN (rw): Slave Not Stretching interrupt Enable.
0x4009A808 C   FIELD 15w01 SLVDESELEN (rw): Slave Deselect interrupt Enable.
0x4009A808 C   FIELD 16w01 MONRDYEN (rw): Monitor data Ready interrupt Enable.
0x4009A808 C   FIELD 17w01 MONOVEN (rw): Monitor Overrun interrupt Enable.
0x4009A808 C   FIELD 19w01 MONIDLEEN (rw): Monitor Idle interrupt Enable.
0x4009A808 C   FIELD 24w01 EVENTTIMEOUTEN (rw): Event time-out interrupt Enable.
0x4009A808 C   FIELD 25w01 SCLTIMEOUTEN (rw): SCL time-out interrupt Enable.
0x4009A80C B  REGISTER INTENCLR (wo): Interrupt Enable Clear register.
0x4009A80C C   FIELD 00w01 MSTPENDINGCLR (wo): Master Pending interrupt clear. Writing 1 to this bit clears the corresponding bit in the INTENSET register if implemented.
0x4009A80C C   FIELD 04w01 MSTARBLOSSCLR (wo): Master Arbitration Loss interrupt clear.
0x4009A80C C   FIELD 06w01 MSTSTSTPERRCLR (wo): Master Start/Stop Error interrupt clear.
0x4009A80C C   FIELD 08w01 SLVPENDINGCLR (wo): Slave Pending interrupt clear.
0x4009A80C C   FIELD 11w01 SLVNOTSTRCLR (wo): Slave Not Stretching interrupt clear.
0x4009A80C C   FIELD 15w01 SLVDESELCLR (wo): Slave Deselect interrupt clear.
0x4009A80C C   FIELD 16w01 MONRDYCLR (wo): Monitor data Ready interrupt clear.
0x4009A80C C   FIELD 17w01 MONOVCLR (wo): Monitor Overrun interrupt clear.
0x4009A80C C   FIELD 19w01 MONIDLECLR (wo): Monitor Idle interrupt clear.
0x4009A80C C   FIELD 24w01 EVENTTIMEOUTCLR (wo): Event time-out interrupt clear.
0x4009A80C C   FIELD 25w01 SCLTIMEOUTCLR (wo): SCL time-out interrupt clear.
0x4009A810 B  REGISTER TIMEOUT (rw): Time-out value register.
0x4009A810 C   FIELD 00w04 TOMIN (rw): Time-out time value, bottom four bits. These are hard-wired to 0xF. This gives a minimum time-out of 16 I2C function clocks and also a time-out resolution of 16 I2C function clocks.
0x4009A810 C   FIELD 04w12 TO (rw): Time-out time value. Specifies the time-out interval value in increments of 16 I 2C function clocks, as defined by the CLKDIV register. To change this value while I2C is in operation, disable all time-outs, write a new value to TIMEOUT, then re-enable time-outs. 0x000 = A time-out will occur after 16 counts of the I2C function clock. 0x001 = A time-out will occur after 32 counts of the I2C function clock. 0xFFF = A time-out will occur after 65,536 counts of the I2C function clock.
0x4009A814 B  REGISTER CLKDIV (rw): Clock pre-divider for the entire I2C interface. This determines what time increments are used for the MSTTIME register, and controls some timing of the Slave function.
0x4009A814 C   FIELD 00w16 DIVVAL (rw): This field controls how the Flexcomm clock (FCLK) is used by the I2C functions that need an internal clock in order to operate. 0x0000 = FCLK is used directly by the I2C. 0x0001 = FCLK is divided by 2 before use. 0x0002 = FCLK is divided by 3 before use. 0xFFFF = FCLK is divided by 65,536 before use.
0x4009A818 B  REGISTER INTSTAT (ro): Interrupt Status register for Master, Slave, and Monitor functions.
0x4009A818 C   FIELD 00w01 MSTPENDING (ro): Master Pending.
0x4009A818 C   FIELD 04w01 MSTARBLOSS (ro): Master Arbitration Loss flag.
0x4009A818 C   FIELD 06w01 MSTSTSTPERR (ro): Master Start/Stop Error flag.
0x4009A818 C   FIELD 08w01 SLVPENDING (ro): Slave Pending.
0x4009A818 C   FIELD 11w01 SLVNOTSTR (ro): Slave Not Stretching status.
0x4009A818 C   FIELD 15w01 SLVDESEL (ro): Slave Deselected flag.
0x4009A818 C   FIELD 16w01 MONRDY (ro): Monitor Ready.
0x4009A818 C   FIELD 17w01 MONOV (ro): Monitor Overflow flag.
0x4009A818 C   FIELD 19w01 MONIDLE (ro): Monitor Idle flag.
0x4009A818 C   FIELD 24w01 EVENTTIMEOUT (ro): Event time-out Interrupt flag.
0x4009A818 C   FIELD 25w01 SCLTIMEOUT (ro): SCL time-out Interrupt flag.
0x4009A820 B  REGISTER MSTCTL (rw): Master control register.
0x4009A820 C   FIELD 00w01 MSTCONTINUE (wo): Master Continue. This bit is write-only.
0x4009A820 C   FIELD 01w01 MSTSTART (rw): Master Start control. This bit is write-only.
0x4009A820 C   FIELD 02w01 MSTSTOP (rw): Master Stop control. This bit is write-only.
0x4009A820 C   FIELD 03w01 MSTDMA (rw): Master DMA enable. Data operations of the I2C can be performed with DMA. Protocol type operations such as Start, address, Stop, and address match must always be done with software, typically via an interrupt. Address acknowledgement must also be done by software except when the I2C is configured to be HSCAPABLE (and address acknowledgement is handled entirely by hardware) or when Automatic Operation is enabled. When a DMA data transfer is complete, MSTDMA must be cleared prior to beginning the next operation, typically a Start or Stop.This bit is read/write.
0x4009A824 B  REGISTER MSTTIME (rw): Master timing configuration.
0x4009A824 C   FIELD 00w03 MSTSCLLOW (rw): Master SCL Low time. Specifies the minimum low time that will be asserted by this master on SCL. Other devices on the bus (masters or slaves) could lengthen this time. This corresponds to the parameter t LOW in the I2C bus specification. I2C bus specification parameters tBUF and tSU;STA have the same values and are also controlled by MSTSCLLOW.
0x4009A824 C   FIELD 04w03 MSTSCLHIGH (rw): Master SCL High time. Specifies the minimum high time that will be asserted by this master on SCL. Other masters in a multi-master system could shorten this time. This corresponds to the parameter tHIGH in the I2C bus specification. I2C bus specification parameters tSU;STO and tHD;STA have the same values and are also controlled by MSTSCLHIGH.
0x4009A828 B  REGISTER MSTDAT (rw): Combined Master receiver and transmitter data register.
0x4009A828 C   FIELD 00w08 DATA (rw): Master function data register. Read: read the most recently received data for the Master function. Write: transmit data using the Master function.
0x4009A840 B  REGISTER SLVCTL (rw): Slave control register.
0x4009A840 C   FIELD 00w01 SLVCONTINUE (rw): Slave Continue.
0x4009A840 C   FIELD 01w01 SLVNACK (rw): Slave NACK.
0x4009A840 C   FIELD 03w01 SLVDMA (rw): Slave DMA enable.
0x4009A840 C   FIELD 08w01 AUTOACK (rw): Automatic Acknowledge.When this bit is set, it will cause an I2C header which matches SLVADR0 and the direction set by AUTOMATCHREAD to be ACKed immediately; this is used with DMA to allow processing of the data without intervention. If this bit is clear and a header matches SLVADR0, the behavior is controlled by AUTONACK in the SLVADR0 register: allowing NACK or interrupt.
0x4009A840 C   FIELD 09w01 AUTOMATCHREAD (rw): When AUTOACK is set, this bit controls whether it matches a read or write request on the next header with an address matching SLVADR0. Since DMA needs to be configured to match the transfer direction, the direction needs to be specified. This bit allows a direction to be chosen for the next operation.
0x4009A844 B  REGISTER SLVDAT (rw): Combined Slave receiver and transmitter data register.
0x4009A844 C   FIELD 00w08 DATA (rw): Slave function data register. Read: read the most recently received data for the Slave function. Write: transmit data using the Slave function.
0x4009A848 B  REGISTER SLVADR[0] (rw): Slave address register.
0x4009A848 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4009A848 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4009A848 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4009A84C B  REGISTER SLVADR[1] (rw): Slave address register.
0x4009A84C C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4009A84C C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4009A84C C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4009A850 B  REGISTER SLVADR[2] (rw): Slave address register.
0x4009A850 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4009A850 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4009A850 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4009A854 B  REGISTER SLVADR[3] (rw): Slave address register.
0x4009A854 C   FIELD 00w01 SADISABLE (rw): Slave Address n Disable.
0x4009A854 C   FIELD 01w07 SLVADR (rw): Slave Address. Seven bit slave address that is compared to received addresses if enabled.
0x4009A854 C   FIELD 15w01 AUTONACK (rw): Automatic NACK operation. Used in conjunction with AUTOACK and AUTOMATCHREAD, allows software to ignore I2C traffic while handling previous I2C data or other operations.
0x4009A858 B  REGISTER SLVQUAL0 (rw): Slave Qualification for address 0.
0x4009A858 C   FIELD 00w01 QUALMODE0 (rw): Qualify mode for slave address 0.
0x4009A858 C   FIELD 01w07 SLVQUAL0 (rw): Slave address Qualifier for address 0. A value of 0 causes the address in SLVADR0 to be used as-is, assuming that it is enabled. If QUALMODE0 = 0, any bit in this field which is set to 1 will cause an automatic match of the corresponding bit of the received address when it is compared to the SLVADR0 register. If QUALMODE0 = 1, an address range is matched for address 0. This range extends from the value defined by SLVADR0 to the address defined by SLVQUAL0 (address matches when SLVADR0[7:1] <= received address <= SLVQUAL0[7:1]).
0x4009A880 B  REGISTER MONRXDAT (ro): Monitor receiver data register.
0x4009A880 C   FIELD 00w08 MONRXDAT (ro): Monitor function Receiver Data. This reflects every data byte that passes on the I2C pins.
0x4009A880 C   FIELD 08w01 MONSTART (ro): Monitor Received Start.
0x4009A880 C   FIELD 09w01 MONRESTART (ro): Monitor Received Repeated Start.
0x4009A880 C   FIELD 10w01 MONNACK (ro): Monitor Received NACK.
0x4009AE00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x4009AE00 B  REGISTER FIFOCFG (rw): FIFO configuration and enable register.
0x4009AE00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x4009AE00 C   FIELD 00w01 ENABLETX (rw): Enable the transmit FIFO.
0x4009AE00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x4009AE00 C   FIELD 01w01 ENABLERX (rw): Enable the receive FIFO.
0x4009AE00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x4009AE00 C   FIELD 04w02 SIZE (ro): FIFO size configuration. This is a read-only field. 0x0 = FIFO is configured as 16 entries of 8 bits. 0x1, 0x2, 0x3 = not applicable to USART.
0x4009AE00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x4009AE00 C   FIELD 12w01 DMATX (rw): DMA configuration for transmit.
0x4009AE00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x4009AE00 C   FIELD 13w01 DMARX (rw): DMA configuration for receive.
0x4009AE00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x4009AE00 C   FIELD 14w01 WAKETX (rw): Wake-up for transmit FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x4009AE00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x4009AE00 C   FIELD 15w01 WAKERX (rw): Wake-up for receive FIFO level. This allows the device to be woken from reduced power modes (up to power-down, as long as the peripheral function works in that power mode) without enabling the TXLVL interrupt. Only DMA wakes up, processes data, and goes back to sleep. The CPU will remain stopped until woken by another cause, such as DMA completion. See Hardware Wake-up control register.
0x4009AE00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x4009AE00 C   FIELD 16w01 EMPTYTX (rw): Empty command for the transmit FIFO. When a 1 is written to this bit, the TX FIFO is emptied.
0x4009AE00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x4009AE00 C   FIELD 17w01 EMPTYRX (rw): Empty command for the receive FIFO. When a 1 is written to this bit, the RX FIFO is emptied.
0x4009AE00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x4009AE00 C   FIELD 18w01 POPDBG (rw): Pop FIFO for debug reads.
0x4009AE04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x4009AE04 B  REGISTER FIFOSTAT (rw): FIFO status register.
0x4009AE04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x4009AE04 C   FIELD 00w01 TXERR (rw): TX FIFO error. Will be set if a transmit FIFO error occurs. This could be an overflow caused by pushing data into a full FIFO, or by an underflow if the FIFO is empty when data is needed. Cleared by writing a 1 to this bit.
0x4009AE04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x4009AE04 C   FIELD 01w01 RXERR (rw): RX FIFO error. Will be set if a receive FIFO overflow occurs, caused by software or DMA not emptying the FIFO fast enough. Cleared by writing a 1 to this bit.
0x4009AE04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x4009AE04 C   FIELD 03w01 PERINT (ro): Peripheral interrupt. When 1, this indicates that the peripheral function has asserted an interrupt. The details can be found by reading the peripheral's STAT register.
0x4009AE04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x4009AE04 C   FIELD 04w01 TXEMPTY (ro): Transmit FIFO empty. When 1, the transmit FIFO is empty. The peripheral may still be processing the last piece of data.
0x4009AE04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x4009AE04 C   FIELD 05w01 TXNOTFULL (ro): Transmit FIFO not full. When 1, the transmit FIFO is not full, so more data can be written. When 0, the transmit FIFO is full and another write would cause it to overflow.
0x4009AE04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x4009AE04 C   FIELD 06w01 RXNOTEMPTY (ro): Receive FIFO not empty. When 1, the receive FIFO is not empty, so data can be read. When 0, the receive FIFO is empty.
0x4009AE04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x4009AE04 C   FIELD 07w01 RXFULL (ro): Receive FIFO full. When 1, the receive FIFO is full. Data needs to be read out to prevent the peripheral from causing an overflow.
0x4009AE04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x4009AE04 C   FIELD 08w05 TXLVL (ro): Transmit FIFO current level. A 0 means the TX FIFO is currently empty, and the TXEMPTY and TXNOTFULL flags will be 1. Other values tell how much data is actually in the TX FIFO at the point where the read occurs. If the TX FIFO is full, the TXEMPTY and TXNOTFULL flags will be 0.
0x4009AE04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x4009AE04 C   FIELD 16w05 RXLVL (ro): Receive FIFO current level. A 0 means the RX FIFO is currently empty, and the RXFULL and RXNOTEMPTY flags will be 0. Other values tell how much data is actually in the RX FIFO at the point where the read occurs. If the RX FIFO is full, the RXFULL and RXNOTEMPTY flags will be 1.
0x4009AE08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x4009AE08 B  REGISTER FIFOTRIG (rw): FIFO trigger settings for interrupt and DMA request.
0x4009AE08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x4009AE08 C   FIELD 00w01 TXLVLENA (rw): Transmit FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMATX in FIFOCFG is set.
0x4009AE08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x4009AE08 C   FIELD 01w01 RXLVLENA (rw): Receive FIFO level trigger enable. This trigger will become an interrupt if enabled in FIFOINTENSET, or a DMA trigger if DMARX in FIFOCFG is set.
0x4009AE08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x4009AE08 C   FIELD 08w04 TXLVL (rw): Transmit FIFO level trigger point. This field is used only when TXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the TX FIFO becomes empty. 1 = trigger when the TX FIFO level decreases to one entry. 15 = trigger when the TX FIFO level decreases to 15 entries (is no longer full).
0x4009AE08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x4009AE08 C   FIELD 16w04 RXLVL (rw): Receive FIFO level trigger point. The RX FIFO level is checked when a new piece of data is received. This field is used only when RXLVLENA = 1. If enabled to do so, the FIFO level can wake up the device just enough to perform DMA, then return to the reduced power mode. See Hardware Wake-up control register. 0 = trigger when the RX FIFO has received one entry (is no longer empty). 1 = trigger when the RX FIFO has received two entries. 15 = trigger when the RX FIFO has received 16 entries (has become full).
0x4009AE10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x4009AE10 B  REGISTER FIFOINTENSET (rw): FIFO interrupt enable set (enable) and read register.
0x4009AE10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x4009AE10 C   FIELD 00w01 TXERR (rw): Determines whether an interrupt occurs when a transmit error occurs, based on the TXERR flag in the FIFOSTAT register.
0x4009AE10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x4009AE10 C   FIELD 01w01 RXERR (rw): Determines whether an interrupt occurs when a receive error occurs, based on the RXERR flag in the FIFOSTAT register.
0x4009AE10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x4009AE10 C   FIELD 02w01 TXLVL (rw): Determines whether an interrupt occurs when a the transmit FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x4009AE10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x4009AE10 C   FIELD 03w01 RXLVL (rw): Determines whether an interrupt occurs when a the receive FIFO reaches the level specified by the TXLVL field in the FIFOTRIG register.
0x4009AE14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x4009AE14 B  REGISTER FIFOINTENCLR (rw): FIFO interrupt enable clear (disable) and read register.
0x4009AE14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4009AE14 C   FIELD 00w01 TXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4009AE14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4009AE14 C   FIELD 01w01 RXERR (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4009AE14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4009AE14 C   FIELD 02w01 TXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4009AE14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4009AE14 C   FIELD 03w01 RXLVL (rw): Writing one clears the corresponding bits in the FIFOINTENSET register.
0x4009AE18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x4009AE18 B  REGISTER FIFOINTSTAT (ro): FIFO interrupt status register.
0x4009AE18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x4009AE18 C   FIELD 00w01 TXERR (ro): TX FIFO error.
0x4009AE18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x4009AE18 C   FIELD 01w01 RXERR (ro): RX FIFO error.
0x4009AE18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x4009AE18 C   FIELD 02w01 TXLVL (ro): Transmit FIFO level interrupt.
0x4009AE18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x4009AE18 C   FIELD 03w01 RXLVL (ro): Receive FIFO level interrupt.
0x4009AE18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x4009AE18 C   FIELD 04w01 PERINT (ro): Peripheral interrupt.
0x4009AE20 B  REGISTER FIFOWR (rw): FIFO write data.
0x4009AE20 B  REGISTER FIFOWR (rw): FIFO write data.
0x4009AE20 C   FIELD 00w09 TXDATA (rw): Transmit data to the FIFO.
0x4009AE20 C   FIELD 00w16 TXDATA (rw): Transmit data to the FIFO.
0x4009AE20 C   FIELD 16w01 TXSSEL0_N (wo): Transmit slave select. This field asserts SSEL0 in master mode. The output on the pin is active LOW by default.
0x4009AE20 C   FIELD 17w01 TXSSEL1_N (wo): Transmit slave select. This field asserts SSEL1 in master mode. The output on the pin is active LOW by default.
0x4009AE20 C   FIELD 18w01 TXSSEL2_N (wo): Transmit slave select. This field asserts SSEL2 in master mode. The output on the pin is active LOW by default.
0x4009AE20 C   FIELD 19w01 TXSSEL3_N (wo): Transmit slave select. This field asserts SSEL3 in master mode. The output on the pin is active LOW by default.
0x4009AE20 C   FIELD 20w01 EOT (wo): End of transfer. The asserted SSEL will be deasserted at the end of a transfer and remain so far at least the time specified by the Transfer_delay value in the DLY register.
0x4009AE20 C   FIELD 21w01 EOF (wo): End of frame. Between frames, a delay may be inserted, as defined by the Frame_delay value in the DLY register. The end of a frame may not be particularly meaningful if the Frame_delay value = 0. This control can be used as part of the support for frame lengths greater than 16 bits.
0x4009AE20 C   FIELD 22w01 RXIGNORE (wo): Receive Ignore. This allows data to be transmitted using the SPI without the need to read unneeded data from the receiver. Setting this bit simplifies the transmit process and can be used with the DMA.
0x4009AE20 C   FIELD 24w04 LEN (wo): Data Length. Specifies the data length from 4 to 16 bits. Note that transfer lengths greater than 16 bits are supported by implementing multiple sequential transmits. 0x0-2 = Reserved. 0x3 = Data transfer is 4 bits in length. 0x4 = Data transfer is 5 bits in length. 0xF = Data transfer is 16 bits in length.
0x4009AE30 B  REGISTER FIFORD (ro): FIFO read data.
0x4009AE30 B  REGISTER FIFORD (ro): FIFO read data.
0x4009AE30 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x4009AE30 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x4009AE30 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x4009AE30 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x4009AE30 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x4009AE30 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive. This field allows the state of the SSEL0 pin to be saved along with received data. The value will reflect the SSEL0 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x4009AE30 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive. This field allows the state of the SSEL1 pin to be saved along with received data. The value will reflect the SSEL1 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x4009AE30 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive. This field allows the state of the SSEL2 pin to be saved along with received data. The value will reflect the SSEL2 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x4009AE30 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive. This field allows the state of the SSEL3 pin to be saved along with received data. The value will reflect the SSEL3 pin for both master and slave operation. A zero indicates that a slave select is active. The actual polarity of each slave select pin is configured by the related SPOL bit in CFG.
0x4009AE30 C   FIELD 20w01 SOT (ro): Start of Transfer flag. This flag will be 1 if this is the first data after the SSELs went from deasserted to asserted (i.e., any previous transfer has ended). This information can be used to identify the first piece of data in cases where the transfer length is greater than 16 bits.
0x4009AE40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x4009AE40 B  REGISTER FIFORDNOPOP (ro): FIFO data read with no FIFO pop.
0x4009AE40 C   FIELD 00w09 RXDATA (ro): Received data from the FIFO. The number of bits used depends on the DATALEN and PARITYSEL settings.
0x4009AE40 C   FIELD 00w16 RXDATA (ro): Received data from the FIFO.
0x4009AE40 C   FIELD 13w01 FRAMERR (ro): Framing Error status flag. This bit reflects the status for the data it is read along with from the FIFO, and indicates that the character was received with a missing stop bit at the expected location. This could be an indication of a baud rate or configuration mismatch with the transmitting source.
0x4009AE40 C   FIELD 14w01 PARITYERR (ro): Parity Error status flag. This bit reflects the status for the data it is read along with from the FIFO. This bit will be set when a parity error is detected in a received character.
0x4009AE40 C   FIELD 15w01 RXNOISE (ro): Received Noise flag. See description of the RxNoiseInt bit in Table 354.
0x4009AE40 C   FIELD 16w01 RXSSEL0_N (ro): Slave Select for receive.
0x4009AE40 C   FIELD 17w01 RXSSEL1_N (ro): Slave Select for receive.
0x4009AE40 C   FIELD 18w01 RXSSEL2_N (ro): Slave Select for receive.
0x4009AE40 C   FIELD 19w01 RXSSEL3_N (ro): Slave Select for receive.
0x4009AE40 C   FIELD 20w01 SOT (ro): Start of transfer flag.
0x4009AFF8 B  REGISTER PSELID (rw): Peripheral Select and Flexcomm ID register.
0x4009AFF8 C   FIELD 00w03 PERSEL (rw): Peripheral Select. This field is writable by software.
0x4009AFF8 C   FIELD 03w01 LOCK (rw): Lock the peripheral select. This field is writable by software.
0x4009AFF8 C   FIELD 04w01 USARTPRESENT (ro): USART present indicator. This field is Read-only.
0x4009AFF8 C   FIELD 05w01 SPIPRESENT (ro): SPI present indicator. This field is Read-only.
0x4009AFF8 C   FIELD 06w01 I2CPRESENT (ro): I2C present indicator. This field is Read-only.
0x4009AFF8 C   FIELD 07w01 I2SPRESENT (ro): I 2S present indicator. This field is Read-only.
0x4009AFF8 C   FIELD 12w20 ID (ro): Flexcomm ID.
0x4009AFFC B  REGISTER ID (ro): Peripheral identification register.
0x4009AFFC B  REGISTER ID (ro): Peripheral identification register.
0x4009AFFC B  REGISTER ID (ro): Peripheral identification register.
0x4009AFFC B  REGISTER PID (rw): Peripheral identification register.
0x4009AFFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x4009AFFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x4009AFFC C   FIELD 00w08 APERTURE (ro): Aperture: encoded as (aperture size/4K) -1, so 0x00 means a 4K aperture.
0x4009AFFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x4009AFFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x4009AFFC C   FIELD 08w04 MINOR_REV (ro): Minor revision of module implementation.
0x4009AFFC C   FIELD 08w04 Minor_Rev (ro): Minor revision of module implementation.
0x4009AFFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x4009AFFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x4009AFFC C   FIELD 12w04 MAJOR_REV (ro): Major revision of module implementation.
0x4009AFFC C   FIELD 12w04 Major_Rev (ro): Major revision of module implementation.
0x4009AFFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x4009AFFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x4009AFFC C   FIELD 16w16 ID (ro): Module identifier for the selected function.
0x4009AFFC C   FIELD 16w16 ID (rw): Module identifier for the selected function.
0x4009B000 A PERIPHERAL SDIF
0x4009B000 B  REGISTER CTRL (rw): Control register
0x4009B000 C   FIELD 00w01 CONTROLLER_RESET (rw): Controller reset.
0x4009B000 C   FIELD 01w01 FIFO_RESET (rw): Fifo reset.
0x4009B000 C   FIELD 02w01 DMA_RESET (rw): DMA reset.
0x4009B000 C   FIELD 04w01 INT_ENABLE (rw): Global interrupt enable/disable bit.
0x4009B000 C   FIELD 06w01 READ_WAIT (rw): Read/wait.
0x4009B000 C   FIELD 07w01 SEND_IRQ_RESPONSE (rw): Send irq response.
0x4009B000 C   FIELD 08w01 ABORT_READ_DATA (rw): Abort read data.
0x4009B000 C   FIELD 09w01 SEND_CCSD (rw): Send ccsd.
0x4009B000 C   FIELD 10w01 SEND_AUTO_STOP_CCSD (rw): Send auto stop ccsd.
0x4009B000 C   FIELD 11w01 CEATA_DEVICE_INTERRUPT_STATUS (rw): CEATA device interrupt status.
0x4009B000 C   FIELD 16w01 CARD_VOLTAGE_A0 (rw): Controls the state of the SD_VOLT0 pin.
0x4009B000 C   FIELD 17w01 CARD_VOLTAGE_A1 (rw): Controls the state of the SD_VOLT1 pin.
0x4009B000 C   FIELD 18w01 CARD_VOLTAGE_A2 (rw): Controls the state of the SD_VOLT2 pin.
0x4009B000 C   FIELD 25w01 USE_INTERNAL_DMAC (rw): SD/MMC DMA use.
0x4009B004 B  REGISTER PWREN (rw): Power Enable register
0x4009B004 C   FIELD 00w01 POWER_ENABLE (rw): Power on/off switch for card; once power is turned on, software should wait for regulator/switch ramp-up time before trying to initialize card.
0x4009B008 B  REGISTER CLKDIV (rw): Clock Divider register
0x4009B008 C   FIELD 00w08 CLK_DIVIDER0 (rw): Clock divider-0 value.
0x4009B010 B  REGISTER CLKENA (rw): Clock Enable register
0x4009B010 C   FIELD 00w01 CCLK_ENABLE (rw): Clock-enable control for SD card clock.
0x4009B010 C   FIELD 16w01 CCLK_LOW_POWER (rw): Low-power control for SD card clock.
0x4009B014 B  REGISTER TMOUT (rw): Time-out register
0x4009B014 C   FIELD 00w08 RESPONSE_TIMEOUT (rw): Response time-out value.
0x4009B014 C   FIELD 08w24 DATA_TIMEOUT (rw): Value for card Data Read time-out; same value also used for Data Starvation by Host time-out.
0x4009B018 B  REGISTER CTYPE (rw): Card Type register
0x4009B018 C   FIELD 00w01 CARD_WIDTH0 (rw): Indicates if card is 1-bit or 4-bit: 0 - 1-bit mode 1 - 4-bit mode 1 and 4-bit modes only work when 8-bit mode in CARD_WIDTH1 is not enabled (bit 16 in this register is set to 0).
0x4009B018 C   FIELD 16w01 CARD_WIDTH1 (rw): Indicates if card is 8-bit: 0 - Non 8-bit mode 1 - 8-bit mode.
0x4009B01C B  REGISTER BLKSIZ (rw): Block Size register
0x4009B01C C   FIELD 00w16 BLOCK_SIZE (rw): Block size.
0x4009B020 B  REGISTER BYTCNT (rw): Byte Count register
0x4009B020 C   FIELD 00w32 BYTE_COUNT (rw): Number of bytes to be transferred; should be integer multiple of Block Size for block transfers.
0x4009B024 B  REGISTER INTMASK (rw): Interrupt Mask register
0x4009B024 C   FIELD 00w01 CDET (rw): Card detect.
0x4009B024 C   FIELD 01w01 RE (rw): Response error.
0x4009B024 C   FIELD 02w01 CDONE (rw): Command done.
0x4009B024 C   FIELD 03w01 DTO (rw): Data transfer over.
0x4009B024 C   FIELD 04w01 TXDR (rw): Transmit FIFO data request.
0x4009B024 C   FIELD 05w01 RXDR (rw): Receive FIFO data request.
0x4009B024 C   FIELD 06w01 RCRC (rw): Response CRC error.
0x4009B024 C   FIELD 07w01 DCRC (rw): Data CRC error.
0x4009B024 C   FIELD 08w01 RTO (rw): Response time-out.
0x4009B024 C   FIELD 09w01 DRTO (rw): Data read time-out.
0x4009B024 C   FIELD 10w01 HTO (rw): Data starvation-by-host time-out (HTO).
0x4009B024 C   FIELD 11w01 FRUN (rw): FIFO underrun/overrun error.
0x4009B024 C   FIELD 12w01 HLE (rw): Hardware locked write error.
0x4009B024 C   FIELD 13w01 SBE (rw): Start-bit error.
0x4009B024 C   FIELD 14w01 ACD (rw): Auto command done.
0x4009B024 C   FIELD 15w01 EBE (rw): End-bit error (read)/Write no CRC.
0x4009B024 C   FIELD 16w01 SDIO_INT_MASK (rw): Mask SDIO interrupt.
0x4009B028 B  REGISTER CMDARG (rw): Command Argument register
0x4009B028 C   FIELD 00w32 CMD_ARG (rw): Value indicates command argument to be passed to card.
0x4009B02C B  REGISTER CMD (rw): Command register
0x4009B02C C   FIELD 00w06 CMD_INDEX (rw): Command index.
0x4009B02C C   FIELD 06w01 RESPONSE_EXPECT (rw): Response expect.
0x4009B02C C   FIELD 07w01 RESPONSE_LENGTH (rw): Response length.
0x4009B02C C   FIELD 08w01 CHECK_RESPONSE_CRC (rw): Check response CRC.
0x4009B02C C   FIELD 09w01 DATA_EXPECTED (rw): Data expected.
0x4009B02C C   FIELD 10w01 READ_WRITE (rw): read/write.
0x4009B02C C   FIELD 11w01 TRANSFER_MODE (rw): Transfer mode.
0x4009B02C C   FIELD 12w01 SEND_AUTO_STOP (rw): Send auto stop.
0x4009B02C C   FIELD 13w01 WAIT_PRVDATA_COMPLETE (rw): Wait prvdata complete.
0x4009B02C C   FIELD 14w01 STOP_ABORT_CMD (rw): Stop abort command.
0x4009B02C C   FIELD 15w01 SEND_INITIALIZATION (rw): Send initialization.
0x4009B02C C   FIELD 21w01 UPDATE_CLOCK_REGISTERS_ONLY (rw): Update clock registers only.
0x4009B02C C   FIELD 22w01 READ_CEATA_DEVICE (rw): Read ceata device.
0x4009B02C C   FIELD 23w01 CCS_EXPECTED (rw): CCS expected.
0x4009B02C C   FIELD 24w01 ENABLE_BOOT (rw): Enable Boot - this bit should be set only for mandatory boot mode.
0x4009B02C C   FIELD 25w01 EXPECT_BOOT_ACK (rw): Expect Boot Acknowledge.
0x4009B02C C   FIELD 26w01 DISABLE_BOOT (rw): Disable Boot.
0x4009B02C C   FIELD 27w01 BOOT_MODE (rw): Boot Mode.
0x4009B02C C   FIELD 28w01 VOLT_SWITCH (rw): Voltage switch bit.
0x4009B02C C   FIELD 29w01 USE_HOLD_REG (rw): Use Hold Register.
0x4009B02C C   FIELD 31w01 START_CMD (rw): Start command.
0x4009B030 B  REGISTER RESP[0] (rw): Response register
0x4009B030 C   FIELD 00w32 RESPONSE (rw): Bits of response.
0x4009B034 B  REGISTER RESP[1] (rw): Response register
0x4009B034 C   FIELD 00w32 RESPONSE (rw): Bits of response.
0x4009B038 B  REGISTER RESP[2] (rw): Response register
0x4009B038 C   FIELD 00w32 RESPONSE (rw): Bits of response.
0x4009B03C B  REGISTER RESP[3] (rw): Response register
0x4009B03C C   FIELD 00w32 RESPONSE (rw): Bits of response.
0x4009B040 B  REGISTER MINTSTS (rw): Masked Interrupt Status register
0x4009B040 C   FIELD 00w01 CDET (rw): Card detect.
0x4009B040 C   FIELD 01w01 RE (rw): Response error.
0x4009B040 C   FIELD 02w01 CDONE (rw): Command done.
0x4009B040 C   FIELD 03w01 DTO (rw): Data transfer over.
0x4009B040 C   FIELD 04w01 TXDR (rw): Transmit FIFO data request.
0x4009B040 C   FIELD 05w01 RXDR (rw): Receive FIFO data request.
0x4009B040 C   FIELD 06w01 RCRC (rw): Response CRC error.
0x4009B040 C   FIELD 07w01 DCRC (rw): Data CRC error.
0x4009B040 C   FIELD 08w01 RTO (rw): Response time-out.
0x4009B040 C   FIELD 09w01 DRTO (rw): Data read time-out.
0x4009B040 C   FIELD 10w01 HTO (rw): Data starvation-by-host time-out (HTO).
0x4009B040 C   FIELD 11w01 FRUN (rw): FIFO underrun/overrun error.
0x4009B040 C   FIELD 12w01 HLE (rw): Hardware locked write error.
0x4009B040 C   FIELD 13w01 SBE (rw): Start-bit error.
0x4009B040 C   FIELD 14w01 ACD (rw): Auto command done.
0x4009B040 C   FIELD 15w01 EBE (rw): End-bit error (read)/write no CRC.
0x4009B040 C   FIELD 16w01 SDIO_INTERRUPT (rw): Interrupt from SDIO card.
0x4009B044 B  REGISTER RINTSTS (rw): Raw Interrupt Status register
0x4009B044 C   FIELD 00w01 CDET (rw): Card detect.
0x4009B044 C   FIELD 01w01 RE (rw): Response error.
0x4009B044 C   FIELD 02w01 CDONE (rw): Command done.
0x4009B044 C   FIELD 03w01 DTO (rw): Data transfer over.
0x4009B044 C   FIELD 04w01 TXDR (rw): Transmit FIFO data request.
0x4009B044 C   FIELD 05w01 RXDR (rw): Receive FIFO data request.
0x4009B044 C   FIELD 06w01 RCRC (rw): Response CRC error.
0x4009B044 C   FIELD 07w01 DCRC (rw): Data CRC error.
0x4009B044 C   FIELD 08w01 RTO_BAR (rw): Response time-out (RTO)/Boot Ack Received (BAR).
0x4009B044 C   FIELD 09w01 DRTO_BDS (rw): Data read time-out (DRTO)/Boot Data Start (BDS).
0x4009B044 C   FIELD 10w01 HTO (rw): Data starvation-by-host time-out (HTO).
0x4009B044 C   FIELD 11w01 FRUN (rw): FIFO underrun/overrun error.
0x4009B044 C   FIELD 12w01 HLE (rw): Hardware locked write error.
0x4009B044 C   FIELD 13w01 SBE (rw): Start-bit error.
0x4009B044 C   FIELD 14w01 ACD (rw): Auto command done.
0x4009B044 C   FIELD 15w01 EBE (rw): End-bit error (read)/write no CRC.
0x4009B044 C   FIELD 16w01 SDIO_INTERRUPT (rw): Interrupt from SDIO card.
0x4009B048 B  REGISTER STATUS (rw): Status register
0x4009B048 C   FIELD 00w01 FIFO_RX_WATERMARK (rw): FIFO reached Receive watermark level; not qualified with data transfer.
0x4009B048 C   FIELD 01w01 FIFO_TX_WATERMARK (rw): FIFO reached Transmit watermark level; not qualified with data transfer.
0x4009B048 C   FIELD 02w01 FIFO_EMPTY (rw): FIFO is empty status.
0x4009B048 C   FIELD 03w01 FIFO_FULL (rw): FIFO is full status.
0x4009B048 C   FIELD 04w04 CMDFSMSTATES (rw): Command FSM states: 0 - Idle 1 - Send init sequence 2 - Tx cmd start bit 3 - Tx cmd tx bit 4 - Tx cmd index + arg 5 - Tx cmd crc7 6 - Tx cmd end bit 7 - Rx resp start bit 8 - Rx resp IRQ response 9 - Rx resp tx bit 10 - Rx resp cmd idx 11 - Rx resp data 12 - Rx resp crc7 13 - Rx resp end bit 14 - Cmd path wait NCC 15 - Wait; CMD-to-response turnaround NOTE: The command FSM state is represented using 19 bits.
0x4009B048 C   FIELD 08w01 DATA_3_STATUS (rw): Raw selected card_data[3]; checks whether card is present 0 - card not present 1 - card present.
0x4009B048 C   FIELD 09w01 DATA_BUSY (rw): Inverted version of raw selected card_data[0] 0 - card data not busy 1 - card data busy.
0x4009B048 C   FIELD 10w01 DATA_STATE_MC_BUSY (rw): Data transmit or receive state-machine is busy.
0x4009B048 C   FIELD 11w06 RESPONSE_INDEX (rw): Index of previous response, including any auto-stop sent by core.
0x4009B048 C   FIELD 17w13 FIFO_COUNT (rw): FIFO count - Number of filled locations in FIFO.
0x4009B048 C   FIELD 30w01 DMA_ACK (rw): DMA acknowledge signal state.
0x4009B048 C   FIELD 31w01 DMA_REQ (rw): DMA request signal state.
0x4009B04C B  REGISTER FIFOTH (rw): FIFO Threshold Watermark register
0x4009B04C C   FIELD 00w12 TX_WMARK (rw): FIFO threshold watermark level when transmitting data to card.
0x4009B04C C   FIELD 16w12 RX_WMARK (rw): FIFO threshold watermark level when receiving data to card.
0x4009B04C C   FIELD 28w03 DMA_MTS (rw): Burst size of multiple transaction; should be programmed same as DW-DMA controller multiple-transaction-size SRC/DEST_MSIZE.
0x4009B050 B  REGISTER CDETECT (rw): Card Detect register
0x4009B050 C   FIELD 00w01 CARD_DETECT (rw): Card detect.
0x4009B054 B  REGISTER WRTPRT (rw): Write Protect register
0x4009B054 C   FIELD 00w01 WRITE_PROTECT (rw): Write protect.
0x4009B05C B  REGISTER TCBCNT (rw): Transferred CIU Card Byte Count register
0x4009B05C C   FIELD 00w32 TRANS_CARD_BYTE_COUNT (rw): Number of bytes transferred by CIU unit to card.
0x4009B060 B  REGISTER TBBCNT (rw): Transferred Host to BIU-FIFO Byte Count register
0x4009B060 C   FIELD 00w32 TRANS_FIFO_BYTE_COUNT (rw): Number of bytes transferred between Host/DMA memory and BIU FIFO.
0x4009B064 B  REGISTER DEBNCE (rw): Debounce Count register
0x4009B064 C   FIELD 00w24 DEBOUNCE_COUNT (rw): Number of host clocks (SD_CLK) used by debounce filter logic for card detect; typical debounce time is 5-25 ms.
0x4009B078 B  REGISTER RST_N (rw): Hardware Reset
0x4009B078 C   FIELD 00w01 CARD_RESET (rw): Hardware reset.
0x4009B080 B  REGISTER BMOD (rw): Bus Mode register
0x4009B080 C   FIELD 00w01 SWR (rw): Software Reset.
0x4009B080 C   FIELD 01w01 FB (rw): Fixed Burst.
0x4009B080 C   FIELD 02w05 DSL (rw): Descriptor Skip Length.
0x4009B080 C   FIELD 07w01 DE (rw): SD/MMC DMA Enable.
0x4009B080 C   FIELD 08w03 PBL (rw): Programmable Burst Length.
0x4009B084 B  REGISTER PLDMND (rw): Poll Demand register
0x4009B084 C   FIELD 00w32 PD (rw): Poll Demand.
0x4009B088 B  REGISTER DBADDR (rw): Descriptor List Base Address register
0x4009B088 C   FIELD 00w32 SDL (rw): Start of Descriptor List.
0x4009B08C B  REGISTER IDSTS (rw): Internal DMAC Status register
0x4009B08C C   FIELD 00w01 TI (rw): Transmit Interrupt.
0x4009B08C C   FIELD 01w01 RI (rw): Receive Interrupt.
0x4009B08C C   FIELD 02w01 FBE (rw): Fatal Bus Error Interrupt.
0x4009B08C C   FIELD 04w01 DU (rw): Descriptor Unavailable Interrupt.
0x4009B08C C   FIELD 05w01 CES (rw): Card Error Summary.
0x4009B08C C   FIELD 08w01 NIS (rw): Normal Interrupt Summary.
0x4009B08C C   FIELD 09w01 AIS (rw): Abnormal Interrupt Summary.
0x4009B08C C   FIELD 10w03 EB (rw): Error Bits.
0x4009B08C C   FIELD 13w04 FSM (rw): DMAC state machine present state.
0x4009B090 B  REGISTER IDINTEN (rw): Internal DMAC Interrupt Enable register
0x4009B090 C   FIELD 00w01 TI (rw): Transmit Interrupt Enable.
0x4009B090 C   FIELD 01w01 RI (rw): Receive Interrupt Enable.
0x4009B090 C   FIELD 02w01 FBE (rw): Fatal Bus Error Enable.
0x4009B090 C   FIELD 04w01 DU (rw): Descriptor Unavailable Interrupt.
0x4009B090 C   FIELD 05w01 CES (rw): Card Error summary Interrupt Enable.
0x4009B090 C   FIELD 08w01 NIS (rw): Normal Interrupt Summary Enable.
0x4009B090 C   FIELD 09w01 AIS (rw): Abnormal Interrupt Summary Enable.
0x4009B094 B  REGISTER DSCADDR (rw): Current Host Descriptor Address register
0x4009B094 C   FIELD 00w32 HDA (rw): Host Descriptor Address Pointer.
0x4009B098 B  REGISTER BUFADDR (rw): Current Buffer Descriptor Address register
0x4009B098 C   FIELD 00w32 HBA (rw): Host Buffer Address Pointer.
0x4009B100 B  REGISTER CARDTHRCTL (rw): Card Threshold Control
0x4009B100 C   FIELD 00w01 CARDRDTHREN (rw): Card Read Threshold Enable.
0x4009B100 C   FIELD 01w01 BSYCLRINTEN (rw): Busy Clear Interrupt Enable.
0x4009B100 C   FIELD 16w08 CARDTHRESHOLD (rw): Card Threshold size.
0x4009B104 B  REGISTER BACKENDPWR (rw): Power control
0x4009B104 C   FIELD 00w01 BACKENDPWR (rw): Back-end Power control for card application.
0x4009B200 B  REGISTER FIFO[0] (rw): SDIF FIFO
0x4009B200 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B204 B  REGISTER FIFO[1] (rw): SDIF FIFO
0x4009B204 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B208 B  REGISTER FIFO[2] (rw): SDIF FIFO
0x4009B208 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B20C B  REGISTER FIFO[3] (rw): SDIF FIFO
0x4009B20C C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B210 B  REGISTER FIFO[4] (rw): SDIF FIFO
0x4009B210 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B214 B  REGISTER FIFO[5] (rw): SDIF FIFO
0x4009B214 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B218 B  REGISTER FIFO[6] (rw): SDIF FIFO
0x4009B218 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B21C B  REGISTER FIFO[7] (rw): SDIF FIFO
0x4009B21C C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B220 B  REGISTER FIFO[8] (rw): SDIF FIFO
0x4009B220 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B224 B  REGISTER FIFO[9] (rw): SDIF FIFO
0x4009B224 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B228 B  REGISTER FIFO[10] (rw): SDIF FIFO
0x4009B228 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B22C B  REGISTER FIFO[11] (rw): SDIF FIFO
0x4009B22C C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B230 B  REGISTER FIFO[12] (rw): SDIF FIFO
0x4009B230 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B234 B  REGISTER FIFO[13] (rw): SDIF FIFO
0x4009B234 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B238 B  REGISTER FIFO[14] (rw): SDIF FIFO
0x4009B238 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B23C B  REGISTER FIFO[15] (rw): SDIF FIFO
0x4009B23C C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B240 B  REGISTER FIFO[16] (rw): SDIF FIFO
0x4009B240 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B244 B  REGISTER FIFO[17] (rw): SDIF FIFO
0x4009B244 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B248 B  REGISTER FIFO[18] (rw): SDIF FIFO
0x4009B248 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B24C B  REGISTER FIFO[19] (rw): SDIF FIFO
0x4009B24C C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B250 B  REGISTER FIFO[20] (rw): SDIF FIFO
0x4009B250 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B254 B  REGISTER FIFO[21] (rw): SDIF FIFO
0x4009B254 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B258 B  REGISTER FIFO[22] (rw): SDIF FIFO
0x4009B258 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B25C B  REGISTER FIFO[23] (rw): SDIF FIFO
0x4009B25C C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B260 B  REGISTER FIFO[24] (rw): SDIF FIFO
0x4009B260 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B264 B  REGISTER FIFO[25] (rw): SDIF FIFO
0x4009B264 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B268 B  REGISTER FIFO[26] (rw): SDIF FIFO
0x4009B268 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B26C B  REGISTER FIFO[27] (rw): SDIF FIFO
0x4009B26C C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B270 B  REGISTER FIFO[28] (rw): SDIF FIFO
0x4009B270 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B274 B  REGISTER FIFO[29] (rw): SDIF FIFO
0x4009B274 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B278 B  REGISTER FIFO[30] (rw): SDIF FIFO
0x4009B278 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B27C B  REGISTER FIFO[31] (rw): SDIF FIFO
0x4009B27C C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B280 B  REGISTER FIFO[32] (rw): SDIF FIFO
0x4009B280 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B284 B  REGISTER FIFO[33] (rw): SDIF FIFO
0x4009B284 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B288 B  REGISTER FIFO[34] (rw): SDIF FIFO
0x4009B288 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B28C B  REGISTER FIFO[35] (rw): SDIF FIFO
0x4009B28C C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B290 B  REGISTER FIFO[36] (rw): SDIF FIFO
0x4009B290 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B294 B  REGISTER FIFO[37] (rw): SDIF FIFO
0x4009B294 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B298 B  REGISTER FIFO[38] (rw): SDIF FIFO
0x4009B298 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B29C B  REGISTER FIFO[39] (rw): SDIF FIFO
0x4009B29C C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2A0 B  REGISTER FIFO[40] (rw): SDIF FIFO
0x4009B2A0 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2A4 B  REGISTER FIFO[41] (rw): SDIF FIFO
0x4009B2A4 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2A8 B  REGISTER FIFO[42] (rw): SDIF FIFO
0x4009B2A8 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2AC B  REGISTER FIFO[43] (rw): SDIF FIFO
0x4009B2AC C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2B0 B  REGISTER FIFO[44] (rw): SDIF FIFO
0x4009B2B0 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2B4 B  REGISTER FIFO[45] (rw): SDIF FIFO
0x4009B2B4 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2B8 B  REGISTER FIFO[46] (rw): SDIF FIFO
0x4009B2B8 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2BC B  REGISTER FIFO[47] (rw): SDIF FIFO
0x4009B2BC C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2C0 B  REGISTER FIFO[48] (rw): SDIF FIFO
0x4009B2C0 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2C4 B  REGISTER FIFO[49] (rw): SDIF FIFO
0x4009B2C4 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2C8 B  REGISTER FIFO[50] (rw): SDIF FIFO
0x4009B2C8 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2CC B  REGISTER FIFO[51] (rw): SDIF FIFO
0x4009B2CC C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2D0 B  REGISTER FIFO[52] (rw): SDIF FIFO
0x4009B2D0 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2D4 B  REGISTER FIFO[53] (rw): SDIF FIFO
0x4009B2D4 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2D8 B  REGISTER FIFO[54] (rw): SDIF FIFO
0x4009B2D8 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2DC B  REGISTER FIFO[55] (rw): SDIF FIFO
0x4009B2DC C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2E0 B  REGISTER FIFO[56] (rw): SDIF FIFO
0x4009B2E0 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2E4 B  REGISTER FIFO[57] (rw): SDIF FIFO
0x4009B2E4 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2E8 B  REGISTER FIFO[58] (rw): SDIF FIFO
0x4009B2E8 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2EC B  REGISTER FIFO[59] (rw): SDIF FIFO
0x4009B2EC C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2F0 B  REGISTER FIFO[60] (rw): SDIF FIFO
0x4009B2F0 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2F4 B  REGISTER FIFO[61] (rw): SDIF FIFO
0x4009B2F4 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2F8 B  REGISTER FIFO[62] (rw): SDIF FIFO
0x4009B2F8 C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009B2FC B  REGISTER FIFO[63] (rw): SDIF FIFO
0x4009B2FC C   FIELD 00w32 DATA (rw): SDIF FIFO.
0x4009D000 A PERIPHERAL CAN0
0x4009D010 B  REGISTER TEST (rw): Test Register
0x4009D010 C   FIELD 04w01 LBCK (rw): Loop back mode.
0x4009D010 C   FIELD 05w02 TX (rw): Control of transmit pin.
0x4009D010 C   FIELD 07w01 RX (rw): Monitors the actual value of the CAN_RXD.
0x4009D018 B  REGISTER CCCR (rw): CC Control Register
0x4009D018 C   FIELD 00w01 INIT (rw): Initialization.
0x4009D018 C   FIELD 01w01 CCE (rw): Configuration change enable.
0x4009D018 C   FIELD 02w01 ASM (rw): Restricted operational mode.
0x4009D018 C   FIELD 03w01 CSA (rw): Clock Stop Acknowledge.
0x4009D018 C   FIELD 04w01 CSR (rw): Clock Stop Request.
0x4009D018 C   FIELD 05w01 MON (rw): Bus monitoring mode.
0x4009D018 C   FIELD 06w01 DAR (rw): Disable automatic retransmission.
0x4009D018 C   FIELD 07w01 TEST (rw): Test mode enable.
0x4009D018 C   FIELD 12w01 PXHD (rw): Protocol exception handling disable.
0x4009D018 C   FIELD 13w01 EFBI (rw): Edge filtering during bus integration.
0x4009D018 C   FIELD 14w01 TXP (rw): Transmit pause.
0x4009D01C B  REGISTER NBTP (rw): Nominal Bit Timing and Prescaler Register
0x4009D01C C   FIELD 00w07 NTSEG2 (rw): Nominal time segment after sample point.
0x4009D01C C   FIELD 08w08 NTSEG1 (rw): Nominal time segment before sample point.
0x4009D01C C   FIELD 16w09 NBRP (rw): Nominal bit rate prescaler.
0x4009D01C C   FIELD 25w07 NSJW (rw): Nominal (re)synchronization jump width.
0x4009D020 B  REGISTER TSCC (rw): Timestamp Counter Configuration
0x4009D020 C   FIELD 00w02 TSS (rw): Timestamp select.
0x4009D020 C   FIELD 16w04 TCP (rw): Timestamp counter prescaler Configures the timestamp and timeout counters time unit in multiple of CAN bit times.
0x4009D024 B  REGISTER TSCV (rw): Timestamp Counter Value
0x4009D024 C   FIELD 00w16 TSC (rw): Timestamp counter.
0x4009D028 B  REGISTER TOCC (rw): Timeout Counter Configuration
0x4009D028 C   FIELD 00w01 ETOC (rw): Enable timeout counter.
0x4009D028 C   FIELD 01w02 TOS (rw): Timeout select.
0x4009D028 C   FIELD 16w16 TOP (rw): Timeout period.
0x4009D02C B  REGISTER TOCV (ro): Timeout Counter Value
0x4009D02C C   FIELD 00w16 TOC (ro): Timeout counter.
0x4009D040 B  REGISTER ECR (ro): Error Counter Register
0x4009D040 C   FIELD 00w08 TEC (ro): Transmit error counter.
0x4009D040 C   FIELD 08w07 REC (ro): Receive error counter.
0x4009D040 C   FIELD 15w01 RP (ro): Receive error passive.
0x4009D040 C   FIELD 16w08 CEL (ro): CAN error logging.
0x4009D044 B  REGISTER PSR (ro): Protocol Status Register
0x4009D044 C   FIELD 00w03 LEC (ro): Last error code.
0x4009D044 C   FIELD 03w02 ACT (ro): Activity.
0x4009D044 C   FIELD 05w01 EP (ro): Error Passive.
0x4009D044 C   FIELD 06w01 EW (ro): Warning status.
0x4009D044 C   FIELD 07w01 BO (ro): Bus Off Status.
0x4009D044 C   FIELD 14w01 PXE (ro): Protocol exception event.
0x4009D044 C   FIELD 16w07 TDCV (ro): Transmitter delay compensation value.
0x4009D048 B  REGISTER TDCR (rw): Transmitter Delay Compensator Register
0x4009D048 C   FIELD 00w07 TDCF (rw): Transmitter delay compensation filter window length.
0x4009D048 C   FIELD 08w07 TDCO (rw): Transmitter delay compensation offset.
0x4009D050 B  REGISTER IR (rw): Interrupt Register
0x4009D050 C   FIELD 00w01 RF0N (rw): Rx FIFO 0 new message.
0x4009D050 C   FIELD 01w01 RF0W (rw): Rx FIFO 0 watermark reached.
0x4009D050 C   FIELD 02w01 RF0F (rw): Rx FIFO 0 full.
0x4009D050 C   FIELD 03w01 RF0L (rw): Rx FIFO 0 message lost.
0x4009D050 C   FIELD 04w01 RF1N (rw): Rx FIFO 1 new message.
0x4009D050 C   FIELD 05w01 RF1W (rw): Rx FIFO 1 watermark reached.
0x4009D050 C   FIELD 06w01 RF1F (rw): Rx FIFO 1 full.
0x4009D050 C   FIELD 07w01 RF1L (rw): Rx FIFO 1 message lost.
0x4009D050 C   FIELD 08w01 HPM (rw): High priority message.
0x4009D050 C   FIELD 09w01 TC (rw): Transmission completed.
0x4009D050 C   FIELD 10w01 TCF (rw): Transmission cancellation finished.
0x4009D050 C   FIELD 11w01 TFE (rw): Tx FIFO empty.
0x4009D050 C   FIELD 12w01 TEFN (rw): Tx event FIFO new entry.
0x4009D050 C   FIELD 13w01 TEFW (rw): Tx event FIFO watermark reached.
0x4009D050 C   FIELD 14w01 TEFF (rw): Tx event FIFO full.
0x4009D050 C   FIELD 15w01 TEFL (rw): Tx event FIFO element lost.
0x4009D050 C   FIELD 16w01 TSW (rw): Timestamp wraparound.
0x4009D050 C   FIELD 17w01 MRAF (rw): Message RAM access failure.
0x4009D050 C   FIELD 18w01 TOO (rw): Timeout occurred.
0x4009D050 C   FIELD 19w01 DRX (rw): Message stored in dedicated Rx buffer.
0x4009D050 C   FIELD 20w01 BEC (rw): Bit error corrected.
0x4009D050 C   FIELD 21w01 BEU (rw): Bit error uncorrected.
0x4009D050 C   FIELD 22w01 ELO (rw): Error logging overflow.
0x4009D050 C   FIELD 23w01 EP (rw): Error passive.
0x4009D050 C   FIELD 24w01 EW (rw): Warning status.
0x4009D050 C   FIELD 25w01 BO (rw): Bus_Off Status.
0x4009D050 C   FIELD 26w01 WDI (rw): Watchdog interrupt.
0x4009D050 C   FIELD 27w01 PEA (rw): Protocol error in arbitration phase.
0x4009D050 C   FIELD 28w01 PED (rw): Protocol error in data phase.
0x4009D050 C   FIELD 29w01 ARA (rw): Access to reserved address.
0x4009D054 B  REGISTER IE (rw): Interrupt Enable
0x4009D054 C   FIELD 00w01 RF0NE (rw): Rx FIFO 0 new message interrupt enable.
0x4009D054 C   FIELD 01w01 RF0WE (rw): Rx FIFO 0 watermark reached interrupt enable.
0x4009D054 C   FIELD 02w01 RF0FE (rw): Rx FIFO 0 full interrupt enable.
0x4009D054 C   FIELD 03w01 RF0LE (rw): Rx FIFO 0 message lost interrupt enable.
0x4009D054 C   FIELD 04w01 RF1NE (rw): Rx FIFO 1 new message interrupt enable.
0x4009D054 C   FIELD 05w01 RF1WE (rw): Rx FIFO 1 watermark reached interrupt enable.
0x4009D054 C   FIELD 06w01 RF1FE (rw): Rx FIFO 1 full interrupt enable.
0x4009D054 C   FIELD 07w01 RF1LE (rw): Rx FIFO 1 message lost interrupt enable.
0x4009D054 C   FIELD 08w01 HPME (rw): High priority message interrupt enable.
0x4009D054 C   FIELD 09w01 TCE (rw): Transmission completed interrupt enable.
0x4009D054 C   FIELD 10w01 TCFE (rw): Transmission cancellation finished interrupt enable.
0x4009D054 C   FIELD 11w01 TFEE (rw): Tx FIFO empty interrupt enable.
0x4009D054 C   FIELD 12w01 TEFNE (rw): Tx event FIFO new entry interrupt enable.
0x4009D054 C   FIELD 13w01 TEFWE (rw): Tx event FIFO watermark reached interrupt enable.
0x4009D054 C   FIELD 14w01 TEFFE (rw): Tx event FIFO full interrupt enable.
0x4009D054 C   FIELD 15w01 TEFLE (rw): Tx event FIFO element lost interrupt enable.
0x4009D054 C   FIELD 16w01 TSWE (rw): Timestamp wraparound interrupt enable.
0x4009D054 C   FIELD 17w01 MRAFE (rw): Message RAM access failure interrupt enable.
0x4009D054 C   FIELD 18w01 TOOE (rw): Timeout occurred interrupt enable.
0x4009D054 C   FIELD 19w01 DRXE (rw): Message stored in dedicated Rx buffer interrupt enable.
0x4009D054 C   FIELD 20w01 BECE (rw): Bit error corrected interrupt enable.
0x4009D054 C   FIELD 21w01 BEUE (rw): Bit error uncorrected interrupt enable.
0x4009D054 C   FIELD 22w01 ELOE (rw): Error logging overflow interrupt enable.
0x4009D054 C   FIELD 23w01 EPE (rw): Error passive interrupt enable.
0x4009D054 C   FIELD 24w01 EWE (rw): Warning status interrupt enable.
0x4009D054 C   FIELD 25w01 BOE (rw): Bus_Off Status interrupt enable.
0x4009D054 C   FIELD 26w01 WDIE (rw): Watchdog interrupt enable.
0x4009D054 C   FIELD 27w01 PEAE (rw): Protocol error in arbitration phase interrupt enable.
0x4009D054 C   FIELD 28w01 PEDE (rw): Protocol error in data phase interrupt enable.
0x4009D054 C   FIELD 29w01 ARAE (rw): Access to reserved address interrupt enable.
0x4009D058 B  REGISTER ILS (rw): Interrupt Line Select
0x4009D058 C   FIELD 00w01 RF0NL (rw): Rx FIFO 0 new message interrupt line.
0x4009D058 C   FIELD 01w01 RF0WL (rw): Rx FIFO 0 watermark reached interrupt line.
0x4009D058 C   FIELD 02w01 RF0FL (rw): Rx FIFO 0 full interrupt line.
0x4009D058 C   FIELD 03w01 RF0LL (rw): Rx FIFO 0 message lost interrupt line.
0x4009D058 C   FIELD 04w01 RF1NL (rw): Rx FIFO 1 new message interrupt line.
0x4009D058 C   FIELD 05w01 RF1WL (rw): Rx FIFO 1 watermark reached interrupt line.
0x4009D058 C   FIELD 06w01 RF1FL (rw): Rx FIFO 1 full interrupt line.
0x4009D058 C   FIELD 07w01 RF1LL (rw): Rx FIFO 1 message lost interrupt line.
0x4009D058 C   FIELD 08w01 HPML (rw): High priority message interrupt line.
0x4009D058 C   FIELD 09w01 TCL (rw): Transmission completed interrupt line.
0x4009D058 C   FIELD 10w01 TCFL (rw): Transmission cancellation finished interrupt line.
0x4009D058 C   FIELD 11w01 TFEL (rw): Tx FIFO empty interrupt line.
0x4009D058 C   FIELD 12w01 TEFNL (rw): Tx event FIFO new entry interrupt line.
0x4009D058 C   FIELD 13w01 TEFWL (rw): Tx event FIFO watermark reached interrupt line.
0x4009D058 C   FIELD 14w01 TEFFL (rw): Tx event FIFO full interrupt line.
0x4009D058 C   FIELD 15w01 TEFLL (rw): Tx event FIFO element lost interrupt line.
0x4009D058 C   FIELD 16w01 TSWL (rw): Timestamp wraparound interrupt line.
0x4009D058 C   FIELD 17w01 MRAFL (rw): Message RAM access failure interrupt line.
0x4009D058 C   FIELD 18w01 TOOL (rw): Timeout occurred interrupt line.
0x4009D058 C   FIELD 19w01 DRXL (rw): Message stored in dedicated Rx buffer interrupt line.
0x4009D058 C   FIELD 20w01 BECL (rw): Bit error corrected interrupt line.
0x4009D058 C   FIELD 21w01 BEUL (rw): Bit error uncorrected interrupt line.
0x4009D058 C   FIELD 22w01 ELOL (rw): Error logging overflow interrupt line.
0x4009D058 C   FIELD 23w01 EPL (rw): Error passive interrupt line.
0x4009D058 C   FIELD 24w01 EWL (rw): Warning status interrupt line.
0x4009D058 C   FIELD 25w01 BOL (rw): Bus_Off Status interrupt line.
0x4009D058 C   FIELD 26w01 WDIL (rw): Watchdog interrupt line.
0x4009D058 C   FIELD 27w01 PEAL (rw): Protocol error in arbitration phase interrupt line.
0x4009D058 C   FIELD 28w01 PEDL (rw): Protocol error in data phase interrupt line.
0x4009D058 C   FIELD 29w01 ARAL (rw): Access to reserved address interrupt line.
0x4009D05C B  REGISTER ILE (rw): Interrupt Line Enable
0x4009D05C C   FIELD 00w01 EINT0 (rw): Enable interrupt line 0.
0x4009D05C C   FIELD 01w01 EINT1 (rw): Enable interrupt line 1.
0x4009D080 B  REGISTER GFC (rw): Global Filter Configuration
0x4009D080 C   FIELD 00w01 RRFE (rw): Reject remote frames extended.
0x4009D080 C   FIELD 01w01 RRFS (rw): Reject remote frames standard.
0x4009D080 C   FIELD 02w02 ANFE (rw): Accept non-matching frames extended.
0x4009D080 C   FIELD 04w02 ANFS (rw): Accept non-matching frames standard.
0x4009D084 B  REGISTER SIDFC (rw): Standard ID Filter Configuration
0x4009D084 C   FIELD 02w14 FLSSA (rw): Filter list standard start address.
0x4009D084 C   FIELD 16w08 LSS (rw): List size standard 0 = No standard message ID filter.
0x4009D088 B  REGISTER XIDFC (rw): Extended ID Filter Configuration
0x4009D088 C   FIELD 02w14 FLESA (rw): Filter list extended start address.
0x4009D088 C   FIELD 16w08 LSE (rw): List size extended 0 = No extended message ID filter.
0x4009D090 B  REGISTER XIDAM (rw): Extended ID AND Mask
0x4009D090 C   FIELD 00w29 EIDM (rw): Extended ID mask.
0x4009D094 B  REGISTER HPMS (ro): High Priority Message Status
0x4009D094 C   FIELD 00w06 BIDX (ro): Buffer index.
0x4009D094 C   FIELD 06w02 MSI (ro): Message storage indicator.
0x4009D094 C   FIELD 08w07 FIDX (ro): Filter index.
0x4009D094 C   FIELD 15w01 FLST (ro): Filter list.
0x4009D098 B  REGISTER NDAT1 (rw): New Data 1
0x4009D098 C   FIELD 00w32 ND (rw): New Data.
0x4009D09C B  REGISTER NDAT2 (rw): New Data 2
0x4009D09C C   FIELD 00w32 ND (rw): New Data.
0x4009D0A0 B  REGISTER RXF0C (rw): Rx FIFO 0 Configuration
0x4009D0A0 C   FIELD 02w14 F0SA (rw): Rx FIFO 0 start address.
0x4009D0A0 C   FIELD 16w07 F0S (rw): Rx FIFO 0 size.
0x4009D0A0 C   FIELD 24w07 F0WM (rw): Rx FIFO 0 watermark 0 = Watermark interrupt disabled.
0x4009D0A0 C   FIELD 31w01 F0OM (rw): FIFO 0 operation mode.
0x4009D0A4 B  REGISTER RXF0S (rw): Rx FIFO 0 Status
0x4009D0A4 C   FIELD 00w07 F0FL (rw): Rx FIFO 0 fill level.
0x4009D0A4 C   FIELD 08w06 F0GI (rw): Rx FIFO 0 get index.
0x4009D0A4 C   FIELD 16w06 F0PI (rw): Rx FIFO 0 put index.
0x4009D0A4 C   FIELD 24w01 F0F (rw): Rx FIFO 0 full.
0x4009D0A4 C   FIELD 25w01 RF0L (rw): Rx FIFO 0 message lost.
0x4009D0A8 B  REGISTER RXF0A (rw): Rx FIFO 0 Acknowledge
0x4009D0A8 C   FIELD 00w06 F0AI (rw): Rx FIFO 0 acknowledge index.
0x4009D0AC B  REGISTER RXBC (rw): Rx Buffer Configuration
0x4009D0AC C   FIELD 02w14 RBSA (rw): Rx buffer start address.
0x4009D0B0 B  REGISTER RXF1C (rw): Rx FIFO 1 Configuration
0x4009D0B0 C   FIELD 02w14 F1SA (rw): Rx FIFO 1 start address.
0x4009D0B0 C   FIELD 16w07 F1S (rw): Rx FIFO 1 size 0 = No Rx FIFO 1.
0x4009D0B0 C   FIELD 24w07 F1WM (rw): Rx FIFO 1 watermark 0 = Watermark interrupt disabled.
0x4009D0B0 C   FIELD 31w01 F1OM (rw): FIFO 1 operation mode.
0x4009D0B4 B  REGISTER RXF1S (ro): Rx FIFO 1 Status
0x4009D0B4 C   FIELD 00w07 F1FL (ro): Rx FIFO 1 fill level.
0x4009D0B4 C   FIELD 08w06 F1GI (ro): Rx FIFO 1 get index.
0x4009D0B4 C   FIELD 16w06 F1PI (ro): Rx FIFO 1 put index.
0x4009D0B4 C   FIELD 24w01 F1F (ro): Rx FIFO 1 full.
0x4009D0B4 C   FIELD 25w01 RF1L (ro): Rx FIFO 1 message lost.
0x4009D0B8 B  REGISTER RXF1A (rw): Rx FIFO 1 Acknowledge
0x4009D0B8 C   FIELD 00w06 F1AI (rw): Rx FIFO 1 acknowledge index.
0x4009D0BC B  REGISTER RXESC (rw): Rx Buffer and FIFO Element Size Configuration
0x4009D0BC C   FIELD 00w03 F0DS (rw): Rx FIFO 0 data field size.
0x4009D0BC C   FIELD 04w03 F1DS (rw): Rx FIFO 1 data field size.
0x4009D0BC C   FIELD 08w03 RBDS (rw): .
0x4009D0C0 B  REGISTER TXBC (rw): Tx Buffer Configuration
0x4009D0C0 C   FIELD 02w14 TBSA (rw): Tx buffers start address.
0x4009D0C0 C   FIELD 16w06 NDTB (rw): Number of dedicated transmit buffers 0 = No dedicated Tx buffers.
0x4009D0C0 C   FIELD 24w06 TFQS (rw): Transmit FIFO/queue size 0 = No tx FIFO/Queue.
0x4009D0C0 C   FIELD 30w01 TFQM (rw): Tx FIFO/queue mode.
0x4009D0C4 B  REGISTER TXFQS (rw): Tx FIFO/Queue Status
0x4009D0C4 C   FIELD 08w05 TFGI (rw): Tx FIFO get index.
0x4009D0C4 C   FIELD 16w05 TFQPI (rw): Tx FIFO/queue put index.
0x4009D0C4 C   FIELD 21w01 TFQF (rw): Tx FIFO/queue full.
0x4009D0C8 B  REGISTER TXESC (rw): Tx Buffer Element Size Configuration
0x4009D0C8 C   FIELD 00w03 TBDS (rw): Tx buffer data field size.
0x4009D0CC B  REGISTER TXBRP (rw): Tx Buffer Request Pending
0x4009D0CC C   FIELD 00w32 TRP (rw): Transmission request pending.
0x4009D0D0 B  REGISTER TXBAR (rw): Tx Buffer Add Request
0x4009D0D0 C   FIELD 00w32 AR (rw): Add request.
0x4009D0D4 B  REGISTER TXBCR (rw): Tx Buffer Cancellation Request
0x4009D0D4 C   FIELD 00w32 CR (rw): Cancellation request.
0x4009D0D8 B  REGISTER TXBTO (rw): Tx Buffer Transmission Occurred
0x4009D0D8 C   FIELD 00w32 TO (rw): Transmission occurred.
0x4009D0DC B  REGISTER TXBCF (rw): Tx Buffer Cancellation Finished
0x4009D0DC C   FIELD 00w32 TO (rw): Cancellation finished.
0x4009D0E0 B  REGISTER TXBTIE (rw): Tx Buffer Transmission Interrupt Enable
0x4009D0E0 C   FIELD 00w32 TIE (rw): Transmission interrupt enable.
0x4009D0E4 B  REGISTER TXBCIE (rw): Tx Buffer Cancellation Finished Interrupt Enable
0x4009D0E4 C   FIELD 00w32 CFIE (rw): Cancellation finished interrupt enable.
0x4009D0F0 B  REGISTER TXEFC (rw): Tx Event FIFO Configuration
0x4009D0F0 C   FIELD 02w14 EFSA (rw): Event FIFO start address.
0x4009D0F0 C   FIELD 16w06 EFS (rw): Event FIFO size 0 = Tx event FIFO disabled.
0x4009D0F0 C   FIELD 24w06 EFWM (rw): Event FIFO watermark 0 = Watermark interrupt disabled.
0x4009D0F4 B  REGISTER TXEFS (ro): Tx Event FIFO Status
0x4009D0F4 C   FIELD 00w06 EFFL (ro): Event FIFO fill level.
0x4009D0F4 C   FIELD 08w05 EFGI (ro): Event FIFO get index.
0x4009D0F4 C   FIELD 16w06 EFPI (ro): Event FIFO put index.
0x4009D0F4 C   FIELD 24w01 EFF (ro): Event FIFO full.
0x4009D0F4 C   FIELD 25w01 TEFL (ro): Tx event FIFO element lost.
0x4009D0F8 B  REGISTER TXEFA (rw): Tx Event FIFO Acknowledge
0x4009D0F8 C   FIELD 00w05 EFAI (rw): Event FIFO acknowledge index.
0x4009D200 B  REGISTER MRBA (rw): CAN Message RAM Base Address
0x4009D200 C   FIELD 16w16 BA (rw): Base address for the message RAM in the chip memory map.
0x4009D400 B  REGISTER ETSCC (rw): External Timestamp Counter Configuration
0x4009D400 C   FIELD 00w11 ETCP (rw): External timestamp prescaler value.
0x4009D400 C   FIELD 31w01 ETCE (rw): External timestamp counter enable.
0x4009D600 B  REGISTER ETSCV (rw): External Timestamp Counter Value
0x4009D600 C   FIELD 00w16 ETSC (rw): External timestamp counter.
0x4009E000 A PERIPHERAL CAN1
0x4009E010 B  REGISTER TEST (rw): Test Register
0x4009E010 C   FIELD 04w01 LBCK (rw): Loop back mode.
0x4009E010 C   FIELD 05w02 TX (rw): Control of transmit pin.
0x4009E010 C   FIELD 07w01 RX (rw): Monitors the actual value of the CAN_RXD.
0x4009E018 B  REGISTER CCCR (rw): CC Control Register
0x4009E018 C   FIELD 00w01 INIT (rw): Initialization.
0x4009E018 C   FIELD 01w01 CCE (rw): Configuration change enable.
0x4009E018 C   FIELD 02w01 ASM (rw): Restricted operational mode.
0x4009E018 C   FIELD 03w01 CSA (rw): Clock Stop Acknowledge.
0x4009E018 C   FIELD 04w01 CSR (rw): Clock Stop Request.
0x4009E018 C   FIELD 05w01 MON (rw): Bus monitoring mode.
0x4009E018 C   FIELD 06w01 DAR (rw): Disable automatic retransmission.
0x4009E018 C   FIELD 07w01 TEST (rw): Test mode enable.
0x4009E018 C   FIELD 12w01 PXHD (rw): Protocol exception handling disable.
0x4009E018 C   FIELD 13w01 EFBI (rw): Edge filtering during bus integration.
0x4009E018 C   FIELD 14w01 TXP (rw): Transmit pause.
0x4009E01C B  REGISTER NBTP (rw): Nominal Bit Timing and Prescaler Register
0x4009E01C C   FIELD 00w07 NTSEG2 (rw): Nominal time segment after sample point.
0x4009E01C C   FIELD 08w08 NTSEG1 (rw): Nominal time segment before sample point.
0x4009E01C C   FIELD 16w09 NBRP (rw): Nominal bit rate prescaler.
0x4009E01C C   FIELD 25w07 NSJW (rw): Nominal (re)synchronization jump width.
0x4009E020 B  REGISTER TSCC (rw): Timestamp Counter Configuration
0x4009E020 C   FIELD 00w02 TSS (rw): Timestamp select.
0x4009E020 C   FIELD 16w04 TCP (rw): Timestamp counter prescaler Configures the timestamp and timeout counters time unit in multiple of CAN bit times.
0x4009E024 B  REGISTER TSCV (rw): Timestamp Counter Value
0x4009E024 C   FIELD 00w16 TSC (rw): Timestamp counter.
0x4009E028 B  REGISTER TOCC (rw): Timeout Counter Configuration
0x4009E028 C   FIELD 00w01 ETOC (rw): Enable timeout counter.
0x4009E028 C   FIELD 01w02 TOS (rw): Timeout select.
0x4009E028 C   FIELD 16w16 TOP (rw): Timeout period.
0x4009E02C B  REGISTER TOCV (ro): Timeout Counter Value
0x4009E02C C   FIELD 00w16 TOC (ro): Timeout counter.
0x4009E040 B  REGISTER ECR (ro): Error Counter Register
0x4009E040 C   FIELD 00w08 TEC (ro): Transmit error counter.
0x4009E040 C   FIELD 08w07 REC (ro): Receive error counter.
0x4009E040 C   FIELD 15w01 RP (ro): Receive error passive.
0x4009E040 C   FIELD 16w08 CEL (ro): CAN error logging.
0x4009E044 B  REGISTER PSR (ro): Protocol Status Register
0x4009E044 C   FIELD 00w03 LEC (ro): Last error code.
0x4009E044 C   FIELD 03w02 ACT (ro): Activity.
0x4009E044 C   FIELD 05w01 EP (ro): Error Passive.
0x4009E044 C   FIELD 06w01 EW (ro): Warning status.
0x4009E044 C   FIELD 07w01 BO (ro): Bus Off Status.
0x4009E044 C   FIELD 14w01 PXE (ro): Protocol exception event.
0x4009E044 C   FIELD 16w07 TDCV (ro): Transmitter delay compensation value.
0x4009E048 B  REGISTER TDCR (rw): Transmitter Delay Compensator Register
0x4009E048 C   FIELD 00w07 TDCF (rw): Transmitter delay compensation filter window length.
0x4009E048 C   FIELD 08w07 TDCO (rw): Transmitter delay compensation offset.
0x4009E050 B  REGISTER IR (rw): Interrupt Register
0x4009E050 C   FIELD 00w01 RF0N (rw): Rx FIFO 0 new message.
0x4009E050 C   FIELD 01w01 RF0W (rw): Rx FIFO 0 watermark reached.
0x4009E050 C   FIELD 02w01 RF0F (rw): Rx FIFO 0 full.
0x4009E050 C   FIELD 03w01 RF0L (rw): Rx FIFO 0 message lost.
0x4009E050 C   FIELD 04w01 RF1N (rw): Rx FIFO 1 new message.
0x4009E050 C   FIELD 05w01 RF1W (rw): Rx FIFO 1 watermark reached.
0x4009E050 C   FIELD 06w01 RF1F (rw): Rx FIFO 1 full.
0x4009E050 C   FIELD 07w01 RF1L (rw): Rx FIFO 1 message lost.
0x4009E050 C   FIELD 08w01 HPM (rw): High priority message.
0x4009E050 C   FIELD 09w01 TC (rw): Transmission completed.
0x4009E050 C   FIELD 10w01 TCF (rw): Transmission cancellation finished.
0x4009E050 C   FIELD 11w01 TFE (rw): Tx FIFO empty.
0x4009E050 C   FIELD 12w01 TEFN (rw): Tx event FIFO new entry.
0x4009E050 C   FIELD 13w01 TEFW (rw): Tx event FIFO watermark reached.
0x4009E050 C   FIELD 14w01 TEFF (rw): Tx event FIFO full.
0x4009E050 C   FIELD 15w01 TEFL (rw): Tx event FIFO element lost.
0x4009E050 C   FIELD 16w01 TSW (rw): Timestamp wraparound.
0x4009E050 C   FIELD 17w01 MRAF (rw): Message RAM access failure.
0x4009E050 C   FIELD 18w01 TOO (rw): Timeout occurred.
0x4009E050 C   FIELD 19w01 DRX (rw): Message stored in dedicated Rx buffer.
0x4009E050 C   FIELD 20w01 BEC (rw): Bit error corrected.
0x4009E050 C   FIELD 21w01 BEU (rw): Bit error uncorrected.
0x4009E050 C   FIELD 22w01 ELO (rw): Error logging overflow.
0x4009E050 C   FIELD 23w01 EP (rw): Error passive.
0x4009E050 C   FIELD 24w01 EW (rw): Warning status.
0x4009E050 C   FIELD 25w01 BO (rw): Bus_Off Status.
0x4009E050 C   FIELD 26w01 WDI (rw): Watchdog interrupt.
0x4009E050 C   FIELD 27w01 PEA (rw): Protocol error in arbitration phase.
0x4009E050 C   FIELD 28w01 PED (rw): Protocol error in data phase.
0x4009E050 C   FIELD 29w01 ARA (rw): Access to reserved address.
0x4009E054 B  REGISTER IE (rw): Interrupt Enable
0x4009E054 C   FIELD 00w01 RF0NE (rw): Rx FIFO 0 new message interrupt enable.
0x4009E054 C   FIELD 01w01 RF0WE (rw): Rx FIFO 0 watermark reached interrupt enable.
0x4009E054 C   FIELD 02w01 RF0FE (rw): Rx FIFO 0 full interrupt enable.
0x4009E054 C   FIELD 03w01 RF0LE (rw): Rx FIFO 0 message lost interrupt enable.
0x4009E054 C   FIELD 04w01 RF1NE (rw): Rx FIFO 1 new message interrupt enable.
0x4009E054 C   FIELD 05w01 RF1WE (rw): Rx FIFO 1 watermark reached interrupt enable.
0x4009E054 C   FIELD 06w01 RF1FE (rw): Rx FIFO 1 full interrupt enable.
0x4009E054 C   FIELD 07w01 RF1LE (rw): Rx FIFO 1 message lost interrupt enable.
0x4009E054 C   FIELD 08w01 HPME (rw): High priority message interrupt enable.
0x4009E054 C   FIELD 09w01 TCE (rw): Transmission completed interrupt enable.
0x4009E054 C   FIELD 10w01 TCFE (rw): Transmission cancellation finished interrupt enable.
0x4009E054 C   FIELD 11w01 TFEE (rw): Tx FIFO empty interrupt enable.
0x4009E054 C   FIELD 12w01 TEFNE (rw): Tx event FIFO new entry interrupt enable.
0x4009E054 C   FIELD 13w01 TEFWE (rw): Tx event FIFO watermark reached interrupt enable.
0x4009E054 C   FIELD 14w01 TEFFE (rw): Tx event FIFO full interrupt enable.
0x4009E054 C   FIELD 15w01 TEFLE (rw): Tx event FIFO element lost interrupt enable.
0x4009E054 C   FIELD 16w01 TSWE (rw): Timestamp wraparound interrupt enable.
0x4009E054 C   FIELD 17w01 MRAFE (rw): Message RAM access failure interrupt enable.
0x4009E054 C   FIELD 18w01 TOOE (rw): Timeout occurred interrupt enable.
0x4009E054 C   FIELD 19w01 DRXE (rw): Message stored in dedicated Rx buffer interrupt enable.
0x4009E054 C   FIELD 20w01 BECE (rw): Bit error corrected interrupt enable.
0x4009E054 C   FIELD 21w01 BEUE (rw): Bit error uncorrected interrupt enable.
0x4009E054 C   FIELD 22w01 ELOE (rw): Error logging overflow interrupt enable.
0x4009E054 C   FIELD 23w01 EPE (rw): Error passive interrupt enable.
0x4009E054 C   FIELD 24w01 EWE (rw): Warning status interrupt enable.
0x4009E054 C   FIELD 25w01 BOE (rw): Bus_Off Status interrupt enable.
0x4009E054 C   FIELD 26w01 WDIE (rw): Watchdog interrupt enable.
0x4009E054 C   FIELD 27w01 PEAE (rw): Protocol error in arbitration phase interrupt enable.
0x4009E054 C   FIELD 28w01 PEDE (rw): Protocol error in data phase interrupt enable.
0x4009E054 C   FIELD 29w01 ARAE (rw): Access to reserved address interrupt enable.
0x4009E058 B  REGISTER ILS (rw): Interrupt Line Select
0x4009E058 C   FIELD 00w01 RF0NL (rw): Rx FIFO 0 new message interrupt line.
0x4009E058 C   FIELD 01w01 RF0WL (rw): Rx FIFO 0 watermark reached interrupt line.
0x4009E058 C   FIELD 02w01 RF0FL (rw): Rx FIFO 0 full interrupt line.
0x4009E058 C   FIELD 03w01 RF0LL (rw): Rx FIFO 0 message lost interrupt line.
0x4009E058 C   FIELD 04w01 RF1NL (rw): Rx FIFO 1 new message interrupt line.
0x4009E058 C   FIELD 05w01 RF1WL (rw): Rx FIFO 1 watermark reached interrupt line.
0x4009E058 C   FIELD 06w01 RF1FL (rw): Rx FIFO 1 full interrupt line.
0x4009E058 C   FIELD 07w01 RF1LL (rw): Rx FIFO 1 message lost interrupt line.
0x4009E058 C   FIELD 08w01 HPML (rw): High priority message interrupt line.
0x4009E058 C   FIELD 09w01 TCL (rw): Transmission completed interrupt line.
0x4009E058 C   FIELD 10w01 TCFL (rw): Transmission cancellation finished interrupt line.
0x4009E058 C   FIELD 11w01 TFEL (rw): Tx FIFO empty interrupt line.
0x4009E058 C   FIELD 12w01 TEFNL (rw): Tx event FIFO new entry interrupt line.
0x4009E058 C   FIELD 13w01 TEFWL (rw): Tx event FIFO watermark reached interrupt line.
0x4009E058 C   FIELD 14w01 TEFFL (rw): Tx event FIFO full interrupt line.
0x4009E058 C   FIELD 15w01 TEFLL (rw): Tx event FIFO element lost interrupt line.
0x4009E058 C   FIELD 16w01 TSWL (rw): Timestamp wraparound interrupt line.
0x4009E058 C   FIELD 17w01 MRAFL (rw): Message RAM access failure interrupt line.
0x4009E058 C   FIELD 18w01 TOOL (rw): Timeout occurred interrupt line.
0x4009E058 C   FIELD 19w01 DRXL (rw): Message stored in dedicated Rx buffer interrupt line.
0x4009E058 C   FIELD 20w01 BECL (rw): Bit error corrected interrupt line.
0x4009E058 C   FIELD 21w01 BEUL (rw): Bit error uncorrected interrupt line.
0x4009E058 C   FIELD 22w01 ELOL (rw): Error logging overflow interrupt line.
0x4009E058 C   FIELD 23w01 EPL (rw): Error passive interrupt line.
0x4009E058 C   FIELD 24w01 EWL (rw): Warning status interrupt line.
0x4009E058 C   FIELD 25w01 BOL (rw): Bus_Off Status interrupt line.
0x4009E058 C   FIELD 26w01 WDIL (rw): Watchdog interrupt line.
0x4009E058 C   FIELD 27w01 PEAL (rw): Protocol error in arbitration phase interrupt line.
0x4009E058 C   FIELD 28w01 PEDL (rw): Protocol error in data phase interrupt line.
0x4009E058 C   FIELD 29w01 ARAL (rw): Access to reserved address interrupt line.
0x4009E05C B  REGISTER ILE (rw): Interrupt Line Enable
0x4009E05C C   FIELD 00w01 EINT0 (rw): Enable interrupt line 0.
0x4009E05C C   FIELD 01w01 EINT1 (rw): Enable interrupt line 1.
0x4009E080 B  REGISTER GFC (rw): Global Filter Configuration
0x4009E080 C   FIELD 00w01 RRFE (rw): Reject remote frames extended.
0x4009E080 C   FIELD 01w01 RRFS (rw): Reject remote frames standard.
0x4009E080 C   FIELD 02w02 ANFE (rw): Accept non-matching frames extended.
0x4009E080 C   FIELD 04w02 ANFS (rw): Accept non-matching frames standard.
0x4009E084 B  REGISTER SIDFC (rw): Standard ID Filter Configuration
0x4009E084 C   FIELD 02w14 FLSSA (rw): Filter list standard start address.
0x4009E084 C   FIELD 16w08 LSS (rw): List size standard 0 = No standard message ID filter.
0x4009E088 B  REGISTER XIDFC (rw): Extended ID Filter Configuration
0x4009E088 C   FIELD 02w14 FLESA (rw): Filter list extended start address.
0x4009E088 C   FIELD 16w08 LSE (rw): List size extended 0 = No extended message ID filter.
0x4009E090 B  REGISTER XIDAM (rw): Extended ID AND Mask
0x4009E090 C   FIELD 00w29 EIDM (rw): Extended ID mask.
0x4009E094 B  REGISTER HPMS (ro): High Priority Message Status
0x4009E094 C   FIELD 00w06 BIDX (ro): Buffer index.
0x4009E094 C   FIELD 06w02 MSI (ro): Message storage indicator.
0x4009E094 C   FIELD 08w07 FIDX (ro): Filter index.
0x4009E094 C   FIELD 15w01 FLST (ro): Filter list.
0x4009E098 B  REGISTER NDAT1 (rw): New Data 1
0x4009E098 C   FIELD 00w32 ND (rw): New Data.
0x4009E09C B  REGISTER NDAT2 (rw): New Data 2
0x4009E09C C   FIELD 00w32 ND (rw): New Data.
0x4009E0A0 B  REGISTER RXF0C (rw): Rx FIFO 0 Configuration
0x4009E0A0 C   FIELD 02w14 F0SA (rw): Rx FIFO 0 start address.
0x4009E0A0 C   FIELD 16w07 F0S (rw): Rx FIFO 0 size.
0x4009E0A0 C   FIELD 24w07 F0WM (rw): Rx FIFO 0 watermark 0 = Watermark interrupt disabled.
0x4009E0A0 C   FIELD 31w01 F0OM (rw): FIFO 0 operation mode.
0x4009E0A4 B  REGISTER RXF0S (rw): Rx FIFO 0 Status
0x4009E0A4 C   FIELD 00w07 F0FL (rw): Rx FIFO 0 fill level.
0x4009E0A4 C   FIELD 08w06 F0GI (rw): Rx FIFO 0 get index.
0x4009E0A4 C   FIELD 16w06 F0PI (rw): Rx FIFO 0 put index.
0x4009E0A4 C   FIELD 24w01 F0F (rw): Rx FIFO 0 full.
0x4009E0A4 C   FIELD 25w01 RF0L (rw): Rx FIFO 0 message lost.
0x4009E0A8 B  REGISTER RXF0A (rw): Rx FIFO 0 Acknowledge
0x4009E0A8 C   FIELD 00w06 F0AI (rw): Rx FIFO 0 acknowledge index.
0x4009E0AC B  REGISTER RXBC (rw): Rx Buffer Configuration
0x4009E0AC C   FIELD 02w14 RBSA (rw): Rx buffer start address.
0x4009E0B0 B  REGISTER RXF1C (rw): Rx FIFO 1 Configuration
0x4009E0B0 C   FIELD 02w14 F1SA (rw): Rx FIFO 1 start address.
0x4009E0B0 C   FIELD 16w07 F1S (rw): Rx FIFO 1 size 0 = No Rx FIFO 1.
0x4009E0B0 C   FIELD 24w07 F1WM (rw): Rx FIFO 1 watermark 0 = Watermark interrupt disabled.
0x4009E0B0 C   FIELD 31w01 F1OM (rw): FIFO 1 operation mode.
0x4009E0B4 B  REGISTER RXF1S (ro): Rx FIFO 1 Status
0x4009E0B4 C   FIELD 00w07 F1FL (ro): Rx FIFO 1 fill level.
0x4009E0B4 C   FIELD 08w06 F1GI (ro): Rx FIFO 1 get index.
0x4009E0B4 C   FIELD 16w06 F1PI (ro): Rx FIFO 1 put index.
0x4009E0B4 C   FIELD 24w01 F1F (ro): Rx FIFO 1 full.
0x4009E0B4 C   FIELD 25w01 RF1L (ro): Rx FIFO 1 message lost.
0x4009E0B8 B  REGISTER RXF1A (rw): Rx FIFO 1 Acknowledge
0x4009E0B8 C   FIELD 00w06 F1AI (rw): Rx FIFO 1 acknowledge index.
0x4009E0BC B  REGISTER RXESC (rw): Rx Buffer and FIFO Element Size Configuration
0x4009E0BC C   FIELD 00w03 F0DS (rw): Rx FIFO 0 data field size.
0x4009E0BC C   FIELD 04w03 F1DS (rw): Rx FIFO 1 data field size.
0x4009E0BC C   FIELD 08w03 RBDS (rw): .
0x4009E0C0 B  REGISTER TXBC (rw): Tx Buffer Configuration
0x4009E0C0 C   FIELD 02w14 TBSA (rw): Tx buffers start address.
0x4009E0C0 C   FIELD 16w06 NDTB (rw): Number of dedicated transmit buffers 0 = No dedicated Tx buffers.
0x4009E0C0 C   FIELD 24w06 TFQS (rw): Transmit FIFO/queue size 0 = No tx FIFO/Queue.
0x4009E0C0 C   FIELD 30w01 TFQM (rw): Tx FIFO/queue mode.
0x4009E0C4 B  REGISTER TXFQS (rw): Tx FIFO/Queue Status
0x4009E0C4 C   FIELD 08w05 TFGI (rw): Tx FIFO get index.
0x4009E0C4 C   FIELD 16w05 TFQPI (rw): Tx FIFO/queue put index.
0x4009E0C4 C   FIELD 21w01 TFQF (rw): Tx FIFO/queue full.
0x4009E0C8 B  REGISTER TXESC (rw): Tx Buffer Element Size Configuration
0x4009E0C8 C   FIELD 00w03 TBDS (rw): Tx buffer data field size.
0x4009E0CC B  REGISTER TXBRP (rw): Tx Buffer Request Pending
0x4009E0CC C   FIELD 00w32 TRP (rw): Transmission request pending.
0x4009E0D0 B  REGISTER TXBAR (rw): Tx Buffer Add Request
0x4009E0D0 C   FIELD 00w32 AR (rw): Add request.
0x4009E0D4 B  REGISTER TXBCR (rw): Tx Buffer Cancellation Request
0x4009E0D4 C   FIELD 00w32 CR (rw): Cancellation request.
0x4009E0D8 B  REGISTER TXBTO (rw): Tx Buffer Transmission Occurred
0x4009E0D8 C   FIELD 00w32 TO (rw): Transmission occurred.
0x4009E0DC B  REGISTER TXBCF (rw): Tx Buffer Cancellation Finished
0x4009E0DC C   FIELD 00w32 TO (rw): Cancellation finished.
0x4009E0E0 B  REGISTER TXBTIE (rw): Tx Buffer Transmission Interrupt Enable
0x4009E0E0 C   FIELD 00w32 TIE (rw): Transmission interrupt enable.
0x4009E0E4 B  REGISTER TXBCIE (rw): Tx Buffer Cancellation Finished Interrupt Enable
0x4009E0E4 C   FIELD 00w32 CFIE (rw): Cancellation finished interrupt enable.
0x4009E0F0 B  REGISTER TXEFC (rw): Tx Event FIFO Configuration
0x4009E0F0 C   FIELD 02w14 EFSA (rw): Event FIFO start address.
0x4009E0F0 C   FIELD 16w06 EFS (rw): Event FIFO size 0 = Tx event FIFO disabled.
0x4009E0F0 C   FIELD 24w06 EFWM (rw): Event FIFO watermark 0 = Watermark interrupt disabled.
0x4009E0F4 B  REGISTER TXEFS (ro): Tx Event FIFO Status
0x4009E0F4 C   FIELD 00w06 EFFL (ro): Event FIFO fill level.
0x4009E0F4 C   FIELD 08w05 EFGI (ro): Event FIFO get index.
0x4009E0F4 C   FIELD 16w06 EFPI (ro): Event FIFO put index.
0x4009E0F4 C   FIELD 24w01 EFF (ro): Event FIFO full.
0x4009E0F4 C   FIELD 25w01 TEFL (ro): Tx event FIFO element lost.
0x4009E0F8 B  REGISTER TXEFA (rw): Tx Event FIFO Acknowledge
0x4009E0F8 C   FIELD 00w05 EFAI (rw): Event FIFO acknowledge index.
0x4009E200 B  REGISTER MRBA (rw): CAN Message RAM Base Address
0x4009E200 C   FIELD 16w16 BA (rw): Base address for the message RAM in the chip memory map.
0x4009E400 B  REGISTER ETSCC (rw): External Timestamp Counter Configuration
0x4009E400 C   FIELD 00w11 ETCP (rw): External timestamp prescaler value.
0x4009E400 C   FIELD 31w01 ETCE (rw): External timestamp counter enable.
0x4009E600 B  REGISTER ETSCV (rw): External Timestamp Counter Value
0x4009E600 C   FIELD 00w16 ETSC (rw): External timestamp counter.
0x400A0000 A PERIPHERAL ADC0
0x400A0000 B  REGISTER CTRL (rw): ADC Control register. Contains the clock divide value, resolution selection, sampling time selection, and mode controls.
0x400A0000 C   FIELD 00w08 CLKDIV (rw): In synchronous mode only, the system clock is divided by this value plus one to produce the clock for the ADC converter, which should be less than or equal to 72 MHz. Typically, software should program the smallest value in this field that yields this maximum clock rate or slightly less, but in certain cases (such as a high-impedance analog source) a slower clock may be desirable. This field is ignored in the asynchronous operating mode.
0x400A0000 C   FIELD 08w01 ASYNMODE (rw): Select clock mode.
0x400A0000 C   FIELD 09w02 RESOL (rw): The number of bits of ADC resolution. Accuracy can be reduced to achieve higher conversion rates. A single conversion (including one conversion in a burst or sequence) requires the selected number of bits of resolution plus 3 ADC clocks. This field must only be altered when the ADC is fully idle. Changing it during any kind of ADC operation may have unpredictable results. ADC clock frequencies for various resolutions must not exceed: - 5x the system clock rate for 12-bit resolution - 4.3x the system clock rate for 10-bit resolution - 3.6x the system clock for 8-bit resolution - 3x the bus clock rate for 6-bit resolution
0x400A0000 C   FIELD 11w01 BYPASSCAL (rw): Bypass Calibration. This bit may be set to avoid the need to calibrate if offset error is not a concern in the application.
0x400A0000 C   FIELD 12w03 TSAMP (rw): Sample Time. The default sampling period (TSAMP = '000') at the start of each conversion is 2.5 ADC clock periods. Depending on a variety of factors, including operating conditions and the output impedance of the analog source, longer sampling times may be required. See Section 28.7.10. The TSAMP field specifies the number of additional ADC clock cycles, from zero to seven, by which the sample period will be extended. The total conversion time will increase by the same number of clocks. 000 - The sample period will be the default 2.5 ADC clocks. A complete conversion with 12-bits of accuracy will require 15 clocks. 001- The sample period will be extended by one ADC clock to a total of 3.5 clock periods. A complete 12-bit conversion will require 16 clocks. 010 - The sample period will be extended by two clocks to 4.5 ADC clock cycles. A complete 12-bit conversion will require 17 ADC clocks. 111 - The sample period will be extended by seven clocks to 9.5 ADC clock cycles. A complete 12-bit conversion will require 22 ADC clocks.
0x400A0004 B  REGISTER INSEL (rw): Input Select. Allows selection of the temperature sensor as an alternate input to ADC channel 0.
0x400A0004 C   FIELD 00w02 SEL (rw): Selects the input source for channel 0. All other values are reserved.
0x400A0008 B  REGISTER SEQ_CTRLA (rw): ADC Conversion Sequence-n control register: Controls triggering and channel selection for conversion sequence-n. Also specifies interrupt mode for sequence-n.
0x400A0008 C   FIELD 00w12 CHANNELS (rw): Selects which one or more of the ADC channels will be sampled and converted when this sequence is launched. A 1 in any bit of this field will cause the corresponding channel to be included in the conversion sequence, where bit 0 corresponds to channel 0, bit 1 to channel 1 and so forth. When this conversion sequence is triggered, either by a hardware trigger or via software command, ADC conversions will be performed on each enabled channel, in sequence, beginning with the lowest-ordered channel. This field can ONLY be changed while SEQA_ENA (bit 31) is LOW. It is allowed to change this field and set bit 31 in the same write.
0x400A0008 C   FIELD 12w06 TRIGGER (rw): Selects which of the available hardware trigger sources will cause this conversion sequence to be initiated. Program the trigger input number in this field. See Table 476. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write.
0x400A0008 C   FIELD 18w01 TRIGPOL (rw): Select the polarity of the selected input trigger for this conversion sequence. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write.
0x400A0008 C   FIELD 19w01 SYNCBYPASS (rw): Setting this bit allows the hardware trigger input to bypass synchronization flip-flop stages and therefore shorten the time between the trigger input signal and the start of a conversion. There are slightly different criteria for whether or not this bit can be set depending on the clock operating mode: Synchronous mode (the ASYNMODE in the CTRL register = 0): Synchronization may be bypassed (this bit may be set) if the selected trigger source is already synchronous with the main system clock (eg. coming from an on-chip, system-clock-based timer). Whether this bit is set or not, a trigger pulse must be maintained for at least one system clock period. Asynchronous mode (the ASYNMODE in the CTRL register = 1): Synchronization may be bypassed (this bit may be set) if it is certain that the duration of a trigger input pulse will be at least one cycle of the ADC clock (regardless of whether the trigger comes from and on-chip or off-chip source). If this bit is NOT set, the trigger pulse must at least be maintained for one system clock period.
0x400A0008 C   FIELD 26w01 START (rw): Writing a 1 to this field will launch one pass through this conversion sequence. The behavior will be identical to a sequence triggered by a hardware trigger. Do not write 1 to this bit if the BURST bit is set. This bit is only set to a 1 momentarily when written to launch a conversion sequence. It will consequently always read back as a zero.
0x400A0008 C   FIELD 27w01 BURST (rw): Writing a 1 to this bit will cause this conversion sequence to be continuously cycled through. Other sequence A triggers will be ignored while this bit is set. Repeated conversions can be halted by clearing this bit. The sequence currently in progress will be completed before conversions are terminated. Note that a new sequence could begin just before BURST is cleared.
0x400A0008 C   FIELD 28w01 SINGLESTEP (rw): When this bit is set, a hardware trigger or a write to the START bit will launch a single conversion on the next channel in the sequence instead of the default response of launching an entire sequence of conversions. Once all of the channels comprising a sequence have been converted, a subsequent trigger will repeat the sequence beginning with the first enabled channel. Interrupt generation will still occur either after each individual conversion or at the end of the entire sequence, depending on the state of the MODE bit.
0x400A0008 C   FIELD 29w01 LOWPRIO (rw): Set priority for sequence A.
0x400A0008 C   FIELD 30w01 MODE (rw): Indicates whether the primary method for retrieving conversion results for this sequence will be accomplished via reading the global data register (SEQA_GDAT) at the end of each conversion, or the individual channel result registers at the end of the entire sequence. Impacts when conversion-complete interrupt/DMA trigger for sequence-A will be generated and which overrun conditions contribute to an overrun interrupt as described below.
0x400A0008 C   FIELD 31w01 SEQ_ENA (rw): Sequence Enable. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled.
0x400A000C B  REGISTER SEQ_CTRLB (rw): ADC Conversion Sequence-n control register: Controls triggering and channel selection for conversion sequence-n. Also specifies interrupt mode for sequence-n.
0x400A000C C   FIELD 00w12 CHANNELS (rw): Selects which one or more of the ADC channels will be sampled and converted when this sequence is launched. A 1 in any bit of this field will cause the corresponding channel to be included in the conversion sequence, where bit 0 corresponds to channel 0, bit 1 to channel 1 and so forth. When this conversion sequence is triggered, either by a hardware trigger or via software command, ADC conversions will be performed on each enabled channel, in sequence, beginning with the lowest-ordered channel. This field can ONLY be changed while SEQA_ENA (bit 31) is LOW. It is allowed to change this field and set bit 31 in the same write.
0x400A000C C   FIELD 12w06 TRIGGER (rw): Selects which of the available hardware trigger sources will cause this conversion sequence to be initiated. Program the trigger input number in this field. See Table 476. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write.
0x400A000C C   FIELD 18w01 TRIGPOL (rw): Select the polarity of the selected input trigger for this conversion sequence. In order to avoid generating a spurious trigger, it is recommended writing to this field only when SEQA_ENA (bit 31) is low. It is safe to change this field and set bit 31 in the same write.
0x400A000C C   FIELD 19w01 SYNCBYPASS (rw): Setting this bit allows the hardware trigger input to bypass synchronization flip-flop stages and therefore shorten the time between the trigger input signal and the start of a conversion. There are slightly different criteria for whether or not this bit can be set depending on the clock operating mode: Synchronous mode (the ASYNMODE in the CTRL register = 0): Synchronization may be bypassed (this bit may be set) if the selected trigger source is already synchronous with the main system clock (eg. coming from an on-chip, system-clock-based timer). Whether this bit is set or not, a trigger pulse must be maintained for at least one system clock period. Asynchronous mode (the ASYNMODE in the CTRL register = 1): Synchronization may be bypassed (this bit may be set) if it is certain that the duration of a trigger input pulse will be at least one cycle of the ADC clock (regardless of whether the trigger comes from and on-chip or off-chip source). If this bit is NOT set, the trigger pulse must at least be maintained for one system clock period.
0x400A000C C   FIELD 26w01 START (rw): Writing a 1 to this field will launch one pass through this conversion sequence. The behavior will be identical to a sequence triggered by a hardware trigger. Do not write 1 to this bit if the BURST bit is set. This bit is only set to a 1 momentarily when written to launch a conversion sequence. It will consequently always read back as a zero.
0x400A000C C   FIELD 27w01 BURST (rw): Writing a 1 to this bit will cause this conversion sequence to be continuously cycled through. Other sequence A triggers will be ignored while this bit is set. Repeated conversions can be halted by clearing this bit. The sequence currently in progress will be completed before conversions are terminated. Note that a new sequence could begin just before BURST is cleared.
0x400A000C C   FIELD 28w01 SINGLESTEP (rw): When this bit is set, a hardware trigger or a write to the START bit will launch a single conversion on the next channel in the sequence instead of the default response of launching an entire sequence of conversions. Once all of the channels comprising a sequence have been converted, a subsequent trigger will repeat the sequence beginning with the first enabled channel. Interrupt generation will still occur either after each individual conversion or at the end of the entire sequence, depending on the state of the MODE bit.
0x400A000C C   FIELD 29w01 LOWPRIO (rw): Set priority for sequence A.
0x400A000C C   FIELD 30w01 MODE (rw): Indicates whether the primary method for retrieving conversion results for this sequence will be accomplished via reading the global data register (SEQA_GDAT) at the end of each conversion, or the individual channel result registers at the end of the entire sequence. Impacts when conversion-complete interrupt/DMA trigger for sequence-A will be generated and which overrun conditions contribute to an overrun interrupt as described below.
0x400A000C C   FIELD 31w01 SEQ_ENA (rw): Sequence Enable. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled. In order to avoid spuriously triggering the sequence, care should be taken to only set the SEQn_ENA bit when the selected trigger input is in its INACTIVE state (as defined by the TRIGPOL bit). If this condition is not met, the sequence will be triggered immediately upon being enabled.
0x400A0010 B  REGISTER SEQ_GDATA (ro): ADC Sequence-n Global Data register. This register contains the result of the most recent ADC conversion performed under sequence-n.
0x400A0010 C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the most recent conversion performed under conversion sequence associated with this register. The result is a binary fraction representing the voltage on the currently-selected input channel as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP. DATAVALID = 1 indicates that this result has not yet been read.
0x400A0010 C   FIELD 16w02 THCMPRANGE (ro): Indicates whether the result of the last conversion performed was above, below or within the range established by the designated threshold comparison registers (THRn_LOW and THRn_HIGH).
0x400A0010 C   FIELD 18w02 THCMPCROSS (ro): Indicates whether the result of the last conversion performed represented a crossing of the threshold level established by the designated LOW threshold comparison register (THRn_LOW) and, if so, in what direction the crossing occurred.
0x400A0010 C   FIELD 26w04 CHN (ro): These bits contain the channel from which the RESULT bits were converted (e.g. 0000 identifies channel 0, 0001 channel 1, etc.).
0x400A0010 C   FIELD 30w01 OVERRUN (ro): This bit is set if a new conversion result is loaded into the RESULT field before a previous result has been read - i.e. while the DATAVALID bit is set. This bit is cleared, along with the DATAVALID bit, whenever this register is read. This bit will contribute to an overrun interrupt/DMA trigger if the MODE bit (in SEQAA_CTRL) for the corresponding sequence is set to '0' (and if the overrun interrupt is enabled).
0x400A0010 C   FIELD 31w01 DATAVALID (ro): This bit is set to '1' at the end of each conversion when a new result is loaded into the RESULT field. It is cleared whenever this register is read. This bit will cause a conversion-complete interrupt for the corresponding sequence if the MODE bit (in SEQA_CTRL) for that sequence is set to 0 (and if the interrupt is enabled).
0x400A0014 B  REGISTER SEQ_GDATB (ro): ADC Sequence-n Global Data register. This register contains the result of the most recent ADC conversion performed under sequence-n.
0x400A0014 C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the most recent conversion performed under conversion sequence associated with this register. The result is a binary fraction representing the voltage on the currently-selected input channel as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP. DATAVALID = 1 indicates that this result has not yet been read.
0x400A0014 C   FIELD 16w02 THCMPRANGE (ro): Indicates whether the result of the last conversion performed was above, below or within the range established by the designated threshold comparison registers (THRn_LOW and THRn_HIGH).
0x400A0014 C   FIELD 18w02 THCMPCROSS (ro): Indicates whether the result of the last conversion performed represented a crossing of the threshold level established by the designated LOW threshold comparison register (THRn_LOW) and, if so, in what direction the crossing occurred.
0x400A0014 C   FIELD 26w04 CHN (ro): These bits contain the channel from which the RESULT bits were converted (e.g. 0000 identifies channel 0, 0001 channel 1, etc.).
0x400A0014 C   FIELD 30w01 OVERRUN (ro): This bit is set if a new conversion result is loaded into the RESULT field before a previous result has been read - i.e. while the DATAVALID bit is set. This bit is cleared, along with the DATAVALID bit, whenever this register is read. This bit will contribute to an overrun interrupt/DMA trigger if the MODE bit (in SEQAA_CTRL) for the corresponding sequence is set to '0' (and if the overrun interrupt is enabled).
0x400A0014 C   FIELD 31w01 DATAVALID (ro): This bit is set to '1' at the end of each conversion when a new result is loaded into the RESULT field. It is cleared whenever this register is read. This bit will cause a conversion-complete interrupt for the corresponding sequence if the MODE bit (in SEQA_CTRL) for that sequence is set to 0 (and if the interrupt is enabled).
0x400A0020 B  REGISTER DAT[0] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A0020 C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A0020 C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A0020 C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A0020 C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A0020 C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0020 C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0024 B  REGISTER DAT[1] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A0024 C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A0024 C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A0024 C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A0024 C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A0024 C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0024 C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0028 B  REGISTER DAT[2] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A0028 C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A0028 C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A0028 C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A0028 C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A0028 C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0028 C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A002C B  REGISTER DAT[3] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A002C C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A002C C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A002C C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A002C C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A002C C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A002C C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0030 B  REGISTER DAT[4] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A0030 C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A0030 C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A0030 C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A0030 C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A0030 C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0030 C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0034 B  REGISTER DAT[5] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A0034 C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A0034 C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A0034 C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A0034 C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A0034 C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0034 C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0038 B  REGISTER DAT[6] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A0038 C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A0038 C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A0038 C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A0038 C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A0038 C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0038 C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A003C B  REGISTER DAT[7] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A003C C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A003C C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A003C C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A003C C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A003C C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A003C C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0040 B  REGISTER DAT[8] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A0040 C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A0040 C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A0040 C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A0040 C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A0040 C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0040 C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0044 B  REGISTER DAT[9] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A0044 C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A0044 C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A0044 C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A0044 C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A0044 C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0044 C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0048 B  REGISTER DAT[10] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A0048 C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A0048 C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A0048 C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A0048 C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A0048 C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0048 C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A004C B  REGISTER DAT[11] (ro): ADC Channel 0 Data register. This register contains the result of the most recent conversion completed on channel 0.
0x400A004C C   FIELD 04w12 RESULT (ro): This field contains the 12-bit ADC conversion result from the last conversion performed on this channel. This will be a binary fraction representing the voltage on the AD0[n] pin, as it falls within the range of VREFP to VREFN. Zero in the field indicates that the voltage on the input pin was less than, equal to, or close to that on VREFN, while 0xFFF indicates that the voltage on the input was close to, equal to, or greater than that on VREFP.
0x400A004C C   FIELD 16w02 THCMPRANGE (ro): Threshold Range Comparison result. 0x0 = In Range: The last completed conversion was greater than or equal to the value programmed into the designated LOW threshold register (THRn_LOW) but less than or equal to the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x1 = Below Range: The last completed conversion on was less than the value programmed into the designated LOW threshold register (THRn_LOW). 0x2 = Above Range: The last completed conversion was greater than the value programmed into the designated HIGH threshold register (THRn_HIGH). 0x3 = Reserved.
0x400A004C C   FIELD 18w02 THCMPCROSS (ro): Threshold Crossing Comparison result. 0x0 = No threshold Crossing detected: The most recent completed conversion on this channel had the same relationship (above or below) to the threshold value established by the designated LOW threshold register (THRn_LOW) as did the previous conversion on this channel. 0x1 = Reserved. 0x2 = Downward Threshold Crossing Detected. Indicates that a threshold crossing in the downward direction has occurred - i.e. the previous sample on this channel was above the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is below that threshold. 0x3 = Upward Threshold Crossing Detected. Indicates that a threshold crossing in the upward direction has occurred - i.e. the previous sample on this channel was below the threshold value established by the designated LOW threshold register (THRn_LOW) and the current sample is above that threshold.
0x400A004C C   FIELD 26w04 CHANNEL (ro): This field is hard-coded to contain the channel number that this particular register relates to (i.e. this field will contain 0b0000 for the DAT0 register, 0b0001 for the DAT1 register, etc)
0x400A004C C   FIELD 30w01 OVERRUN (ro): This bit will be set to a 1 if a new conversion on this channel completes and overwrites the previous contents of the RESULT field before it has been read - i.e. while the DONE bit is set. This bit is cleared, along with the DONE bit, whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. This bit (in any of the 12 registers) will cause an overrun interrupt/DMA trigger to be asserted if the overrun interrupt is enabled. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A004C C   FIELD 31w01 DATAVALID (ro): This bit is set to 1 when an ADC conversion on this channel completes. This bit is cleared whenever this register is read or when the data related to this channel is read from either of the global SEQn_GDAT registers. While it is allowed to include the same channels in both conversion sequences, doing so may cause erratic behavior of the DONE and OVERRUN bits in the data registers associated with any of the channels that are shared between the two sequences. Any erratic OVERRUN behavior will also affect overrun interrupt generation, if enabled.
0x400A0050 B  REGISTER THR0_LOW (rw): ADC Low Compare Threshold register 0: Contains the lower threshold level for automatic threshold comparison for any channels linked to threshold pair 0.
0x400A0050 C   FIELD 04w12 THRLOW (rw): Low threshold value against which ADC results will be compared
0x400A0054 B  REGISTER THR1_LOW (rw): ADC Low Compare Threshold register 1: Contains the lower threshold level for automatic threshold comparison for any channels linked to threshold pair 1.
0x400A0054 C   FIELD 04w12 THRLOW (rw): Low threshold value against which ADC results will be compared
0x400A0058 B  REGISTER THR0_HIGH (rw): ADC High Compare Threshold register 0: Contains the upper threshold level for automatic threshold comparison for any channels linked to threshold pair 0.
0x400A0058 C   FIELD 04w12 THRHIGH (rw): High threshold value against which ADC results will be compared
0x400A005C B  REGISTER THR1_HIGH (rw): ADC High Compare Threshold register 1: Contains the upper threshold level for automatic threshold comparison for any channels linked to threshold pair 1.
0x400A005C C   FIELD 04w12 THRHIGH (rw): High threshold value against which ADC results will be compared
0x400A0060 B  REGISTER CHAN_THRSEL (rw): ADC Channel-Threshold Select register. Specifies which set of threshold compare registers are to be used for each channel
0x400A0060 C   FIELD 00w01 CH0_THRSEL (rw): Threshold select for channel 0.
0x400A0060 C   FIELD 01w01 CH1_THRSEL (rw): Threshold select for channel 1. See description for channel 0.
0x400A0060 C   FIELD 02w01 CH2_THRSEL (rw): Threshold select for channel 2. See description for channel 0.
0x400A0060 C   FIELD 03w01 CH3_THRSEL (rw): Threshold select for channel 3. See description for channel 0.
0x400A0060 C   FIELD 04w01 CH4_THRSEL (rw): Threshold select for channel 4. See description for channel 0.
0x400A0060 C   FIELD 05w01 CH5_THRSEL (rw): Threshold select for channel 5. See description for channel 0.
0x400A0060 C   FIELD 06w01 CH6_THRSEL (rw): Threshold select for channel 6. See description for channel 0.
0x400A0060 C   FIELD 07w01 CH7_THRSEL (rw): Threshold select for channel 7. See description for channel 0.
0x400A0060 C   FIELD 08w01 CH8_THRSEL (rw): Threshold select for channel 8. See description for channel 0.
0x400A0060 C   FIELD 09w01 CH9_THRSEL (rw): Threshold select for channel 9. See description for channel 0.
0x400A0060 C   FIELD 10w01 CH10_THRSEL (rw): Threshold select for channel 10. See description for channel 0.
0x400A0060 C   FIELD 11w01 CH11_THRSEL (rw): Threshold select for channel 11. See description for channel 0.
0x400A0064 B  REGISTER INTEN (rw): ADC Interrupt Enable register. This register contains enable bits that enable the sequence-A, sequence-B, threshold compare and data overrun interrupts to be generated.
0x400A0064 C   FIELD 00w01 SEQA_INTEN (rw): Sequence A interrupt enable.
0x400A0064 C   FIELD 01w01 SEQB_INTEN (rw): Sequence B interrupt enable.
0x400A0064 C   FIELD 02w01 OVR_INTEN (rw): Overrun interrupt enable.
0x400A0064 C   FIELD 03w02 ADCMPINTEN0 (rw): Threshold comparison interrupt enable for channel 0.
0x400A0064 C   FIELD 05w02 ADCMPINTEN1 (rw): Channel 1 threshold comparison interrupt enable. See description for channel 0.
0x400A0064 C   FIELD 07w02 ADCMPINTEN2 (rw): Channel 2 threshold comparison interrupt enable. See description for channel 0.
0x400A0064 C   FIELD 09w02 ADCMPINTEN3 (rw): Channel 3 threshold comparison interrupt enable. See description for channel 0.
0x400A0064 C   FIELD 11w02 ADCMPINTEN4 (rw): Channel 4 threshold comparison interrupt enable. See description for channel 0.
0x400A0064 C   FIELD 13w02 ADCMPINTEN5 (rw): Channel 5 threshold comparison interrupt enable. See description for channel 0.
0x400A0064 C   FIELD 15w02 ADCMPINTEN6 (rw): Channel 6 threshold comparison interrupt enable. See description for channel 0.
0x400A0064 C   FIELD 17w02 ADCMPINTEN7 (rw): Channel 7 threshold comparison interrupt enable. See description for channel 0.
0x400A0064 C   FIELD 19w02 ADCMPINTEN8 (rw): Channel 8 threshold comparison interrupt enable. See description for channel 0.
0x400A0064 C   FIELD 21w02 ADCMPINTEN9 (rw): Channel 9 threshold comparison interrupt enable. See description for channel 0.
0x400A0064 C   FIELD 23w02 ADCMPINTEN10 (rw): Channel 10 threshold comparison interrupt enable. See description for channel 0.
0x400A0064 C   FIELD 25w02 ADCMPINTEN11 (rw): Channel 21 threshold comparison interrupt enable. See description for channel 0.
0x400A0068 B  REGISTER FLAGS (rw): ADC Flags register. Contains the four interrupt/DMA trigger flags and the individual component overrun and threshold-compare flags. (The overrun bits replicate information stored in the result registers).
0x400A0068 C   FIELD 00w01 THCMP0 (rw): Threshold comparison event on Channel 0. Set to 1 upon either an out-of-range result or a threshold-crossing result if enabled to do so in the INTEN register. This bit is cleared by writing a 1.
0x400A0068 C   FIELD 01w01 THCMP1 (rw): Threshold comparison event on Channel 1. See description for channel 0.
0x400A0068 C   FIELD 02w01 THCMP2 (rw): Threshold comparison event on Channel 2. See description for channel 0.
0x400A0068 C   FIELD 03w01 THCMP3 (rw): Threshold comparison event on Channel 3. See description for channel 0.
0x400A0068 C   FIELD 04w01 THCMP4 (rw): Threshold comparison event on Channel 4. See description for channel 0.
0x400A0068 C   FIELD 05w01 THCMP5 (rw): Threshold comparison event on Channel 5. See description for channel 0.
0x400A0068 C   FIELD 06w01 THCMP6 (rw): Threshold comparison event on Channel 6. See description for channel 0.
0x400A0068 C   FIELD 07w01 THCMP7 (rw): Threshold comparison event on Channel 7. See description for channel 0.
0x400A0068 C   FIELD 08w01 THCMP8 (rw): Threshold comparison event on Channel 8. See description for channel 0.
0x400A0068 C   FIELD 09w01 THCMP9 (rw): Threshold comparison event on Channel 9. See description for channel 0.
0x400A0068 C   FIELD 10w01 THCMP10 (rw): Threshold comparison event on Channel 10. See description for channel 0.
0x400A0068 C   FIELD 11w01 THCMP11 (rw): Threshold comparison event on Channel 11. See description for channel 0.
0x400A0068 C   FIELD 12w01 OVERRUN0 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 0
0x400A0068 C   FIELD 13w01 OVERRUN1 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 1
0x400A0068 C   FIELD 14w01 OVERRUN2 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 2
0x400A0068 C   FIELD 15w01 OVERRUN3 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 3
0x400A0068 C   FIELD 16w01 OVERRUN4 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 4
0x400A0068 C   FIELD 17w01 OVERRUN5 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 5
0x400A0068 C   FIELD 18w01 OVERRUN6 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 6
0x400A0068 C   FIELD 19w01 OVERRUN7 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 7
0x400A0068 C   FIELD 20w01 OVERRUN8 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 8
0x400A0068 C   FIELD 21w01 OVERRUN9 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 9
0x400A0068 C   FIELD 22w01 OVERRUN10 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 10
0x400A0068 C   FIELD 23w01 OVERRUN11 (ro): Mirrors the OVERRRUN status flag from the result register for ADC channel 11
0x400A0068 C   FIELD 24w01 SEQA_OVR (ro): Mirrors the global OVERRUN status flag in the SEQA_GDAT register
0x400A0068 C   FIELD 25w01 SEQB_OVR (ro): Mirrors the global OVERRUN status flag in the SEQB_GDAT register
0x400A0068 C   FIELD 28w01 SEQA_INT (ro): Sequence A interrupt/DMA trigger. If the MODE bit in the SEQA_CTRL register is 0, this flag will mirror the DATAVALID bit in the sequence A global data register (SEQA_GDAT), which is set at the end of every ADC conversion performed as part of sequence A. It will be cleared automatically when the SEQA_GDAT register is read. If the MODE bit in the SEQA_CTRL register is 1, this flag will be set upon completion of an entire A sequence. In this case it must be cleared by writing a 1 to this SEQA_INT bit. This interrupt must be enabled in the INTEN register.
0x400A0068 C   FIELD 29w01 SEQB_INT (ro): Sequence A interrupt/DMA trigger. If the MODE bit in the SEQB_CTRL register is 0, this flag will mirror the DATAVALID bit in the sequence A global data register (SEQB_GDAT), which is set at the end of every ADC conversion performed as part of sequence B. It will be cleared automatically when the SEQB_GDAT register is read. If the MODE bit in the SEQB_CTRL register is 1, this flag will be set upon completion of an entire B sequence. In this case it must be cleared by writing a 1 to this SEQB_INT bit. This interrupt must be enabled in the INTEN register.
0x400A0068 C   FIELD 30w01 THCMP_INT (ro): Threshold Comparison Interrupt. This bit will be set if any of the THCMP flags in the lower bits of this register are set to 1 (due to an enabled out-of-range or threshold-crossing event on any channel). Each type of threshold comparison interrupt on each channel must be individually enabled in the INTEN register to cause this interrupt. This bit will be cleared when all of the individual threshold flags are cleared via writing 1s to those bits.
0x400A0068 C   FIELD 31w01 OVR_INT (ro): Overrun Interrupt flag. Any overrun bit in any of the individual channel data registers will cause this interrupt. In addition, if the MODE bit in either of the SEQn_CTRL registers is 0 then the OVERRUN bit in the corresponding SEQn_GDAT register will also cause this interrupt. This interrupt must be enabled in the INTEN register. This bit will be cleared when all of the individual overrun bits have been cleared via reading the corresponding data registers.
0x400A006C B  REGISTER STARTUP (rw): ADC Startup register.
0x400A006C C   FIELD 00w01 ADC_ENA (rw): ADC Enable bit. This bit can only be set to a 1 by software. It is cleared automatically whenever the ADC is powered down. This bit must not be set until at least 10 microseconds after the ADC is powered up (typically by altering a system-level ADC power control bit).
0x400A006C C   FIELD 01w01 ADC_INIT (rw): ADC Initialization. After enabling the ADC (setting the ADC_ENA bit), the API routine will EITHER set this bit or the CALIB bit in the CALIB register, depending on whether or not calibration is required. Setting this bit will launch the 'dummy' conversion cycle that is required if a calibration is not performed. It will also reload the stored calibration value from a previous calibration unless the BYPASSCAL bit is set. This bit should only be set AFTER the ADC_ENA bit is set and after the CALIREQD bit is tested to determine whether a calibration or an ADC dummy conversion cycle is required. It should not be set during the same write that sets the ADC_ENA bit. This bit can only be set to a '1' by software. It is cleared automatically when the 'dummy' conversion cycle completes.
0x400A0070 B  REGISTER CALIB (rw): ADC Calibration register.
0x400A0070 C   FIELD 00w01 CALIB (rw): Calibration request. Setting this bit will launch an ADC calibration cycle. This bit can only be set to a '1' by software. It is cleared automatically when the calibration cycle completes.
0x400A0070 C   FIELD 01w01 CALREQD (rw): Calibration required. This read-only bit indicates if calibration is required when enabling the ADC. CALREQD will be '1' if no calibration has been run since the chip was powered-up and if the BYPASSCAL bit in the CTRL register is low. Software will test this bit to determine whether to initiate a calibration cycle or whether to set the ADC_INIT bit (in the STARTUP register) to launch the ADC initialization process which includes a 'dummy' conversion cycle. Note: A 'dummy' conversion cycle requires approximately 6 ADC clocks as opposed to 81 clocks required for calibration.
0x400A0070 C   FIELD 02w07 CALVALUE (rw): Calibration Value. This read-only field displays the calibration value established during last calibration cycle. This value is not typically of any use to the user.
0x400A2000 A PERIPHERAL USBFSH
0x400A2000 B  REGISTER HCREVISION (ro): BCD representation of the version of the HCI specification that is implemented by the Host Controller (HC)
0x400A2000 C   FIELD 00w08 REV (ro): Revision.
0x400A2004 B  REGISTER HCCONTROL (rw): Defines the operating modes of the HC
0x400A2004 C   FIELD 00w02 CBSR (rw): ControlBulkServiceRatio.
0x400A2004 C   FIELD 02w01 PLE (rw): PeriodicListEnable.
0x400A2004 C   FIELD 03w01 IE (rw): IsochronousEnable.
0x400A2004 C   FIELD 04w01 CLE (rw): ControlListEnable.
0x400A2004 C   FIELD 05w01 BLE (rw): BulkListEnable This bit is set to enable the processing of the Bulk list in the next Frame.
0x400A2004 C   FIELD 06w02 HCFS (rw): HostControllerFunctionalState for USB 00b: USBRESET 01b: USBRESUME 10b: USBOPERATIONAL 11b: USBSUSPEND A transition to USBOPERATIONAL from another state causes SOFgeneration to begin 1 ms later.
0x400A2004 C   FIELD 08w01 IR (rw): InterruptRouting This bit determines the routing of interrupts generated by events registered in HcInterruptStatus.
0x400A2004 C   FIELD 09w01 RWC (rw): RemoteWakeupConnected This bit indicates whether HC supports remote wake-up signaling.
0x400A2004 C   FIELD 10w01 RWE (rw): RemoteWakeupEnable This bit is used by HCD to enable or disable the remote wake-up feature upon the detection of upstream resume signaling.
0x400A2008 B  REGISTER HCCOMMANDSTATUS (rw): This register is used to receive the commands from the Host Controller Driver (HCD)
0x400A2008 C   FIELD 00w01 HCR (rw): HostControllerReset This bit is set by HCD to initiate a software reset of HC.
0x400A2008 C   FIELD 01w01 CLF (rw): ControlListFilled This bit is used to indicate whether there are any TDs on the Control list.
0x400A2008 C   FIELD 02w01 BLF (rw): BulkListFilled This bit is used to indicate whether there are any TDs on the Bulk list.
0x400A2008 C   FIELD 03w01 OCR (rw): OwnershipChangeRequest This bit is set by an OS HCD to request a change of control of the HC.
0x400A2008 C   FIELD 06w02 SOC (rw): SchedulingOverrunCount These bits are incremented on each scheduling overrun error.
0x400A200C B  REGISTER HCINTERRUPTSTATUS (rw): Indicates the status on various events that cause hardware interrupts by setting the appropriate bits
0x400A200C C   FIELD 00w01 SO (rw): SchedulingOverrun This bit is set when the USB schedule for the current Frame overruns and after the update of HccaFrameNumber.
0x400A200C C   FIELD 01w01 WDH (rw): WritebackDoneHead This bit is set immediately after HC has written HcDoneHead to HccaDoneHead.
0x400A200C C   FIELD 02w01 SF (rw): StartofFrame This bit is set by HC at each start of a frame and after the update of HccaFrameNumber.
0x400A200C C   FIELD 03w01 RD (rw): ResumeDetected This bit is set when HC detects that a device on the USB is asserting resume signaling.
0x400A200C C   FIELD 04w01 UE (rw): UnrecoverableError This bit is set when HC detects a system error not related to USB.
0x400A200C C   FIELD 05w01 FNO (rw): FrameNumberOverflow This bit is set when the MSb of HcFmNumber (bit 15) changes value, from 0 to 1 or from 1 to 0, and after HccaFrameNumber has been updated.
0x400A200C C   FIELD 06w01 RHSC (rw): RootHubStatusChange This bit is set when the content of HcRhStatus or the content of any of HcRhPortStatus[NumberofDownstreamPort] has changed.
0x400A200C C   FIELD 10w22 OC (rw): OwnershipChange This bit is set by HC when HCD sets the OwnershipChangeRequest field in HcCommandStatus.
0x400A2010 B  REGISTER HCINTERRUPTENABLE (rw): Controls the bits in the HcInterruptStatus register and indicates which events will generate a hardware interrupt
0x400A2010 C   FIELD 00w01 SO (rw): Scheduling Overrun interrupt.
0x400A2010 C   FIELD 01w01 WDH (rw): HcDoneHead Writeback interrupt.
0x400A2010 C   FIELD 02w01 SF (rw): Start of Frame interrupt.
0x400A2010 C   FIELD 03w01 RD (rw): Resume Detect interrupt.
0x400A2010 C   FIELD 04w01 UE (rw): Unrecoverable Error interrupt.
0x400A2010 C   FIELD 05w01 FNO (rw): Frame Number Overflow interrupt.
0x400A2010 C   FIELD 06w01 RHSC (rw): Root Hub Status Change interrupt.
0x400A2010 C   FIELD 30w01 OC (rw): Ownership Change interrupt.
0x400A2010 C   FIELD 31w01 MIE (rw): Master Interrupt Enable.
0x400A2014 B  REGISTER HCINTERRUPTDISABLE (rw): The bits in this register are used to disable corresponding bits in the HCInterruptStatus register and in turn disable that event leading to hardware interrupt
0x400A2014 C   FIELD 00w01 SO (rw): Scheduling Overrun interrupt.
0x400A2014 C   FIELD 01w01 WDH (rw): HcDoneHead Writeback interrupt.
0x400A2014 C   FIELD 02w01 SF (rw): Start of Frame interrupt.
0x400A2014 C   FIELD 03w01 RD (rw): Resume Detect interrupt.
0x400A2014 C   FIELD 04w01 UE (rw): Unrecoverable Error interrupt.
0x400A2014 C   FIELD 05w01 FNO (rw): Frame Number Overflow interrupt.
0x400A2014 C   FIELD 06w01 RHSC (rw): Root Hub Status Change interrupt.
0x400A2014 C   FIELD 30w01 OC (rw): Ownership Change interrupt.
0x400A2014 C   FIELD 31w01 MIE (rw): A 0 written to this field is ignored by HC.
0x400A2018 B  REGISTER HCHCCA (rw): Contains the physical address of the host controller communication area
0x400A2018 C   FIELD 08w24 HCCA (rw): Base address of the Host Controller Communication Area.
0x400A201C B  REGISTER HCPERIODCURRENTED (rw): Contains the physical address of the current isochronous or interrupt endpoint descriptor
0x400A201C C   FIELD 04w28 PCED (rw): The content of this register is updated by HC after a periodic ED is processed.
0x400A2020 B  REGISTER HCCONTROLHEADED (rw): Contains the physical address of the first endpoint descriptor of the control list
0x400A2020 C   FIELD 04w28 CHED (rw): HC traverses the Control list starting with the HcControlHeadED pointer.
0x400A2024 B  REGISTER HCCONTROLCURRENTED (rw): Contains the physical address of the current endpoint descriptor of the control list
0x400A2024 C   FIELD 04w28 CCED (rw): ControlCurrentED.
0x400A2028 B  REGISTER HCBULKHEADED (rw): Contains the physical address of the first endpoint descriptor of the bulk list
0x400A2028 C   FIELD 04w28 BHED (rw): BulkHeadED HC traverses the bulk list starting with the HcBulkHeadED pointer.
0x400A202C B  REGISTER HCBULKCURRENTED (rw): Contains the physical address of the current endpoint descriptor of the bulk list
0x400A202C C   FIELD 04w28 BCED (rw): BulkCurrentED This is advanced to the next ED after the HC has served the current one.
0x400A2030 B  REGISTER HCDONEHEAD (rw): Contains the physical address of the last transfer descriptor added to the 'Done' queue
0x400A2030 C   FIELD 04w28 DH (rw): DoneHead When a TD is completed, HC writes the content of HcDoneHead to the NextTD field of the TD.
0x400A2034 B  REGISTER HCFMINTERVAL (rw): Defines the bit time interval in a frame and the full speed maximum packet size which would not cause an overrun
0x400A2034 C   FIELD 00w14 FI (rw): FrameInterval This specifies the interval between two consecutive SOFs in bit times.
0x400A2034 C   FIELD 16w15 FSMPS (rw): FSLargestDataPacket This field specifies a value which is loaded into the Largest Data Packet Counter at the beginning of each frame.
0x400A2034 C   FIELD 31w01 FIT (rw): FrameIntervalToggle HCD toggles this bit whenever it loads a new value to FrameInterval.
0x400A2038 B  REGISTER HCFMREMAINING (rw): A 14-bit counter showing the bit time remaining in the current frame
0x400A2038 C   FIELD 00w14 FR (rw): FrameRemaining This counter is decremented at each bit time.
0x400A2038 C   FIELD 31w01 FRT (rw): FrameRemainingToggle This bit is loaded from the FrameIntervalToggle field of HcFmInterval whenever FrameRemaining reaches 0.
0x400A203C B  REGISTER HCFMNUMBER (rw): Contains a 16-bit counter and provides the timing reference among events happening in the HC and the HCD
0x400A203C C   FIELD 00w16 FN (rw): FrameNumber This is incremented when HcFmRemaining is re-loaded.
0x400A2040 B  REGISTER HCPERIODICSTART (rw): Contains a programmable 14-bit value which determines the earliest time HC should start processing a periodic list
0x400A2040 C   FIELD 00w14 PS (rw): PeriodicStart After a hardware reset, this field is cleared and then set by HCD during the HC initialization.
0x400A2044 B  REGISTER HCLSTHRESHOLD (rw): Contains 11-bit value which is used by the HC to determine whether to commit to transfer a maximum of 8-byte LS packet before EOF
0x400A2044 C   FIELD 00w12 LST (rw): LSThreshold This field contains a value which is compared to the FrameRemaining field prior to initiating a Low Speed transaction.
0x400A2048 B  REGISTER HCRHDESCRIPTORA (rw): First of the two registers which describes the characteristics of the root hub
0x400A2048 C   FIELD 00w08 NDP (rw): NumberDownstreamPorts These bits specify the number of downstream ports supported by the root hub.
0x400A2048 C   FIELD 08w01 PSM (rw): PowerSwitchingMode This bit is used to specify how the power switching of the root hub ports is controlled.
0x400A2048 C   FIELD 09w01 NPS (rw): NoPowerSwitching These bits are used to specify whether power switching is supported or port are always powered.
0x400A2048 C   FIELD 10w01 DT (rw): DeviceType This bit specifies that the root hub is not a compound device.
0x400A2048 C   FIELD 11w01 OCPM (rw): OverCurrentProtectionMode This bit describes how the overcurrent status for the root hub ports are reported.
0x400A2048 C   FIELD 12w01 NOCP (rw): NoOverCurrentProtection This bit describes how the overcurrent status for the root hub ports are reported.
0x400A2048 C   FIELD 24w08 POTPGT (rw): PowerOnToPowerGoodTime This byte specifies the duration the HCD has to wait before accessing a powered-on port of the root hub.
0x400A204C B  REGISTER HCRHDESCRIPTORB (rw): Second of the two registers which describes the characteristics of the Root Hub
0x400A204C C   FIELD 00w16 DR (rw): DeviceRemovable Each bit is dedicated to a port of the Root Hub.
0x400A204C C   FIELD 16w16 PPCM (rw): PortPowerControlMask Each bit indicates if a port is affected by a global power control command when PowerSwitchingMode is set.
0x400A2050 B  REGISTER HCRHSTATUS (rw): This register is divided into two parts
0x400A2050 C   FIELD 00w01 LPS (rw): (read) LocalPowerStatus The Root Hub does not support the local power status feature; thus, this bit is always read as 0.
0x400A2050 C   FIELD 01w01 OCI (rw): OverCurrentIndicator This bit reports overcurrent conditions when the global reporting is implemented.
0x400A2050 C   FIELD 15w01 DRWE (rw): (read) DeviceRemoteWakeupEnable This bit enables a ConnectStatusChange bit as a resume event, causing a USBSUSPEND to USBRESUME state transition and setting the ResumeDetected interrupt.
0x400A2050 C   FIELD 16w01 LPSC (rw): (read) LocalPowerStatusChange The root hub does not support the local power status feature.
0x400A2050 C   FIELD 17w01 OCIC (rw): OverCurrentIndicatorChange This bit is set by hardware when a change has occurred to the OCI field of this register.
0x400A2050 C   FIELD 31w01 CRWE (rw): (write) ClearRemoteWakeupEnable Writing a 1 clears DeviceRemoveWakeupEnable.
0x400A2054 B  REGISTER HCRHPORTSTATUS (rw): Controls and reports the port events on a per-port basis
0x400A2054 C   FIELD 00w01 CCS (rw): (read) CurrentConnectStatus This bit reflects the current state of the downstream port.
0x400A2054 C   FIELD 01w01 PES (rw): (read) PortEnableStatus This bit indicates whether the port is enabled or disabled.
0x400A2054 C   FIELD 02w01 PSS (rw): (read) PortSuspendStatus This bit indicates the port is suspended or in the resume sequence.
0x400A2054 C   FIELD 03w01 POCI (rw): (read) PortOverCurrentIndicator This bit is only valid when the Root Hub is configured in such a way that overcurrent conditions are reported on a per-port basis.
0x400A2054 C   FIELD 04w01 PRS (rw): (read) PortResetStatus When this bit is set by a write to SetPortReset, port reset signaling is asserted.
0x400A2054 C   FIELD 08w01 PPS (rw): (read) PortPowerStatus This bit reflects the porta's power status, regardless of the type of power switching implemented.
0x400A2054 C   FIELD 09w01 LSDA (rw): (read) LowSpeedDeviceAttached This bit indicates the speed of the device attached to this port.
0x400A2054 C   FIELD 16w01 CSC (rw): ConnectStatusChange This bit is set whenever a connect or disconnect event occurs.
0x400A2054 C   FIELD 17w01 PESC (rw): PortEnableStatusChange This bit is set when hardware events cause the PortEnableStatus bit to be cleared.
0x400A2054 C   FIELD 18w01 PSSC (rw): PortSuspendStatusChange This bit is set when the full resume sequence is completed.
0x400A2054 C   FIELD 19w01 OCIC (rw): PortOverCurrentIndicatorChange This bit is valid only if overcurrent conditions are reported on a per-port basis.
0x400A2054 C   FIELD 20w01 PRSC (rw): PortResetStatusChange This bit is set at the end of the 10 ms port reset signal.
0x400A205C B  REGISTER PORTMODE (rw): Controls the port if it is attached to the host block or the device block
0x400A205C C   FIELD 00w01 ID (rw): Port ID pin value.
0x400A205C C   FIELD 08w01 ID_EN (rw): Port ID pin pull-up enable.
0x400A205C C   FIELD 16w01 DEV_ENABLE (rw): 1: device 0: host.
0x400A3000 A PERIPHERAL USBHSH
0x400A3000 B  REGISTER CAPLENGTH_CHIPID (ro): This register contains the offset value towards the start of the operational register space and the version number of the IP block
0x400A3000 C   FIELD 00w08 CAPLENGTH (ro): Capability Length: This is used as an offset.
0x400A3000 C   FIELD 16w16 CHIPID (ro): Chip identification: indicates major and minor revision of the IP: [31:24] = Major revision [23:16] = Minor revision Major revisions used: 0x01: USB2.
0x400A3004 B  REGISTER HCSPARAMS (ro): Host Controller Structural Parameters
0x400A3004 C   FIELD 00w04 N_PORTS (ro): This register specifies the number of physical downstream ports implemented on this host controller.
0x400A3004 C   FIELD 04w01 PPC (ro): This field indicates whether the host controller implementation includes port power control.
0x400A3004 C   FIELD 16w01 P_INDICATOR (ro): This bit indicates whether the ports support port indicator control.
0x400A3008 B  REGISTER HCCPARAMS (ro): Host Controller Capability Parameters
0x400A3008 C   FIELD 17w01 LPMC (ro): Link Power Management Capability.
0x400A300C B  REGISTER FLADJ_FRINDEX (rw): Frame Length Adjustment
0x400A300C C   FIELD 00w06 FLADJ (rw): Frame Length Timing Value.
0x400A300C C   FIELD 16w14 FRINDEX (rw): Frame Index: Bits 29 to16 in this register are used for the frame number field in the SOF packet.
0x400A3010 B  REGISTER ATL_PTD_BASE_ADDR (rw): Memory base address where ATL PTD0 is stored
0x400A3010 C   FIELD 04w05 ATL_CUR (rw): This indicates the current PTD that is used by the hardware when it is processing the ATL list.
0x400A3010 C   FIELD 09w23 ATL_BASE (rw): Base address to be used by the hardware to find the start of the ATL list.
0x400A3014 B  REGISTER ISO_PTD_BASE_ADDR (rw): Memory base address where ISO PTD0 is stored
0x400A3014 C   FIELD 05w05 ISO_FIRST (rw): This indicates the first PTD that is used by the hardware when it is processing the ISO list.
0x400A3014 C   FIELD 10w22 ISO_BASE (rw): Base address to be used by the hardware to find the start of the ISO list.
0x400A3018 B  REGISTER INT_PTD_BASE_ADDR (rw): Memory base address where INT PTD0 is stored
0x400A3018 C   FIELD 05w05 INT_FIRST (rw): This indicates the first PTD that is used by the hardware when it is processing the INT list.
0x400A3018 C   FIELD 10w22 INT_BASE (rw): Base address to be used by the hardware to find the start of the INT list.
0x400A301C B  REGISTER DATA_PAYLOAD_BASE_ADDR (rw): Memory base address that indicates the start of the data payload buffers
0x400A301C C   FIELD 16w16 DAT_BASE (rw): Base address to be used by the hardware to find the start of the data payload section.
0x400A3020 B  REGISTER USBCMD (rw): USB Command register
0x400A3020 C   FIELD 00w01 RS (rw): Run/Stop: 1b = Run.
0x400A3020 C   FIELD 01w01 HCRESET (rw): Host Controller Reset: This control bit is used by the software to reset the host controller.
0x400A3020 C   FIELD 02w02 FLS (rw): Frame List Size: This field specifies the size of the frame list.
0x400A3020 C   FIELD 07w01 LHCR (rw): Light Host Controller Reset: This bit allows the driver software to reset the host controller without affecting the state of the ports.
0x400A3020 C   FIELD 08w01 ATL_EN (rw): ATL List enabled.
0x400A3020 C   FIELD 09w01 ISO_EN (rw): ISO List enabled.
0x400A3020 C   FIELD 10w01 INT_EN (rw): INT List enabled.
0x400A3020 C   FIELD 24w04 HIRD (rw): Host-Initiated Resume Duration.
0x400A3020 C   FIELD 28w01 LPM_RWU (rw): bRemoteWake field.
0x400A3024 B  REGISTER USBSTS (rw): USB Interrupt Status register
0x400A3024 C   FIELD 02w01 PCD (rw): Port Change Detect: The host controller sets this bit to logic 1 when any port has a change bit transition from a 0 to a one or a Force Port Resume bit transition from a 0 to a 1 as a result of a J-K transition detected on a suspended port.
0x400A3024 C   FIELD 03w01 FLR (rw): Frame List Rollover: The host controller sets this bit to logic 1 when the frame list index rolls over its maximum value to 0.
0x400A3024 C   FIELD 16w01 ATL_IRQ (rw): ATL IRQ: Indicates that an ATL PTD (with I-bit set) was completed.
0x400A3024 C   FIELD 17w01 ISO_IRQ (rw): ISO IRQ: Indicates that an ISO PTD (with I-bit set) was completed.
0x400A3024 C   FIELD 18w01 INT_IRQ (rw): INT IRQ: Indicates that an INT PTD (with I-bit set) was completed.
0x400A3024 C   FIELD 19w01 SOF_IRQ (rw): SOF interrupt: Every time when the host sends a Start of Frame token on the USB bus, this bit is set.
0x400A3028 B  REGISTER USBINTR (rw): USB Interrupt Enable register
0x400A3028 C   FIELD 02w01 PCDE (rw): Port Change Detect Interrupt Enable: 1: enable 0: disable.
0x400A3028 C   FIELD 03w01 FLRE (rw): Frame List Rollover Interrupt Enable: 1: enable 0: disable.
0x400A3028 C   FIELD 16w01 ATL_IRQ_E (rw): ATL IRQ Enable bit: 1: enable 0: disable.
0x400A3028 C   FIELD 17w01 ISO_IRQ_E (rw): ISO IRQ Enable bit: 1: enable 0: disable.
0x400A3028 C   FIELD 18w01 INT_IRQ_E (rw): INT IRQ Enable bit: 1: enable 0: disable.
0x400A3028 C   FIELD 19w01 SOF_E (rw): SOF Interrupt Enable bit: 1: enable 0: disable.
0x400A302C B  REGISTER PORTSC1 (rw): Port Status and Control register
0x400A302C C   FIELD 00w01 CCS (rw): Current Connect Status: Logic 1 indicates a device is present on the port.
0x400A302C C   FIELD 01w01 CSC (rw): Connect Status Change: Logic 1 means that the value of CCS has changed.
0x400A302C C   FIELD 02w01 PED (rw): Port Enabled/Disabled.
0x400A302C C   FIELD 03w01 PEDC (rw): Port Enabled/Disabled Change: Logic 1 means that the value of PED has changed.
0x400A302C C   FIELD 04w01 OCA (rw): Over-current active: Logic 1 means that this port has an over-current condition.
0x400A302C C   FIELD 05w01 OCC (rw): Over-current change: Logic 1 means that the value of OCA has changed.
0x400A302C C   FIELD 06w01 FPR (rw): Force Port Resume: Logic 1 means resume (K-state) detected or driven on the port.
0x400A302C C   FIELD 07w01 SUSP (rw): Suspend: Logic 1 means port is in the suspend state.
0x400A302C C   FIELD 08w01 PR (rw): Port Reset: Logic 1 means the port is in the reset state.
0x400A302C C   FIELD 09w01 SUS_L1 (rw): Suspend using L1 0b = Suspend using L2 1b = Suspend using L1 When this bit is set to a 1 and a non-zero value is specified in the Device Address field, the host controller will generate an LPM Token to enter the L1 state whenever software writes a one to the Suspend bit, as well as L1 exit timing during any device or host-initiated resume.
0x400A302C C   FIELD 10w02 LS (ro): Line Status: This field reflects the current logical levels of the DP (bit 11) and DM (bit 10) signal lines.
0x400A302C C   FIELD 12w01 PP (rw): Port Power: The function of this bit depends on the value of the Port Power Control (PPC) bit in the HCSPARAMS register.
0x400A302C C   FIELD 14w02 PIC (rw): Port Indicator Control : Writing to this field has no effect if the P_INDICATOR bit in the HCSPARAMS register is logic 0.
0x400A302C C   FIELD 16w04 PTC (rw): Port Test Control: A non-zero value indicates that the port is operating in the test mode as indicated by the value.
0x400A302C C   FIELD 20w02 PSPD (rw): Port Speed: 00b: Low-speed 01b: Full-speed 10b: High-speed 11b: Reserved.
0x400A302C C   FIELD 22w01 WOO (rw): Wake on overcurrent enable: Writing this bit to a one enables the port to be sensitive to overcurrent conditions as wake-up events.
0x400A302C C   FIELD 23w02 SUS_STAT (rw): These two bits are used by software to determine whether the most recent L1 suspend request was successful: 00b: Success-state transition was successful (ACK) 01b: Not Yet - Device was unable to enter the L1 state at this time (NYET) 10b: Not supported - Device does not support the L1 state (STALL) 11b: Timeout/Error - Device failed to respond or an error occurred.
0x400A302C C   FIELD 25w07 DEV_ADD (rw): Device Address for LPM tokens.
0x400A3030 B  REGISTER ATL_PTD_DONE_MAP (rw): Done map for each ATL PTD
0x400A3030 C   FIELD 00w32 ATL_DONE (rw): The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed.
0x400A3034 B  REGISTER ATL_PTD_SKIP_MAP (rw): Skip map for each ATL PTD
0x400A3034 C   FIELD 00w32 ATL_SKIP (rw): When a bit in the PTD Skip Map is set to logic 1, the corresponding PTD will be skipped, independent of the V bit setting.
0x400A3038 B  REGISTER ISO_PTD_DONE_MAP (rw): Done map for each ISO PTD
0x400A3038 C   FIELD 00w32 ISO_DONE (rw): The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed.
0x400A303C B  REGISTER ISO_PTD_SKIP_MAP (rw): Skip map for each ISO PTD
0x400A303C C   FIELD 00w32 ISO_SKIP (rw): The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed.
0x400A3040 B  REGISTER INT_PTD_DONE_MAP (rw): Done map for each INT PTD
0x400A3040 C   FIELD 00w32 INT_DONE (rw): The bit corresponding to a certain PTD will be set to logic 1 as soon as that PTD execution is completed.
0x400A3044 B  REGISTER INT_PTD_SKIP_MAP (rw): Skip map for each INT PTD
0x400A3044 C   FIELD 00w32 INT_SKIP (rw): When a bit in the PTD Skip Map is set to logic 1, the corresponding PTD will be skipped, independent of the V bit setting.
0x400A3048 B  REGISTER LAST_PTD_INUSE (rw): Marks the last PTD in the list for ISO, INT and ATL
0x400A3048 C   FIELD 00w05 ATL_LAST (rw): If hardware has reached this PTD and the J bit is not set, it will go to PTD0 as the next PTD to be processed.
0x400A3048 C   FIELD 08w05 ISO_LAST (rw): This indicates the last PTD in the ISO list.
0x400A3048 C   FIELD 16w05 INT_LAST (rw): This indicates the last PTD in the INT list.
0x400A304C B  REGISTER UTMIPLUS_ULPI_DEBUG (rw): Register to read/write registers in the attached USB PHY
0x400A304C C   FIELD 00w08 PHY_ADDR (rw): UTMI+ mode: Bits 3:0 are used to control VControl signal on Vendor Interface of UTMI+ ULPI mode: Bits 7:0 are used as the address when doing a register access over the ULPI interface.
0x400A304C C   FIELD 08w08 PHY_WDATA (rw): UTMI+ mode: Reserved.
0x400A304C C   FIELD 16w08 PHY_RDATA (rw): UTMI+ mode: Bits 7:0 contains the value returned by the VStatus signal on Vendor Interface of UTMI+ ULPI mode: Bits 7:0 are used for the read data when reading a value to a ULPI PHY register.
0x400A304C C   FIELD 24w01 PHY_RW (rw): UTMI+ mode: Reserved.
0x400A304C C   FIELD 25w01 PHY_ACCESS (rw): Software writes this bit to one to start a read or write operation.
0x400A304C C   FIELD 31w01 PHY_MODE (rw): This bit indicates if the interface between the controller is UTMI+ or ULPI 0b: UTMI+ 1b: ULPI If the hardware supports both modes, this bit is RW by SW.
0x400A3050 B  REGISTER PORTMODE (rw): Controls the port if it is attached to the host block or the device block
0x400A3050 C   FIELD 00w01 ID0 (rw): Port 0 ID pin value.
0x400A3050 C   FIELD 08w01 ID0_EN (rw): Port 0 ID pin pull-up enable.
0x400A3050 C   FIELD 16w01 DEV_ENABLE (rw): If this bit is set to one, one of the ports will behave as a USB device.
0x400A3050 C   FIELD 18w01 SW_CTRL_PDCOM (rw): This bit indicates if the PHY power-down input is controlled by software or by hardware.
0x400A3050 C   FIELD 19w01 SW_PDCOM (rw): This bit is only used when SW_CTRL_PDCOM is set to 1b.
0xE0000000 A PERIPHERAL ITM
0xE0000000 B  REGISTER STIM0_READ (rw): Stimulus Port Register 0 (for reading)
0xE0000000 B  REGISTER STIM0_WRITE (rw): Stimulus Port Register 0 (for writing)
0xE0000000 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000000 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000004 B  REGISTER STIM1_READ (rw): Stimulus Port Register 1 (for reading)
0xE0000004 B  REGISTER STIM1_WRITE (rw): Stimulus Port Register 1 (for writing)
0xE0000004 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000004 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000008 B  REGISTER STIM2_READ (rw): Stimulus Port Register 2 (for reading)
0xE0000008 B  REGISTER STIM2_WRITE (rw): Stimulus Port Register 2 (for writing)
0xE0000008 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000008 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE000000C B  REGISTER STIM3_READ (rw): Stimulus Port Register 3 (for reading)
0xE000000C B  REGISTER STIM3_WRITE (rw): Stimulus Port Register 3 (for writing)
0xE000000C C   FIELD 00w01 FIFOREADY (rw): no description available
0xE000000C C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000010 B  REGISTER STIM4_READ (rw): Stimulus Port Register 4 (for reading)
0xE0000010 B  REGISTER STIM4_WRITE (rw): Stimulus Port Register 4 (for writing)
0xE0000010 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000010 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000014 B  REGISTER STIM5_READ (rw): Stimulus Port Register 5 (for reading)
0xE0000014 B  REGISTER STIM5_WRITE (rw): Stimulus Port Register 5 (for writing)
0xE0000014 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000014 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000018 B  REGISTER STIM6_READ (rw): Stimulus Port Register 6 (for reading)
0xE0000018 B  REGISTER STIM6_WRITE (rw): Stimulus Port Register 6 (for writing)
0xE0000018 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000018 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE000001C B  REGISTER STIM7_READ (rw): Stimulus Port Register 7 (for reading)
0xE000001C B  REGISTER STIM7_WRITE (rw): Stimulus Port Register 7 (for writing)
0xE000001C C   FIELD 00w01 FIFOREADY (rw): no description available
0xE000001C C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000020 B  REGISTER STIM8_READ (rw): Stimulus Port Register 8 (for reading)
0xE0000020 B  REGISTER STIM8_WRITE (rw): Stimulus Port Register 8 (for writing)
0xE0000020 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000020 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000024 B  REGISTER STIM9_READ (rw): Stimulus Port Register 9 (for reading)
0xE0000024 B  REGISTER STIM9_WRITE (rw): Stimulus Port Register 9 (for writing)
0xE0000024 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000024 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000028 B  REGISTER STIM10_READ (rw): Stimulus Port Register 10 (for reading)
0xE0000028 B  REGISTER STIM10_WRITE (rw): Stimulus Port Register 10 (for writing)
0xE0000028 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000028 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE000002C B  REGISTER STIM11_READ (rw): Stimulus Port Register 11 (for reading)
0xE000002C B  REGISTER STIM11_WRITE (rw): Stimulus Port Register 11 (for writing)
0xE000002C C   FIELD 00w01 FIFOREADY (rw): no description available
0xE000002C C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000030 B  REGISTER STIM12_READ (rw): Stimulus Port Register 12 (for reading)
0xE0000030 B  REGISTER STIM12_WRITE (rw): Stimulus Port Register 12 (for writing)
0xE0000030 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000030 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000034 B  REGISTER STIM13_READ (rw): Stimulus Port Register 13 (for reading)
0xE0000034 B  REGISTER STIM13_WRITE (rw): Stimulus Port Register 13 (for writing)
0xE0000034 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000034 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000038 B  REGISTER STIM14_READ (rw): Stimulus Port Register 14 (for reading)
0xE0000038 B  REGISTER STIM14_WRITE (rw): Stimulus Port Register 14 (for writing)
0xE0000038 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000038 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE000003C B  REGISTER STIM15_READ (rw): Stimulus Port Register 15 (for reading)
0xE000003C B  REGISTER STIM15_WRITE (rw): Stimulus Port Register 15 (for writing)
0xE000003C C   FIELD 00w01 FIFOREADY (rw): no description available
0xE000003C C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000040 B  REGISTER STIM16_READ (rw): Stimulus Port Register 16 (for reading)
0xE0000040 B  REGISTER STIM16_WRITE (rw): Stimulus Port Register 16 (for writing)
0xE0000040 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000040 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000044 B  REGISTER STIM17_READ (rw): Stimulus Port Register 17 (for reading)
0xE0000044 B  REGISTER STIM17_WRITE (rw): Stimulus Port Register 17 (for writing)
0xE0000044 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000044 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000048 B  REGISTER STIM18_READ (rw): Stimulus Port Register 18 (for reading)
0xE0000048 B  REGISTER STIM18_WRITE (rw): Stimulus Port Register 18 (for writing)
0xE0000048 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000048 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE000004C B  REGISTER STIM19_READ (rw): Stimulus Port Register 19 (for reading)
0xE000004C B  REGISTER STIM19_WRITE (rw): Stimulus Port Register 19 (for writing)
0xE000004C C   FIELD 00w01 FIFOREADY (rw): no description available
0xE000004C C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000050 B  REGISTER STIM20_READ (rw): Stimulus Port Register 20 (for reading)
0xE0000050 B  REGISTER STIM20_WRITE (rw): Stimulus Port Register 20 (for writing)
0xE0000050 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000050 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000054 B  REGISTER STIM21_READ (rw): Stimulus Port Register 21 (for reading)
0xE0000054 B  REGISTER STIM21_WRITE (rw): Stimulus Port Register 21 (for writing)
0xE0000054 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000054 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000058 B  REGISTER STIM22_READ (rw): Stimulus Port Register 22 (for reading)
0xE0000058 B  REGISTER STIM22_WRITE (rw): Stimulus Port Register 22 (for writing)
0xE0000058 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000058 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE000005C B  REGISTER STIM23_READ (rw): Stimulus Port Register 23 (for reading)
0xE000005C B  REGISTER STIM23_WRITE (rw): Stimulus Port Register 23 (for writing)
0xE000005C C   FIELD 00w01 FIFOREADY (rw): no description available
0xE000005C C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000060 B  REGISTER STIM24_READ (rw): Stimulus Port Register 24 (for reading)
0xE0000060 B  REGISTER STIM24_WRITE (rw): Stimulus Port Register 24 (for writing)
0xE0000060 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000060 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000064 B  REGISTER STIM25_READ (rw): Stimulus Port Register 25 (for reading)
0xE0000064 B  REGISTER STIM25_WRITE (rw): Stimulus Port Register 25 (for writing)
0xE0000064 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000064 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000068 B  REGISTER STIM26_READ (rw): Stimulus Port Register 26 (for reading)
0xE0000068 B  REGISTER STIM26_WRITE (rw): Stimulus Port Register 26 (for writing)
0xE0000068 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000068 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE000006C B  REGISTER STIM27_READ (rw): Stimulus Port Register 27 (for reading)
0xE000006C B  REGISTER STIM27_WRITE (rw): Stimulus Port Register 27 (for writing)
0xE000006C C   FIELD 00w01 FIFOREADY (rw): no description available
0xE000006C C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000070 B  REGISTER STIM28_READ (rw): Stimulus Port Register 28 (for reading)
0xE0000070 B  REGISTER STIM28_WRITE (rw): Stimulus Port Register 28 (for writing)
0xE0000070 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000070 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000074 B  REGISTER STIM29_READ (rw): Stimulus Port Register 29 (for reading)
0xE0000074 B  REGISTER STIM29_WRITE (rw): Stimulus Port Register 29 (for writing)
0xE0000074 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000074 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000078 B  REGISTER STIM30_READ (rw): Stimulus Port Register 30 (for reading)
0xE0000078 B  REGISTER STIM30_WRITE (rw): Stimulus Port Register 30 (for writing)
0xE0000078 C   FIELD 00w01 FIFOREADY (rw): no description available
0xE0000078 C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE000007C B  REGISTER STIM31_READ (rw): Stimulus Port Register 31 (for reading)
0xE000007C B  REGISTER STIM31_WRITE (rw): Stimulus Port Register 31 (for writing)
0xE000007C C   FIELD 00w01 FIFOREADY (rw): no description available
0xE000007C C   FIELD 00w32 STIMULUS (rw): Data write to the stimulus port FIFO, for forwarding as a software event packet.
0xE0000E00 B  REGISTER TER (rw): Trace Enable Register
0xE0000E00 C   FIELD 00w32 STIMENA (rw): For bit STIMENA[n], in register ITM_TERx: 0 = Stimulus port (32x + n) disabled 1 = Stimulus port (32x + n) enabled
0xE0000E40 B  REGISTER TPR (rw): Trace Privilege Register
0xE0000E40 C   FIELD 00w04 PRIVMASK (rw): Bit mask to enable tracing on ITM stimulus ports: Bit [0] = stimulus port [7:0] Bit [1] = stimulus port [15:8] Bit [2] = stimulus port [23:16] Bit [3] = stimulus port [31:24]
0xE0000E80 B  REGISTER TCR (rw): Trace Control Register
0xE0000E80 C   FIELD 00w01 ITMENA (rw): no description available
0xE0000E80 C   FIELD 01w01 TSENA (rw): no description available
0xE0000E80 C   FIELD 02w01 SYNCENA (rw): no description available
0xE0000E80 C   FIELD 03w01 TXENA (rw): no description available
0xE0000E80 C   FIELD 04w01 SWOENA (rw): no description available
0xE0000E80 C   FIELD 08w02 TSPrescale (rw): Local timestamp prescaler, used with the trace packet reference clock.
0xE0000E80 C   FIELD 10w02 GTSFREQ (rw): Global timestamp frequency. Defines how often the ITM generates a global timestamp, based on the global timestamp clock frequency, or disables generation of global timestamps.
0xE0000E80 C   FIELD 16w07 TraceBusID (rw): Identifier for multi-source trace stream formatting. If multi-source trace is in use, the debugger must write a non-zero value to this field.
0xE0000E80 C   FIELD 23w01 BUSY (ro): Indicates whether the ITM is currently processing events: 0: ITM is not processing any events. 1: ITM events present and being drained.
0xE0000FB0 B  REGISTER LAR (rw): Lock Access Register
0xE0000FB0 C   FIELD 00w32 WriteAccessCode (rw): Write Access Code. A write of 0xC5ACCE55 enables further write access to this device. An invalid write will have the affect of removing write access.
0xE0000FB4 B  REGISTER LSR (ro): Lock Status Register
0xE0000FB4 C   FIELD 00w01 IMP (ro): Lock mechanism is implemented. This bit always reads 1.
0xE0000FB4 C   FIELD 01w01 STATUS (ro): Lock Status. This bit is HIGH when the device is locked, and LOW when unlocked.
0xE0000FB4 C   FIELD 02w01 s8BIT (ro): Access Lock Register size. This bit reads 0 to indicate a 32-bit register is present.
0xE0000FD0 B  REGISTER PID4 (ro): Peripheral Identification Register 4.
0xE0000FD0 C   FIELD 00w04 JEP106 (ro): JEP106 continuation code.
0xE0000FD0 C   FIELD 04w04 c4KB (ro): 4KB Count
0xE0000FD4 B  REGISTER PID5 (ro): Peripheral Identification Register 5.
0xE0000FD8 B  REGISTER PID6 (ro): Peripheral Identification Register 6.
0xE0000FDC B  REGISTER PID7 (ro): Peripheral Identification Register 7.
0xE0000FE0 B  REGISTER PID0 (ro): Peripheral Identification Register 0.
0xE0000FE0 C   FIELD 00w08 PartNumber (ro): Part Number [7:0]
0xE0000FE4 B  REGISTER PID1 (ro): Peripheral Identification Register 1.
0xE0000FE4 C   FIELD 00w04 PartNumber (ro): Part Number [11:8]
0xE0000FE4 C   FIELD 04w04 JEP106_identity_code (ro): JEP106 identity code [3:0]
0xE0000FE8 B  REGISTER PID2 (ro): Peripheral Identification Register 2.
0xE0000FE8 C   FIELD 00w03 JEP106_identity_code (ro): JEP106 identity code [6:4]
0xE0000FE8 C   FIELD 04w04 Revision (ro): Revision
0xE0000FEC B  REGISTER PID3 (ro): Peripheral Identification Register 3.
0xE0000FEC C   FIELD 00w04 CustomerModified (ro): Customer Modified.
0xE0000FEC C   FIELD 04w04 RevAnd (ro): RevAnd
0xE0000FF0 B  REGISTER CID0 (ro): Component Identification Register 0.
0xE0000FF0 C   FIELD 00w08 Preamble (ro): Preamble
0xE0000FF4 B  REGISTER CID1 (ro): Component Identification Register 1.
0xE0000FF4 C   FIELD 00w04 Preamble (ro): Preamble
0xE0000FF4 C   FIELD 04w04 ComponentClass (ro): Component class
0xE0000FF8 B  REGISTER CID2 (ro): Component Identification Register 2.
0xE0000FF8 C   FIELD 00w08 Preamble (ro): Preamble
0xE0000FFC B  REGISTER CID3 (ro): Component Identification Register 3.
0xE0000FFC C   FIELD 00w08 Preamble (ro): Preamble
0xE000E000 A PERIPHERAL SystemControl
0xE000E008 B  REGISTER ACTLR (rw): Auxiliary Control Register,
0xE000E008 C   FIELD 00w01 DISMCYCINT (rw): Disables interruption of multi-cycle instructions.
0xE000E008 C   FIELD 01w01 DISDEFWBUF (rw): Disables write buffer use during default memory map accesses.
0xE000E008 C   FIELD 02w01 DISFOLD (rw): Disables folding of IT instructions.
0xE000E010 A PERIPHERAL SysTick
0xE000E010 B  REGISTER CSR (rw): SysTick Control and Status Register
0xE000E010 C   FIELD 00w01 ENABLE (rw): no description available
0xE000E010 C   FIELD 01w01 TICKINT (rw): no description available
0xE000E010 C   FIELD 02w01 CLKSOURCE (rw): no description available
0xE000E010 C   FIELD 16w01 COUNTFLAG (rw): no description available
0xE000E014 B  REGISTER RVR (rw): SysTick Reload Value Register
0xE000E014 C   FIELD 00w24 RELOAD (rw): Value to load into the SysTick Current Value Register when the counter reaches 0
0xE000E018 B  REGISTER CVR (rw): SysTick Current Value Register
0xE000E018 C   FIELD 00w24 CURRENT (rw): Current value at the time the register is accessed
0xE000E01C B  REGISTER CALIB (ro): SysTick Calibration Value Register
0xE000E01C C   FIELD 00w24 TENMS (ro): Reload value to use for 10ms timing
0xE000E01C C   FIELD 30w01 SKEW (ro): no description available
0xE000E01C C   FIELD 31w01 NOREF (ro): no description available
0xE000E100 A PERIPHERAL NVIC
0xE000E100 B  REGISTER NVICISER0 (rw): Interrupt Set Enable Register n
0xE000E100 C   FIELD 00w32 SETENA (rw): Interrupt set enable bits
0xE000E104 B  REGISTER NVICISER1 (rw): Interrupt Set Enable Register n
0xE000E104 C   FIELD 00w32 SETENA (rw): Interrupt set enable bits
0xE000E108 B  REGISTER NVICISER2 (rw): Interrupt Set Enable Register n
0xE000E108 C   FIELD 00w32 SETENA (rw): Interrupt set enable bits
0xE000E10C B  REGISTER NVICISER3 (rw): Interrupt Set Enable Register n
0xE000E10C C   FIELD 00w32 SETENA (rw): Interrupt set enable bits
0xE000E180 B  REGISTER NVICICER0 (rw): Interrupt Clear Enable Register n
0xE000E180 C   FIELD 00w32 CLRENA (rw): Interrupt clear-enable bits
0xE000E184 B  REGISTER NVICICER1 (rw): Interrupt Clear Enable Register n
0xE000E184 C   FIELD 00w32 CLRENA (rw): Interrupt clear-enable bits
0xE000E188 B  REGISTER NVICICER2 (rw): Interrupt Clear Enable Register n
0xE000E188 C   FIELD 00w32 CLRENA (rw): Interrupt clear-enable bits
0xE000E18C B  REGISTER NVICICER3 (rw): Interrupt Clear Enable Register n
0xE000E18C C   FIELD 00w32 CLRENA (rw): Interrupt clear-enable bits
0xE000E200 B  REGISTER NVICISPR0 (rw): Interrupt Set Pending Register n
0xE000E200 C   FIELD 00w32 SETPEND (rw): Interrupt set-pending bits
0xE000E204 B  REGISTER NVICISPR1 (rw): Interrupt Set Pending Register n
0xE000E204 C   FIELD 00w32 SETPEND (rw): Interrupt set-pending bits
0xE000E208 B  REGISTER NVICISPR2 (rw): Interrupt Set Pending Register n
0xE000E208 C   FIELD 00w32 SETPEND (rw): Interrupt set-pending bits
0xE000E20C B  REGISTER NVICISPR3 (rw): Interrupt Set Pending Register n
0xE000E20C C   FIELD 00w32 SETPEND (rw): Interrupt set-pending bits
0xE000E280 B  REGISTER NVICICPR0 (rw): Interrupt Clear Pending Register n
0xE000E280 C   FIELD 00w32 CLRPEND (rw): Interrupt clear-pending bits
0xE000E284 B  REGISTER NVICICPR1 (rw): Interrupt Clear Pending Register n
0xE000E284 C   FIELD 00w32 CLRPEND (rw): Interrupt clear-pending bits
0xE000E288 B  REGISTER NVICICPR2 (rw): Interrupt Clear Pending Register n
0xE000E288 C   FIELD 00w32 CLRPEND (rw): Interrupt clear-pending bits
0xE000E28C B  REGISTER NVICICPR3 (rw): Interrupt Clear Pending Register n
0xE000E28C C   FIELD 00w32 CLRPEND (rw): Interrupt clear-pending bits
0xE000E300 B  REGISTER NVICIABR0 (rw): Interrupt Active bit Register n
0xE000E300 C   FIELD 00w32 ACTIVE (rw): Interrupt active flags
0xE000E304 B  REGISTER NVICIABR1 (rw): Interrupt Active bit Register n
0xE000E304 C   FIELD 00w32 ACTIVE (rw): Interrupt active flags
0xE000E308 B  REGISTER NVICIABR2 (rw): Interrupt Active bit Register n
0xE000E308 C   FIELD 00w32 ACTIVE (rw): Interrupt active flags
0xE000E30C B  REGISTER NVICIABR3 (rw): Interrupt Active bit Register n
0xE000E30C C   FIELD 00w32 ACTIVE (rw): Interrupt active flags
0xE000E400 B  REGISTER NVICIP0 (rw): Interrupt Priority Register n
0xE000E400 C   FIELD 00w08 PRI0 (rw): Priority of interrupt 0
0xE000E401 B  REGISTER NVICIP1 (rw): Interrupt Priority Register n
0xE000E401 C   FIELD 00w08 PRI1 (rw): Priority of interrupt 1
0xE000E402 B  REGISTER NVICIP2 (rw): Interrupt Priority Register n
0xE000E402 C   FIELD 00w08 PRI2 (rw): Priority of interrupt 2
0xE000E403 B  REGISTER NVICIP3 (rw): Interrupt Priority Register n
0xE000E403 C   FIELD 00w08 PRI3 (rw): Priority of interrupt 3
0xE000E404 B  REGISTER NVICIP4 (rw): Interrupt Priority Register n
0xE000E404 C   FIELD 00w08 PRI4 (rw): Priority of interrupt 4
0xE000E405 B  REGISTER NVICIP5 (rw): Interrupt Priority Register n
0xE000E405 C   FIELD 00w08 PRI5 (rw): Priority of interrupt 5
0xE000E406 B  REGISTER NVICIP6 (rw): Interrupt Priority Register n
0xE000E406 C   FIELD 00w08 PRI6 (rw): Priority of interrupt 6
0xE000E407 B  REGISTER NVICIP7 (rw): Interrupt Priority Register n
0xE000E407 C   FIELD 00w08 PRI7 (rw): Priority of interrupt 7
0xE000E408 B  REGISTER NVICIP8 (rw): Interrupt Priority Register n
0xE000E408 C   FIELD 00w08 PRI8 (rw): Priority of interrupt 8
0xE000E409 B  REGISTER NVICIP9 (rw): Interrupt Priority Register n
0xE000E409 C   FIELD 00w08 PRI9 (rw): Priority of interrupt 9
0xE000E40A B  REGISTER NVICIP10 (rw): Interrupt Priority Register n
0xE000E40A C   FIELD 00w08 PRI10 (rw): Priority of interrupt 10
0xE000E40B B  REGISTER NVICIP11 (rw): Interrupt Priority Register n
0xE000E40B C   FIELD 00w08 PRI11 (rw): Priority of interrupt 11
0xE000E40C B  REGISTER NVICIP12 (rw): Interrupt Priority Register n
0xE000E40C C   FIELD 00w08 PRI12 (rw): Priority of interrupt 12
0xE000E40D B  REGISTER NVICIP13 (rw): Interrupt Priority Register n
0xE000E40D C   FIELD 00w08 PRI13 (rw): Priority of interrupt 13
0xE000E40E B  REGISTER NVICIP14 (rw): Interrupt Priority Register n
0xE000E40E C   FIELD 00w08 PRI14 (rw): Priority of interrupt 14
0xE000E40F B  REGISTER NVICIP15 (rw): Interrupt Priority Register n
0xE000E40F C   FIELD 00w08 PRI15 (rw): Priority of interrupt 15
0xE000E410 B  REGISTER NVICIP16 (rw): Interrupt Priority Register n
0xE000E410 C   FIELD 00w08 PRI16 (rw): Priority of interrupt 16
0xE000E411 B  REGISTER NVICIP17 (rw): Interrupt Priority Register n
0xE000E411 C   FIELD 00w08 PRI17 (rw): Priority of interrupt 17
0xE000E412 B  REGISTER NVICIP18 (rw): Interrupt Priority Register n
0xE000E412 C   FIELD 00w08 PRI18 (rw): Priority of interrupt 18
0xE000E413 B  REGISTER NVICIP19 (rw): Interrupt Priority Register n
0xE000E413 C   FIELD 00w08 PRI19 (rw): Priority of interrupt 19
0xE000E414 B  REGISTER NVICIP20 (rw): Interrupt Priority Register n
0xE000E414 C   FIELD 00w08 PRI20 (rw): Priority of interrupt 20
0xE000E415 B  REGISTER NVICIP21 (rw): Interrupt Priority Register n
0xE000E415 C   FIELD 00w08 PRI21 (rw): Priority of interrupt 21
0xE000E416 B  REGISTER NVICIP22 (rw): Interrupt Priority Register n
0xE000E416 C   FIELD 00w08 PRI22 (rw): Priority of interrupt 22
0xE000E417 B  REGISTER NVICIP23 (rw): Interrupt Priority Register n
0xE000E417 C   FIELD 00w08 PRI23 (rw): Priority of interrupt 23
0xE000E418 B  REGISTER NVICIP24 (rw): Interrupt Priority Register n
0xE000E418 C   FIELD 00w08 PRI24 (rw): Priority of interrupt 24
0xE000E419 B  REGISTER NVICIP25 (rw): Interrupt Priority Register n
0xE000E419 C   FIELD 00w08 PRI25 (rw): Priority of interrupt 25
0xE000E41A B  REGISTER NVICIP26 (rw): Interrupt Priority Register n
0xE000E41A C   FIELD 00w08 PRI26 (rw): Priority of interrupt 26
0xE000E41B B  REGISTER NVICIP27 (rw): Interrupt Priority Register n
0xE000E41B C   FIELD 00w08 PRI27 (rw): Priority of interrupt 27
0xE000E41C B  REGISTER NVICIP28 (rw): Interrupt Priority Register n
0xE000E41C C   FIELD 00w08 PRI28 (rw): Priority of interrupt 28
0xE000E41D B  REGISTER NVICIP29 (rw): Interrupt Priority Register n
0xE000E41D C   FIELD 00w08 PRI29 (rw): Priority of interrupt 29
0xE000E41E B  REGISTER NVICIP30 (rw): Interrupt Priority Register n
0xE000E41E C   FIELD 00w08 PRI30 (rw): Priority of interrupt 30
0xE000E41F B  REGISTER NVICIP31 (rw): Interrupt Priority Register n
0xE000E41F C   FIELD 00w08 PRI31 (rw): Priority of interrupt 31
0xE000E420 B  REGISTER NVICIP32 (rw): Interrupt Priority Register n
0xE000E420 C   FIELD 00w08 PRI32 (rw): Priority of interrupt 32
0xE000E421 B  REGISTER NVICIP33 (rw): Interrupt Priority Register n
0xE000E421 C   FIELD 00w08 PRI33 (rw): Priority of interrupt 33
0xE000E422 B  REGISTER NVICIP34 (rw): Interrupt Priority Register n
0xE000E422 C   FIELD 00w08 PRI34 (rw): Priority of interrupt 34
0xE000E423 B  REGISTER NVICIP35 (rw): Interrupt Priority Register n
0xE000E423 C   FIELD 00w08 PRI35 (rw): Priority of interrupt 35
0xE000E424 B  REGISTER NVICIP36 (rw): Interrupt Priority Register n
0xE000E424 C   FIELD 00w08 PRI36 (rw): Priority of interrupt 36
0xE000E425 B  REGISTER NVICIP37 (rw): Interrupt Priority Register n
0xE000E425 C   FIELD 00w08 PRI37 (rw): Priority of interrupt 37
0xE000E426 B  REGISTER NVICIP38 (rw): Interrupt Priority Register n
0xE000E426 C   FIELD 00w08 PRI38 (rw): Priority of interrupt 38
0xE000E427 B  REGISTER NVICIP39 (rw): Interrupt Priority Register n
0xE000E427 C   FIELD 00w08 PRI39 (rw): Priority of interrupt 39
0xE000E428 B  REGISTER NVICIP40 (rw): Interrupt Priority Register n
0xE000E428 C   FIELD 00w08 PRI40 (rw): Priority of interrupt 40
0xE000E429 B  REGISTER NVICIP41 (rw): Interrupt Priority Register n
0xE000E429 C   FIELD 00w08 PRI41 (rw): Priority of interrupt 41
0xE000E42A B  REGISTER NVICIP42 (rw): Interrupt Priority Register n
0xE000E42A C   FIELD 00w08 PRI42 (rw): Priority of interrupt 42
0xE000E42B B  REGISTER NVICIP43 (rw): Interrupt Priority Register n
0xE000E42B C   FIELD 00w08 PRI43 (rw): Priority of interrupt 43
0xE000E42C B  REGISTER NVICIP44 (rw): Interrupt Priority Register n
0xE000E42C C   FIELD 00w08 PRI44 (rw): Priority of interrupt 44
0xE000E42D B  REGISTER NVICIP45 (rw): Interrupt Priority Register n
0xE000E42D C   FIELD 00w08 PRI45 (rw): Priority of interrupt 45
0xE000E42E B  REGISTER NVICIP46 (rw): Interrupt Priority Register n
0xE000E42E C   FIELD 00w08 PRI46 (rw): Priority of interrupt 46
0xE000E42F B  REGISTER NVICIP47 (rw): Interrupt Priority Register n
0xE000E42F C   FIELD 00w08 PRI47 (rw): Priority of interrupt 47
0xE000E430 B  REGISTER NVICIP48 (rw): Interrupt Priority Register n
0xE000E430 C   FIELD 00w08 PRI48 (rw): Priority of interrupt 48
0xE000E431 B  REGISTER NVICIP49 (rw): Interrupt Priority Register n
0xE000E431 C   FIELD 00w08 PRI49 (rw): Priority of interrupt 49
0xE000E432 B  REGISTER NVICIP50 (rw): Interrupt Priority Register n
0xE000E432 C   FIELD 00w08 PRI50 (rw): Priority of interrupt 50
0xE000E433 B  REGISTER NVICIP51 (rw): Interrupt Priority Register n
0xE000E433 C   FIELD 00w08 PRI51 (rw): Priority of interrupt 51
0xE000E434 B  REGISTER NVICIP52 (rw): Interrupt Priority Register n
0xE000E434 C   FIELD 00w08 PRI52 (rw): Priority of interrupt 52
0xE000E435 B  REGISTER NVICIP53 (rw): Interrupt Priority Register n
0xE000E435 C   FIELD 00w08 PRI53 (rw): Priority of interrupt 53
0xE000E436 B  REGISTER NVICIP54 (rw): Interrupt Priority Register n
0xE000E436 C   FIELD 00w08 PRI54 (rw): Priority of interrupt 54
0xE000E437 B  REGISTER NVICIP55 (rw): Interrupt Priority Register n
0xE000E437 C   FIELD 00w08 PRI55 (rw): Priority of interrupt 55
0xE000E438 B  REGISTER NVICIP56 (rw): Interrupt Priority Register n
0xE000E438 C   FIELD 00w08 PRI56 (rw): Priority of interrupt 56
0xE000E439 B  REGISTER NVICIP57 (rw): Interrupt Priority Register n
0xE000E439 C   FIELD 00w08 PRI57 (rw): Priority of interrupt 57
0xE000E43A B  REGISTER NVICIP58 (rw): Interrupt Priority Register n
0xE000E43A C   FIELD 00w08 PRI58 (rw): Priority of interrupt 58
0xE000E43B B  REGISTER NVICIP59 (rw): Interrupt Priority Register n
0xE000E43B C   FIELD 00w08 PRI59 (rw): Priority of interrupt 59
0xE000E43C B  REGISTER NVICIP60 (rw): Interrupt Priority Register n
0xE000E43C C   FIELD 00w08 PRI60 (rw): Priority of interrupt 60
0xE000E43D B  REGISTER NVICIP61 (rw): Interrupt Priority Register n
0xE000E43D C   FIELD 00w08 PRI61 (rw): Priority of interrupt 61
0xE000E43E B  REGISTER NVICIP62 (rw): Interrupt Priority Register n
0xE000E43E C   FIELD 00w08 PRI62 (rw): Priority of interrupt 62
0xE000E43F B  REGISTER NVICIP63 (rw): Interrupt Priority Register n
0xE000E43F C   FIELD 00w08 PRI63 (rw): Priority of interrupt 63
0xE000E440 B  REGISTER NVICIP64 (rw): Interrupt Priority Register n
0xE000E440 C   FIELD 00w08 PRI64 (rw): Priority of interrupt 64
0xE000E441 B  REGISTER NVICIP65 (rw): Interrupt Priority Register n
0xE000E441 C   FIELD 00w08 PRI65 (rw): Priority of interrupt 65
0xE000E442 B  REGISTER NVICIP66 (rw): Interrupt Priority Register n
0xE000E442 C   FIELD 00w08 PRI66 (rw): Priority of interrupt 66
0xE000E443 B  REGISTER NVICIP67 (rw): Interrupt Priority Register n
0xE000E443 C   FIELD 00w08 PRI67 (rw): Priority of interrupt 67
0xE000E444 B  REGISTER NVICIP68 (rw): Interrupt Priority Register n
0xE000E444 C   FIELD 00w08 PRI68 (rw): Priority of interrupt 68
0xE000E445 B  REGISTER NVICIP69 (rw): Interrupt Priority Register n
0xE000E445 C   FIELD 00w08 PRI69 (rw): Priority of interrupt 69
0xE000E446 B  REGISTER NVICIP70 (rw): Interrupt Priority Register n
0xE000E446 C   FIELD 00w08 PRI70 (rw): Priority of interrupt 70
0xE000E447 B  REGISTER NVICIP71 (rw): Interrupt Priority Register n
0xE000E447 C   FIELD 00w08 PRI71 (rw): Priority of interrupt 71
0xE000E448 B  REGISTER NVICIP72 (rw): Interrupt Priority Register n
0xE000E448 C   FIELD 00w08 PRI72 (rw): Priority of interrupt 72
0xE000E449 B  REGISTER NVICIP73 (rw): Interrupt Priority Register n
0xE000E449 C   FIELD 00w08 PRI73 (rw): Priority of interrupt 73
0xE000E44A B  REGISTER NVICIP74 (rw): Interrupt Priority Register n
0xE000E44A C   FIELD 00w08 PRI74 (rw): Priority of interrupt 74
0xE000E44B B  REGISTER NVICIP75 (rw): Interrupt Priority Register n
0xE000E44B C   FIELD 00w08 PRI75 (rw): Priority of interrupt 75
0xE000E44C B  REGISTER NVICIP76 (rw): Interrupt Priority Register n
0xE000E44C C   FIELD 00w08 PRI76 (rw): Priority of interrupt 76
0xE000E44D B  REGISTER NVICIP77 (rw): Interrupt Priority Register n
0xE000E44D C   FIELD 00w08 PRI77 (rw): Priority of interrupt 77
0xE000E44E B  REGISTER NVICIP78 (rw): Interrupt Priority Register n
0xE000E44E C   FIELD 00w08 PRI78 (rw): Priority of interrupt 78
0xE000E44F B  REGISTER NVICIP79 (rw): Interrupt Priority Register n
0xE000E44F C   FIELD 00w08 PRI79 (rw): Priority of interrupt 79
0xE000E450 B  REGISTER NVICIP80 (rw): Interrupt Priority Register n
0xE000E450 C   FIELD 00w08 PRI80 (rw): Priority of interrupt 80
0xE000E451 B  REGISTER NVICIP81 (rw): Interrupt Priority Register n
0xE000E451 C   FIELD 00w08 PRI81 (rw): Priority of interrupt 81
0xE000E452 B  REGISTER NVICIP82 (rw): Interrupt Priority Register n
0xE000E452 C   FIELD 00w08 PRI82 (rw): Priority of interrupt 82
0xE000E453 B  REGISTER NVICIP83 (rw): Interrupt Priority Register n
0xE000E453 C   FIELD 00w08 PRI83 (rw): Priority of interrupt 83
0xE000E454 B  REGISTER NVICIP84 (rw): Interrupt Priority Register n
0xE000E454 C   FIELD 00w08 PRI84 (rw): Priority of interrupt 84
0xE000E455 B  REGISTER NVICIP85 (rw): Interrupt Priority Register n
0xE000E455 C   FIELD 00w08 PRI85 (rw): Priority of interrupt 85
0xE000E456 B  REGISTER NVICIP86 (rw): Interrupt Priority Register n
0xE000E456 C   FIELD 00w08 PRI86 (rw): Priority of interrupt 86
0xE000E457 B  REGISTER NVICIP87 (rw): Interrupt Priority Register n
0xE000E457 C   FIELD 00w08 PRI87 (rw): Priority of interrupt 87
0xE000E458 B  REGISTER NVICIP88 (rw): Interrupt Priority Register n
0xE000E458 C   FIELD 00w08 PRI88 (rw): Priority of interrupt 88
0xE000E459 B  REGISTER NVICIP89 (rw): Interrupt Priority Register n
0xE000E459 C   FIELD 00w08 PRI89 (rw): Priority of interrupt 89
0xE000E45A B  REGISTER NVICIP90 (rw): Interrupt Priority Register n
0xE000E45A C   FIELD 00w08 PRI90 (rw): Priority of interrupt 90
0xE000E45B B  REGISTER NVICIP91 (rw): Interrupt Priority Register n
0xE000E45B C   FIELD 00w08 PRI91 (rw): Priority of interrupt 91
0xE000E45C B  REGISTER NVICIP92 (rw): Interrupt Priority Register n
0xE000E45C C   FIELD 00w08 PRI92 (rw): Priority of interrupt 92
0xE000E45D B  REGISTER NVICIP93 (rw): Interrupt Priority Register n
0xE000E45D C   FIELD 00w08 PRI93 (rw): Priority of interrupt 93
0xE000E45E B  REGISTER NVICIP94 (rw): Interrupt Priority Register n
0xE000E45E C   FIELD 00w08 PRI94 (rw): Priority of interrupt 94
0xE000E45F B  REGISTER NVICIP95 (rw): Interrupt Priority Register n
0xE000E45F C   FIELD 00w08 PRI95 (rw): Priority of interrupt 95
0xE000E460 B  REGISTER NVICIP96 (rw): Interrupt Priority Register n
0xE000E460 C   FIELD 00w08 PRI96 (rw): Priority of interrupt 96
0xE000E461 B  REGISTER NVICIP97 (rw): Interrupt Priority Register n
0xE000E461 C   FIELD 00w08 PRI97 (rw): Priority of interrupt 97
0xE000E462 B  REGISTER NVICIP98 (rw): Interrupt Priority Register n
0xE000E462 C   FIELD 00w08 PRI98 (rw): Priority of interrupt 98
0xE000E463 B  REGISTER NVICIP99 (rw): Interrupt Priority Register n
0xE000E463 C   FIELD 00w08 PRI99 (rw): Priority of interrupt 99
0xE000E464 B  REGISTER NVICIP100 (rw): Interrupt Priority Register n
0xE000E464 C   FIELD 00w08 PRI100 (rw): Priority of interrupt 100
0xE000E465 B  REGISTER NVICIP101 (rw): Interrupt Priority Register n
0xE000E465 C   FIELD 00w08 PRI101 (rw): Priority of interrupt 101
0xE000E466 B  REGISTER NVICIP102 (rw): Interrupt Priority Register n
0xE000E466 C   FIELD 00w08 PRI102 (rw): Priority of interrupt 102
0xE000E467 B  REGISTER NVICIP103 (rw): Interrupt Priority Register n
0xE000E467 C   FIELD 00w08 PRI103 (rw): Priority of interrupt 103
0xE000E468 B  REGISTER NVICIP104 (rw): Interrupt Priority Register n
0xE000E468 C   FIELD 00w08 PRI104 (rw): Priority of interrupt 104
0xE000E469 B  REGISTER NVICIP105 (rw): Interrupt Priority Register n
0xE000E469 C   FIELD 00w08 PRI105 (rw): Priority of interrupt 105
0xE000ED00 B  REGISTER CPUID (ro): CPUID Base Register
0xE000ED00 C   FIELD 00w04 REVISION (ro): Indicates patch release: 0x0 = Patch 0
0xE000ED00 C   FIELD 04w12 PARTNO (ro): Indicates part number
0xE000ED00 C   FIELD 20w04 VARIANT (ro): Indicates processor revision: 0x2 = Revision 2
0xE000ED00 C   FIELD 24w08 IMPLEMENTER (ro): Implementer code
0xE000ED04 B  REGISTER ICSR (rw): Interrupt Control and State Register
0xE000ED04 C   FIELD 00w09 VECTACTIVE (ro): Active exception number
0xE000ED04 C   FIELD 11w01 RETTOBASE (ro): no description available
0xE000ED04 C   FIELD 12w06 VECTPENDING (ro): Exception number of the highest priority pending enabled exception
0xE000ED04 C   FIELD 22w01 ISRPENDING (ro): no description available
0xE000ED04 C   FIELD 23w01 ISRPREEMPT (ro): no description available
0xE000ED04 C   FIELD 25w01 PENDSTCLR (wo): no description available
0xE000ED04 C   FIELD 26w01 PENDSTSET (rw): no description available
0xE000ED04 C   FIELD 27w01 PENDSVCLR (wo): no description available
0xE000ED04 C   FIELD 28w01 PENDSVSET (rw): no description available
0xE000ED04 C   FIELD 31w01 NMIPENDSET (rw): no description available
0xE000ED08 B  REGISTER VTOR (rw): Vector Table Offset Register
0xE000ED08 C   FIELD 07w25 TBLOFF (rw): Vector table base offset
0xE000ED0C B  REGISTER AIRCR (rw): Application Interrupt and Reset Control Register
0xE000ED0C C   FIELD 00w01 VECTRESET (wo): no description available
0xE000ED0C C   FIELD 01w01 VECTCLRACTIVE (wo): no description available
0xE000ED0C C   FIELD 02w01 SYSRESETREQ (wo): no description available
0xE000ED0C C   FIELD 08w03 PRIGROUP (rw): Interrupt priority grouping field. This field determines the split of group priority from subpriority.
0xE000ED0C C   FIELD 15w01 ENDIANNESS (ro): no description available
0xE000ED0C C   FIELD 16w16 VECTKEY (rw): Register key
0xE000ED10 B  REGISTER SCR (rw): System Control Register
0xE000ED10 C   FIELD 01w01 SLEEPONEXIT (rw): no description available
0xE000ED10 C   FIELD 02w01 SLEEPDEEP (rw): no description available
0xE000ED10 C   FIELD 04w01 SEVONPEND (rw): no description available
0xE000ED14 B  REGISTER CCR (rw): Configuration and Control Register
0xE000ED14 C   FIELD 00w01 NONBASETHRDENA (rw): no description available
0xE000ED14 C   FIELD 01w01 USERSETMPEND (rw): Enables unprivileged software access to the STIR
0xE000ED14 C   FIELD 03w01 UNALIGN_TRP (rw): Enables unaligned access traps
0xE000ED14 C   FIELD 04w01 DIV_0_TRP (rw): Enables faulting or halting when the processor executes an SDIV or UDIV instruction with a divisor of 0
0xE000ED14 C   FIELD 08w01 BFHFNMIGN (rw): Enables handlers with priority -1 or -2 to ignore data BusFaults caused by load and store instructions.
0xE000ED14 C   FIELD 09w01 STKALIGN (rw): Indicates stack alignment on exception entry
0xE000ED18 B  REGISTER SHPR1 (rw): System Handler Priority Register 1
0xE000ED18 C   FIELD 00w08 PRI_4 (rw): Priority of system handler 4, MemManage
0xE000ED18 C   FIELD 08w08 PRI_5 (rw): Priority of system handler 5, BusFault
0xE000ED18 C   FIELD 16w08 PRI_6 (rw): Priority of system handler 6, UsageFault
0xE000ED1C B  REGISTER SHPR2 (rw): System Handler Priority Register 2
0xE000ED1C C   FIELD 24w08 PRI_11 (rw): Priority of system handler 11, SVCall
0xE000ED20 B  REGISTER SHPR3 (rw): System Handler Priority Register 3
0xE000ED20 C   FIELD 16w08 PRI_14 (rw): Priority of system handler 14, PendSV
0xE000ED20 C   FIELD 24w08 PRI_15 (rw): Priority of system handler 15, SysTick exception
0xE000ED24 B  REGISTER SHCSR (rw): System Handler Control and State Register
0xE000ED24 C   FIELD 00w01 MEMFAULTACT (rw): no description available
0xE000ED24 C   FIELD 01w01 BUSFAULTACT (rw): no description available
0xE000ED24 C   FIELD 03w01 USGFAULTACT (rw): no description available
0xE000ED24 C   FIELD 07w01 SVCALLACT (rw): no description available
0xE000ED24 C   FIELD 08w01 MONITORACT (rw): no description available
0xE000ED24 C   FIELD 10w01 PENDSVACT (rw): no description available
0xE000ED24 C   FIELD 11w01 SYSTICKACT (rw): no description available
0xE000ED24 C   FIELD 12w01 USGFAULTPENDED (rw): no description available
0xE000ED24 C   FIELD 13w01 MEMFAULTPENDED (rw): no description available
0xE000ED24 C   FIELD 14w01 BUSFAULTPENDED (rw): no description available
0xE000ED24 C   FIELD 15w01 SVCALLPENDED (rw): no description available
0xE000ED24 C   FIELD 16w01 MEMFAULTENA (rw): no description available
0xE000ED24 C   FIELD 17w01 BUSFAULTENA (rw): no description available
0xE000ED24 C   FIELD 18w01 USGFAULTENA (rw): no description available
0xE000ED28 B  REGISTER CFSR (rw): Configurable Fault Status Registers
0xE000ED28 C   FIELD 00w01 IACCVIOL (rw): no description available
0xE000ED28 C   FIELD 01w01 DACCVIOL (rw): no description available
0xE000ED28 C   FIELD 03w01 MUNSTKERR (rw): no description available
0xE000ED28 C   FIELD 04w01 MSTKERR (rw): no description available
0xE000ED28 C   FIELD 05w01 MLSPERR (rw): no description available
0xE000ED28 C   FIELD 07w01 MMARVALID (rw): no description available
0xE000ED28 C   FIELD 08w01 IBUSERR (rw): no description available
0xE000ED28 C   FIELD 09w01 PRECISERR (rw): no description available
0xE000ED28 C   FIELD 10w01 IMPRECISERR (rw): no description available
0xE000ED28 C   FIELD 11w01 UNSTKERR (rw): no description available
0xE000ED28 C   FIELD 12w01 STKERR (rw): no description available
0xE000ED28 C   FIELD 13w01 LSPERR (rw): no description available
0xE000ED28 C   FIELD 15w01 BFARVALID (rw): no description available
0xE000ED28 C   FIELD 16w01 UNDEFINSTR (rw): no description available
0xE000ED28 C   FIELD 17w01 INVSTATE (rw): no description available
0xE000ED28 C   FIELD 18w01 INVPC (rw): no description available
0xE000ED28 C   FIELD 19w01 NOCP (rw): no description available
0xE000ED28 C   FIELD 24w01 UNALIGNED (rw): no description available
0xE000ED28 C   FIELD 25w01 DIVBYZERO (rw): no description available
0xE000ED2C B  REGISTER HFSR (rw): HardFault Status register
0xE000ED2C C   FIELD 01w01 VECTTBL (rw): no description available
0xE000ED2C C   FIELD 30w01 FORCED (rw): no description available
0xE000ED2C C   FIELD 31w01 DEBUGEVT (rw): no description available
0xE000ED30 B  REGISTER DFSR (rw): Debug Fault Status Register
0xE000ED30 C   FIELD 00w01 HALTED (rw): no description available
0xE000ED30 C   FIELD 01w01 BKPT (rw): no description available
0xE000ED30 C   FIELD 02w01 DWTTRAP (rw): no description available
0xE000ED30 C   FIELD 03w01 VCATCH (rw): no description available
0xE000ED30 C   FIELD 04w01 EXTERNAL (rw): no description available
0xE000ED34 B  REGISTER MMFAR (rw): MemManage Address Register
0xE000ED34 C   FIELD 00w32 ADDRESS (rw): Address of MemManage fault location
0xE000ED38 B  REGISTER BFAR (rw): BusFault Address Register
0xE000ED38 C   FIELD 00w32 ADDRESS (rw): Address of the BusFault location
0xE000ED3C B  REGISTER AFSR (rw): Auxiliary Fault Status Register
0xE000ED3C C   FIELD 00w32 AUXFAULT (rw): Latched version of the AUXFAULT inputs
0xE000ED88 B  REGISTER CPACR (rw): Coprocessor Access Control Register
0xE000ED88 C   FIELD 20w02 CP10 (rw): Access privileges for coprocessor 10.
0xE000ED88 C   FIELD 22w02 CP11 (rw): Access privileges for coprocessor 11.
0xE000EF00 B  REGISTER NVICSTIR (rw): Software Trigger Interrupt Register
0xE000EF00 C   FIELD 00w09 INTID (rw): Interrupt ID of the interrupt to trigger, in the range 0-239. For example, a value of 0x03 specifies interrupt IRQ3.
0xE000EF34 B  REGISTER FPCCR (rw): Floating-point Context Control Register
0xE000EF34 C   FIELD 00w01 LSPACT (rw): Lazy state preservation.
0xE000EF34 C   FIELD 01w01 USER (rw): Privilege level when the floating-point stack frame was allocated.
0xE000EF34 C   FIELD 03w01 THREAD (rw): Mode when the floating-point stack frame was allocated.
0xE000EF34 C   FIELD 04w01 HFRDY (rw): Permission to set the HardFault handler to the pending state when the floating-point stack frame was allocated.
0xE000EF34 C   FIELD 05w01 MMRDY (rw): Permission to set the MemManage handler to the pending state when the floating-point stack frame was allocated.
0xE000EF34 C   FIELD 06w01 BFRDY (rw): Permission to set the BusFault handler to the pending state when the floating-point stack frame was allocated.
0xE000EF34 C   FIELD 08w01 MONRDY (rw): Permission to set the MON_PEND when the floating-point stack frame was allocated.
0xE000EF34 C   FIELD 30w01 LSPEN (rw): Lazy state preservation for floating-point context.
0xE000EF34 C   FIELD 31w01 ASPEN (rw): Enables CONTROL2 setting on execution of a floating-point instruction. This results in automatic hardware state preservation and restoration, for floating-point context, on exception entry and exit.
0xE000EF38 B  REGISTER FPCAR (rw): Floating-point Context Address Register
0xE000EF38 C   FIELD 03w29 ADDRESS (rw): The location of the unpopulated floating-point register space allocated on an exception stack frame.
0xE000EF3C B  REGISTER FPDSCR (rw): Floating-point Default Status Control Register
0xE000EF3C C   FIELD 22w02 RMode (rw): Default value for FPSCR.RMode (Rounding Mode control field).
0xE000EF3C C   FIELD 24w01 FZ (rw): Default value for FPSCR.FZ (Flush-to-zero mode control bit).
0xE000EF3C C   FIELD 25w01 DN (rw): Default value for FPSCR.DN (Default NaN mode control bit).
0xE000EF3C C   FIELD 26w01 AHP (rw): Default value for FPSCR.AHP (Alternative half-precision control bit).
0xE0041000 A PERIPHERAL ETM
0xE0041000 B  REGISTER CR (rw): Main Control Register
0xE0041000 C   FIELD 00w01 ETMPD (rw): ETM power down. This bit can be used by an implementation to control if the ETM is in a low power state. This bit must be cleared by the trace software tools at the beginning of a debug session. When this bit is set to 1, writes to some registers and fields might be ignored.
0xE0041000 C   FIELD 04w03 PS (rw): Port size. The ETM-M4 has no influence over the external pins used for trace. These bits are implemented but not used. On an ETM reset these bits reset to 0b001.
0xE0041000 C   FIELD 07w01 SP (rw): Stall processor. The FIFOFULL output can be used to stall the processor to prevent overflow. The FIFOFULL output is only enabled when the stall processor bit is set to 1. When the bit is 0 the FIFOFULL output remains LOW at all times and the FIFO overflows if there are too many trace packets. Trace resumes without corruption once the FIFO has drained, if overflow does occur. An ETM reset sets this bit to 0.
0xE0041000 C   FIELD 08w01 BO (rw): Branch output. When set to 1 all branch addresses are output, even if the branch was because of a direct branch instruction. Setting this bit enables reconstruction of the program flow without having access to the memory image of the code being executed. When this bit is set to 1, more trace data is generated, and this may affect the performance of the trace system. Information about the execution of a branch is traced regardless of the state of this bit. An ETM reset sets this bit to 0.
0xE0041000 C   FIELD 09w01 DRC (rw): Debug request control. When set to 1 and the trigger event occurs, the DBGRQ output is asserted until DBGACK is observed. This enables the ARM processor to be forced into Debug state. An ETM reset sets this bit to 0.
0xE0041000 C   FIELD 10w01 ETMP (rw): ETM programming. This bit must be set to 1 at the start of the ETM programming sequence. Tracing is prevented while this bit is set to 1. On an ETM reset this bit is set to b1.
0xE0041000 C   FIELD 11w01 ETMPS (rw): ETM port selection. This bit can be used to control other trace components in an implementation. This bit must be set by the trace software tools to ensure that trace output is enabled from this ETM. An ETM reset sets this bit to 0.
0xE0041000 C   FIELD 13w01 PM2 (rw): This bit is implemented but has no function. An ETM reset sets this bit to 0.
0xE0041000 C   FIELD 16w02 PM (rw): These bits are implemented but have no function. An ETM reset sets these bits to 0.
0xE0041000 C   FIELD 21w01 PS3 (rw): This bit is implemented but has no function. An ETM reset sets this bit to 0.
0xE0041000 C   FIELD 28w01 TE (rw): When set, this bit enables timestamping. An ETM reset sets this bit to 0.
0xE0041004 B  REGISTER CCR (ro): Configuration Code Register
0xE0041004 C   FIELD 00w04 NumberOfAddressComparatorPairs (ro): Number of address comparator pairs. The value of these bits is b0000, indicating that address comparator pairs are not implemented.
0xE0041004 C   FIELD 04w04 NDVC (ro): Number of data value comparators. The value of these bits is b0000, indicating that data value comparators are not implemented.
0xE0041004 C   FIELD 08w05 NMMD (ro): Number of memory map decoders. The value of these bits is b00000, indicating that memory map decoder inputs are not implemented.
0xE0041004 C   FIELD 13w03 NC (ro): Number of counters. The value of these bits is b001, indicating that one counter is implemented.
0xE0041004 C   FIELD 16w01 SP (ro): Sequencer present. The value of this bit is 0, indicating that the sequencer is not implemented.
0xE0041004 C   FIELD 17w03 NEI (ro): Number of external inputs. The value of these bits is between b000 and b010, indicating the number of external inputs, from 0 to 2, implemented in the system.
0xE0041004 C   FIELD 20w03 NEO (ro): Number of external outputs. The value of these bits is b000, indicating that no external outputs are supported.
0xE0041004 C   FIELD 23w01 FFLP (ro): FIFOFULL logic present. The value of this bit is 1, indicating that FIFOFULL logic is present in the ETM. To use FIFOFULL the system must also support the function, as indicated by bit [8] of ETMSCR.
0xE0041004 C   FIELD 24w02 NCIDC (ro): Number of Context ID comparators. The value of these bits is b00, indicating that Context ID comparators are not implemented.
0xE0041004 C   FIELD 26w01 TSSBP (ro): Trace start/stop block present. The value of this bit is 1, indicating that the Trace start/stop block is present.
0xE0041004 C   FIELD 27w01 CMA (ro): Coprocessor and memory access. The value of this bit is 1, indicating that memory-mapped access to registers is supported.
0xE0041004 C   FIELD 31w01 ETMIDRP (ro): The value of this bit is 1, indicating that the ETMIDR, register 0x79, is present and defines the ETM architecture version in use.
0xE0041008 B  REGISTER TRIGGER (rw): Trigger Event Register
0xE0041008 C   FIELD 00w17 TriggerEvent (rw): Trigger event
0xE0041010 B  REGISTER SR (rw): ETM Status Register
0xE0041010 C   FIELD 00w01 UOF (ro): Untraced overflow flag. If set to 1, there is an overflow that has not yet been traced. This bit is cleared to 0 when either: - trace is restarted - the ETM Power Down bit, bit [0] of the ETM Control Register, 0x00, is set to 1. Note: Setting or clearing the ETM programming bit does not cause this bit to be cleared to 0.
0xE0041010 C   FIELD 01w01 Progbit (ro): ETM programming bit value (Progbit). The current effective value of the ETM Programming bit (ETM Control Register bit [10]). Tou must wait for this bit to go to 1 before you start to program the ETM.
0xE0041010 C   FIELD 02w01 Status (rw): Holds the current status of the trace start/stop resource. If set to 1, it indicates that a trace on address has been matched, without a corresponding trace off address match.
0xE0041010 C   FIELD 03w01 Trigger (rw): Trigger bit. Set when the trigger occurs, and prevents the trigger from being output until the ETM is next programmed.
0xE0041014 B  REGISTER SCR (ro): System Configuration Register
0xE0041014 C   FIELD 00w03 MaximumPortSize (ro): Maximum ETM port size bits [2:0]. These bits are used in conjunction with bit [9]. The value of these bits is b001.
0xE0041014 C   FIELD 08w01 FIFOFULLsupported (ro): FIFOFULL supported. The value of this bit is 1, indicating that FIFOFULL is supported. This bit is used in conjunction with bit [23] of the ETMCCR.
0xE0041014 C   FIELD 09w01 MaximumPortSize3 (ro): Maximum ETM port size bit [3]. This bit is used in conjunction with bits [2:0]. Its value is 0. This has no effect on the TPIU trace port.
0xE0041014 C   FIELD 10w01 PortSizeSupported (ro): Port size supported. This bit reads as 1 if the currently selected port size is supported. This has no effect on the TPIU trace port.
0xE0041014 C   FIELD 11w01 PortModeSupported (ro): Port mode supported. This bit reads as 1 if the currently selected port mode is supported. This has no effect on the TPIU trace port.
0xE0041014 C   FIELD 12w03 N (ro): These bits give the number of supported processors minus 1. The value of these bits is b000, indicating that there is only one processor connected.
0xE0041014 C   FIELD 17w01 NoFetchComparisons (ro): No Fetch comparisons. The value of this bit is 1, indicating that fetch comparisons are not implemented.
0xE0041020 B  REGISTER EEVR (rw): Trace Enable Event Register
0xE0041020 C   FIELD 00w17 TraceEnableEvent (rw): Trace Enable event.
0xE0041024 B  REGISTER TECR1 (rw): Trace Enable Control 1 Register
0xE0041024 C   FIELD 25w01 TraceControlEnable (rw): Trace start/stop enable. The trace start/stop resource, resource 0x5F, is unaffected by the value of this bit.
0xE0041028 B  REGISTER FFLR (rw): FIFOFULL Level Register
0xE0041028 C   FIELD 00w08 FIFOFullLevel (rw): FIFO full level. The number of bytes left in FIFO, below which the FIFOFULL or SupressData signal is asserted. For example, setting this value to 15 causes data trace suppression or processor stalling, if enabled, when there are less than 15 free bytes in the FIFO.
0xE0041140 B  REGISTER CNTRLDVR1 (rw): Free-running counter reload value
0xE0041140 C   FIELD 00w16 IntitialCount (rw): Initial count.
0xE00411E0 B  REGISTER SYNCFR (ro): Synchronization Frequency Register
0xE00411E0 C   FIELD 00w12 SyncFrequency (ro): Synchronization frequency. Default value is 1024.
0xE00411E4 B  REGISTER IDR (ro): ID Register
0xE00411E4 C   FIELD 00w04 ImplementationRevision (ro): Implementation revision. The value of these bits is b0000, indicating implementation revision, 0.
0xE00411E4 C   FIELD 04w04 MinorETMarchitectureVersion (ro): Minor ETM architecture version. The value of these bits is 0b0101, indicating minor architecture version number 5.
0xE00411E4 C   FIELD 08w04 MajorETMarchitectureVersion (ro): Major ETM architecture version. The value of these bits is 0b0010, indicating major architecture version number 3, ETMv3.
0xE00411E4 C   FIELD 12w04 ProcessorFamily (ro): Processor family. The value of these bits is 0b1111, indicating that the processor family is not identified in this register.
0xE00411E4 C   FIELD 16w01 LoadPCfirst (ro): Load PC first. The value of this bit is 0, indicating that data tracing is not supported.
0xE00411E4 C   FIELD 18w01 ThumbInstructionTracing (ro): 32-bit Thumb instruction tracing. The value of this bit is 1, indicating that a 32-bit Thumb instruction is traced as a single instruction.
0xE00411E4 C   FIELD 19w01 SecurityExtensionSupport (ro): Security Extensions support. The value of this bit is 0, indicating that the ETM behaves as if the processor is in Secure state at all times.
0xE00411E4 C   FIELD 20w01 BranchPacketEncoding (ro): Branch packet encoding. The value of this bit is 1, indicating that alternative branch packet encoding is implemented.
0xE00411E4 C   FIELD 24w08 ImplementorCode (ro): Implementor code. These bits identify ARM as the implementor of the processor. The value of these bits is 01000001.
0xE00411E8 B  REGISTER CCER (ro): Configuration Code Extension Register
0xE00411E8 C   FIELD 00w03 ExtendedExternalInputSelectors (ro): Extended external input selectors. The value of these bits is 0, indicating that extended external input selectors are not implemented.
0xE00411E8 C   FIELD 03w08 ExtendedExternalInputBus (ro): Extended external input bus. The value of these bits is 0, indicating that the extended external input bus is not implemented.
0xE00411E8 C   FIELD 11w01 ReadableRegisters (ro): Readable registers. The value of this bit is 1, indicating that all registers are readable.
0xE00411E8 C   FIELD 12w01 DataAddressComparisons (ro): Data address comparisons. The value of this bit is 1, indicating that data address comparisons are not supported.
0xE00411E8 C   FIELD 13w03 InstrumentationResources (ro): Instrumentation resources. The value of these bits is 0b000, indicating that no Instrumentation resources are supported.
0xE00411E8 C   FIELD 16w04 EmbeddedICEwatchpointInputs (ro): EmbeddedICE watchpoint inputs. The value of these bits is 0b0100, indicating that the number of EmbeddedICE watchpoint inputs implemented is four. These inputs come from the DWT.
0xE00411E8 C   FIELD 20w01 TraceStartStopBlockUsesEmbeddedICEwatchpointInputs (ro): Trace Start/Stop block uses EmbeddedICE watchpoint inputs. The value of this bit is 1, indicating that the Trace Start/Stop block uses the EmbeddedICE watchpoint inputs.
0xE00411E8 C   FIELD 21w01 EmbeddedICEbehaviorControlImplemented (ro): EmbeddedICE behavior control implemented. The value of this bit is 0, indicating that the ETMEIBCR is not implemented.
0xE00411E8 C   FIELD 22w01 TimestampingImplemented (ro): Timestamping implemented. This bit is set to 1, indicating that timestamping is implemented.
0xE00411E8 C   FIELD 27w01 ReducedFunctionCounter (ro): Reduced function counter. Set to 1 to indicate that Counter 1 is a reduced function counter.
0xE00411E8 C   FIELD 28w01 TimestampEncoding (ro): Timestamp encoding. Set to 1 to indicate that the timestamp is encoded as a natural binary number.
0xE00411E8 C   FIELD 29w01 TimestampSize (ro): Timestamp size. Set to 0 to indicate a size of 48 bits.
0xE00411F0 B  REGISTER TESSEICR (rw): TraceEnable Start/Stop EmbeddedICE Control Register
0xE00411F0 C   FIELD 00w04 StartResourceSelection (rw): Start resource selection. Setting any of these bits to 1 selects the corresponding EmbeddedICE watchpoint input as a TraceEnable start resource. Bit [0] corresponds to input 1, bit [1] corresponds to input 2, bit [2] corresponds to input 3, and bit [3] corresponds to input 4.
0xE00411F0 C   FIELD 16w04 StopResourceSelection (rw): Stop resource selection. Setting any of these bits to 1 selects the corresponding EmbeddedICE watchpoint input as a TraceEnable stop resource. Bit [16] corresponds to input 1, bit [17] corresponds to input 2, bit [18] corresponds to input 3, and bit [19] corresponds to input 4.
0xE00411F8 B  REGISTER TSEVR (rw): Timestamp Event Register
0xE00411F8 C   FIELD 00w12 TimestampEvent (rw): Timestamp event.
0xE0041200 B  REGISTER TRACEIDR (rw): CoreSight Trace ID Register
0xE0041200 C   FIELD 00w07 TraceID (rw): Trace ID to output onto the trace bus. On an ETM reset this field is cleared to 0x00.
0xE0041208 B  REGISTER IDR2 (ro): ETM ID Register 2
0xE0041314 B  REGISTER PDSR (ro): Device Power-Down Status Register
0xE0041314 C   FIELD 00w01 ETMpoweredup (ro): The value of this bit indicates whether you can access the ETM Trace Registers. The value of this bit is always 1, indicating that the ETM Trace Registers can be accessed.
0xE0041EE0 B  REGISTER _ITMISCIN (ro): Integration Test Miscelaneous Inputs Register
0xE0041EE0 C   FIELD 00w02 EXTIN (ro): A read of these bits returns the value of the EXTIN[1:0] input pins.
0xE0041EE0 C   FIELD 04w01 COREHALT (ro): A read of this bit returns the value of the COREHALT input pin.
0xE0041EE8 B  REGISTER _ITTRIGOUT (rw): Integration Test Trigger Out Register
0xE0041EE8 C   FIELD 00w01 TRIGGER (wo): A write to this bit sets the TRIGGER output.
0xE0041EF0 B  REGISTER _ITATBCTR2 (ro): ETM Integration Test ATB Control 2 Register
0xE0041EF0 C   FIELD 00w01 ATREADY (ro): A read of this bit returns the value of the ETM ATREADY input.
0xE0041EF8 B  REGISTER _ITATBCTR0 (rw): ETM Integration Test ATB Control 0 Register
0xE0041EF8 C   FIELD 00w01 ATVALID (wo): A write to this bit sets the value of the ETM ATVALID output.
0xE0041F00 B  REGISTER ITCTRL (rw): Integration Mode Control Register
0xE0041F00 C   FIELD 00w01 Mode (rw): Enable integration mode. When this bit is set to 1, the device enters integration mode to enable Topology Detection or Integration Testing to be checked. On an ETM reset this bit is cleared to 0.
0xE0041FA0 B  REGISTER CLAIMSET (rw): Claim Tag Set Register
0xE0041FA0 C   FIELD 00w04 CLAIMSET (rw): A bit programmable register bank which sets the Claim Tag Value. Write 1 to set the bit in the claim tag. A read will return a logic 1 for all implemented locations.
0xE0041FA4 B  REGISTER CLAIMCLR (rw): Claim Tag Clear Register
0xE0041FA4 C   FIELD 00w04 CLAIMCLR (rw): A bit programmable register bank that is zero at reset. Write 1 to clear the bit in the claim tag. On reads, returns the current setting of the claim tag.
0xE0041FB0 B  REGISTER LAR (rw): Lock Access Register
0xE0041FB0 C   FIELD 00w32 WriteAccessCode (rw): Write Access Code. A write of 0xC5ACCE55 enables further write access to this device. An invalid write will have the affect of removing write access.
0xE0041FB4 B  REGISTER LSR (ro): Lock Status Register
0xE0041FB4 C   FIELD 00w01 IMP (ro): Lock mechanism is implemented. This bit always reads 1.
0xE0041FB4 C   FIELD 01w01 STATUS (ro): Lock Status. This bit is HIGH when the device is locked, and LOW when unlocked.
0xE0041FB4 C   FIELD 02w01 s8BIT (ro): Access Lock Register size. This bit reads 0 to indicate a 32-bit register is present.
0xE0041FB8 B  REGISTER AUTHSTATUS (ro): Authentication Status Register
0xE0041FB8 C   FIELD 00w02 NSID (ro): Reads as b00, Non-secure invasive debug not supported by the ETM.
0xE0041FB8 C   FIELD 02w02 NSNID (ro): Permission for Non-secure non-invasive debug.
0xE0041FB8 C   FIELD 04w02 SID (ro): Reads as b00, Secure invasive debug not supported by the ETM.
0xE0041FB8 C   FIELD 06w02 SNID (ro): Permission for Secure non-invasive debug.
0xE0041FCC B  REGISTER DEVTYPE (ro): CoreSight Device Type Register
0xE0041FCC C   FIELD 00w04 MajorType (ro): Major Type and Class
0xE0041FCC C   FIELD 04w04 SubType (ro): Sub Type
0xE0041FD0 B  REGISTER PIDR4 (ro): Peripheral Identification Register 4
0xE0041FD0 C   FIELD 00w04 JEP106 (ro): JEP106 continuation code.
0xE0041FD0 C   FIELD 04w04 c4KB (ro): 4KB Count
0xE0041FD4 B  REGISTER PIDR5 (ro): Peripheral Identification Register 5
0xE0041FD8 B  REGISTER PIDR6 (ro): Peripheral Identification Register 6
0xE0041FDC B  REGISTER PIDR7 (ro): Peripheral Identification Register 7
0xE0041FE0 B  REGISTER PIDR0 (ro): Peripheral Identification Register 0
0xE0041FE0 C   FIELD 00w08 PartNumber (ro): Part Number [7:0]
0xE0041FE4 B  REGISTER PIDR1 (ro): Peripheral Identification Register 1
0xE0041FE4 C   FIELD 00w04 PartNumber (ro): Part Number [11:8]
0xE0041FE4 C   FIELD 04w04 JEP106_identity_code (ro): JEP106 identity code [3:0]
0xE0041FE8 B  REGISTER PIDR2 (ro): Peripheral Identification Register 2
0xE0041FE8 C   FIELD 00w03 JEP106_identity_code (ro): JEP106 identity code [6:4]
0xE0041FE8 C   FIELD 04w04 Revision (ro): Revision
0xE0041FEC B  REGISTER PIDR3 (ro): Peripheral Identification Register 3
0xE0041FEC C   FIELD 00w04 CustomerModified (ro): Customer Modified.
0xE0041FEC C   FIELD 04w04 RevAnd (ro): RevAnd
0xE0041FF0 B  REGISTER CIDR0 (ro): Component Identification Register 0
0xE0041FF0 C   FIELD 00w08 Preamble (ro): Preamble
0xE0041FF4 B  REGISTER CIDR1 (ro): Component Identification Register 1
0xE0041FF4 C   FIELD 00w04 Preamble (ro): Preamble
0xE0041FF4 C   FIELD 04w04 ComponentClass (ro): Component class
0xE0041FF8 B  REGISTER CIDR2 (ro): Component Identification Register 2
0xE0041FF8 C   FIELD 00w08 Preamble (ro): Preamble
0xE0041FFC B  REGISTER CIDR3 (ro): Component Identification Register 3
0xE0041FFC C   FIELD 00w08 Preamble (ro): Preamble
INTERRUPT 000: WDT_BOD (WWDT): 
INTERRUPT 001: DMA0 (DMA0): 
INTERRUPT 002: GINT0 (GINT0): 
INTERRUPT 003: GINT1 (GINT1): 
INTERRUPT 004: PIN_INT0 (PINT): 
INTERRUPT 005: PIN_INT1 (PINT): 
INTERRUPT 006: PIN_INT2 (PINT): 
INTERRUPT 007: PIN_INT3 (PINT): 
INTERRUPT 008: UTICK0 (UTICK0): 
INTERRUPT 009: MRT0 (MRT0): 
INTERRUPT 010: CTIMER0 (CTIMER0): 
INTERRUPT 011: CTIMER1 (CTIMER1): 
INTERRUPT 012: SCT0 (SCT0): 
INTERRUPT 013: CTIMER3 (CTIMER3): 
INTERRUPT 014: FLEXCOMM0 (FLEXCOMM0): 
INTERRUPT 014: FLEXCOMM0 (I2C0): 
INTERRUPT 014: FLEXCOMM0 (SPI0): 
INTERRUPT 014: FLEXCOMM0 (USART0): 
INTERRUPT 015: FLEXCOMM1 (FLEXCOMM1): 
INTERRUPT 015: FLEXCOMM1 (I2C1): 
INTERRUPT 015: FLEXCOMM1 (SPI1): 
INTERRUPT 015: FLEXCOMM1 (USART1): 
INTERRUPT 016: FLEXCOMM2 (FLEXCOMM2): 
INTERRUPT 016: FLEXCOMM2 (I2C2): 
INTERRUPT 016: FLEXCOMM2 (SPI2): 
INTERRUPT 016: FLEXCOMM2 (USART2): 
INTERRUPT 017: FLEXCOMM3 (FLEXCOMM3): 
INTERRUPT 017: FLEXCOMM3 (I2C3): 
INTERRUPT 017: FLEXCOMM3 (SPI3): 
INTERRUPT 017: FLEXCOMM3 (USART3): 
INTERRUPT 018: FLEXCOMM4 (FLEXCOMM4): 
INTERRUPT 018: FLEXCOMM4 (I2C4): 
INTERRUPT 018: FLEXCOMM4 (SPI4): 
INTERRUPT 018: FLEXCOMM4 (USART4): 
INTERRUPT 019: FLEXCOMM5 (FLEXCOMM5): 
INTERRUPT 019: FLEXCOMM5 (I2C5): 
INTERRUPT 019: FLEXCOMM5 (SPI5): 
INTERRUPT 019: FLEXCOMM5 (USART5): 
INTERRUPT 020: FLEXCOMM6 (FLEXCOMM6): 
INTERRUPT 020: FLEXCOMM6 (I2C6): 
INTERRUPT 020: FLEXCOMM6 (I2S0): 
INTERRUPT 020: FLEXCOMM6 (SPI6): 
INTERRUPT 020: FLEXCOMM6 (USART6): 
INTERRUPT 021: FLEXCOMM7 (FLEXCOMM7): 
INTERRUPT 021: FLEXCOMM7 (I2C7): 
INTERRUPT 021: FLEXCOMM7 (I2S1): 
INTERRUPT 021: FLEXCOMM7 (SPI7): 
INTERRUPT 021: FLEXCOMM7 (USART7): 
INTERRUPT 022: ADC0_SEQA (ADC0): 
INTERRUPT 023: ADC0_SEQB (ADC0): 
INTERRUPT 024: ADC0_THCMP (ADC0): 
INTERRUPT 025: DMIC0 (DMIC0): 
INTERRUPT 026: HWVAD0 (DMIC0): 
INTERRUPT 027: USB0_NEEDCLK (USB0): 
INTERRUPT 027: USB0_NEEDCLK (USBFSH): 
INTERRUPT 028: USB0 (USB0): 
INTERRUPT 028: USB0 (USBFSH): 
INTERRUPT 029: RTC (RTC): 
INTERRUPT 032: PIN_INT4 (PINT): 
INTERRUPT 033: PIN_INT5 (PINT): 
INTERRUPT 034: PIN_INT6 (PINT): 
INTERRUPT 035: PIN_INT7 (PINT): 
INTERRUPT 036: CTIMER2 (CTIMER2): 
INTERRUPT 037: CTIMER4 (CTIMER4): 
INTERRUPT 038: RIT (RIT): 
INTERRUPT 039: SPIFI0 (SPIFI0): 
INTERRUPT 040: FLEXCOMM8 (FLEXCOMM8): 
INTERRUPT 040: FLEXCOMM8 (I2C8): 
INTERRUPT 040: FLEXCOMM8 (SPI8): 
INTERRUPT 040: FLEXCOMM8 (USART8): 
INTERRUPT 041: FLEXCOMM9 (FLEXCOMM9): 
INTERRUPT 041: FLEXCOMM9 (I2C9): 
INTERRUPT 041: FLEXCOMM9 (SPI9): 
INTERRUPT 041: FLEXCOMM9 (USART9): 
INTERRUPT 042: SDIO (SDIF): 
INTERRUPT 043: CAN0_IRQ0 (CAN0): 
INTERRUPT 044: CAN0_IRQ1 (CAN0): 
INTERRUPT 045: CAN1_IRQ0 (CAN1): 
INTERRUPT 046: CAN1_IRQ1 (CAN1): 
INTERRUPT 047: USB1 (USBHSD): 
INTERRUPT 047: USB1 (USBHSH): 
INTERRUPT 048: USB1_NEEDCLK (USBHSD): 
INTERRUPT 048: USB1_NEEDCLK (USBHSH): 
INTERRUPT 049: ETHERNET (ENET): 
INTERRUPT 050: ETHERNET_PMT (ENET): 
INTERRUPT 051: ETHERNET_MACLP (ENET): 
INTERRUPT 052: EEPROM (EEPROM): 
INTERRUPT 055: SMARTCARD0 (SMARTCARD0): 
INTERRUPT 056: SMARTCARD1 (SMARTCARD1): 
